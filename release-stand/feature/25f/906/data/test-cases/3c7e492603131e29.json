{
  "uid" : "3c7e492603131e29",
  "name" : "test_there_are_not_enough_neons_for_transfer",
  "fullName" : "integration.tests.basic.test_transfers.TestTransfer#test_there_are_not_enough_neons_for_transfer",
  "historyId" : "3117e26b8c517c39669bf27fad63cb3e",
  "time" : {
    "start" : 1650131150310,
    "stop" : 1650131151822,
    "duration" : 1512
  },
  "description" : "There are not enough Neons for transfer",
  "descriptionHtml" : "<p>There are not enough Neons for transfer</p>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: Expected insufficient funds for transfer to be in <ExceptionInfo ValueError({'code': -32000, 'message': 'Expecting value: line 1 column 1 (char 0)'}) tblen=6>",
  "statusTrace" : "self = <integration.tests.basic.test_transfers.TestTransfer object at 0x7fbf77d38370>\n\n    def test_there_are_not_enough_neons_for_transfer(self):\n        \"\"\"There are not enough Neons for transfer\"\"\"\n        sender_amount = 1\n        self.sender_account = self.create_account_with_balance(sender_amount)\n        self.recipient_account = self.web3_client.create_account()\n        amount = 1.1\n    \n>       self.process_transaction_with_failure(\n            self.sender_account,\n            self.recipient_account,\n            amount,\n            error_message=ErrorMessage.INSUFFICIENT_FUNDS.value)\n\nintegration/tests/basic/test_transfers.py:184: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <integration.tests.basic.test_transfers.TestTransfer object at 0x7fbf77d38370>\nsender_account = <eth_account.signers.local.LocalAccount object at 0x7fbf77e65700>\nrecipient_account = <eth_account.signers.local.LocalAccount object at 0x7fbf77e65f70>\namount = 1.1, gas = 0, gas_price = None\nerror_message = 'insufficient funds for transfer'\n\n    def process_transaction_with_failure(\n            self,\n            sender_account: Account,\n            recipient_account: Union[Account, AccountData],\n            amount: int,\n            gas: Optional[int] = 0,\n            gas_price: Optional[int] = None,\n            error_message: str = \"\") -> Union[web3.types.TxReceipt, None]:\n        '''Processes transaction, expects a failure'''\n    \n        tx: Union[web3.types.TxReceipt, None] = None\n        with allure.step(\n                f\"Sending {amount} from {sender_account.address} to {recipient_account.address}\"\n        ):\n            with pytest.raises(Exception) as error_info:\n                tx = self.web3_client.send_neon(sender_account,\n                                                recipient_account, amount, gas,\n                                                gas_price)\n    \n            if error_info != None:\n    \n                #\n                print(\"=======\")\n                print(error_info)\n                #\n    \n                if error_message:\n>                   assert error_message in str(\n                        error_info), f\"Expected {error_message} to be in {error_info}\"\nE                   AssertionError: Expected insufficient funds for transfer to be in <ExceptionInfo ValueError({'code': -32000, 'message': 'Expecting value: line 1 column 1 (char 0)'}) tblen=6>\n\nintegration/tests/basic/helpers/basic.py:114: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "pytestconfig",
    "time" : {
      "start" : 1650130983826,
      "stop" : 1650130983826,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "web3_client",
    "time" : {
      "start" : 1650130983827,
      "stop" : 1650130983828,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "allure_environment",
    "time" : {
      "start" : 1650130983828,
      "stop" : 1650130984976,
      "duration" : 1148
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "faucet",
    "time" : {
      "start" : 1650130984976,
      "stop" : 1650130984976,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "sol_client",
    "time" : {
      "start" : 1650130984977,
      "stop" : 1650130984977,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "operator",
    "time" : {
      "start" : 1650130984977,
      "stop" : 1650130984977,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "jsonrpc_requester",
    "time" : {
      "start" : 1650130984977,
      "stop" : 1650130984977,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_account",
    "time" : {
      "start" : 1650131128779,
      "stop" : 1650131130265,
      "duration" : 1486
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Create account for tests",
      "time" : {
        "start" : 1650131128779,
        "stop" : 1650131128783,
        "duration" : 4
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Request 1000 NEON from faucet for 0xB086cA850e4D254732de6d3FbA4E22a44BF28714",
      "time" : {
        "start" : 1650131128783,
        "stop" : 1650131129620,
        "duration" : 837
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Operator initial balance: 960385341.0 NEON 4898.56152096 SOL",
      "time" : {
        "start" : 1650131130265,
        "stop" : 1650131130265,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 3,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "prepare",
    "time" : {
      "start" : 1650131150309,
      "stop" : 1650131150309,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_json_rpc_requester",
    "time" : {
      "start" : 1650131150310,
      "stop" : 1650131150310,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_account",
    "time" : {
      "start" : 1650131150310,
      "stop" : 1650131150310,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "There are not enough Neons for transfer",
    "status" : "failed",
    "statusMessage" : "AssertionError: Expected insufficient funds for transfer to be in <ExceptionInfo ValueError({'code': -32000, 'message': 'Expecting value: line 1 column 1 (char 0)'}) tblen=6>",
    "statusTrace" : "self = <integration.tests.basic.test_transfers.TestTransfer object at 0x7fbf77d38370>\n\n    def test_there_are_not_enough_neons_for_transfer(self):\n        \"\"\"There are not enough Neons for transfer\"\"\"\n        sender_amount = 1\n        self.sender_account = self.create_account_with_balance(sender_amount)\n        self.recipient_account = self.web3_client.create_account()\n        amount = 1.1\n    \n>       self.process_transaction_with_failure(\n            self.sender_account,\n            self.recipient_account,\n            amount,\n            error_message=ErrorMessage.INSUFFICIENT_FUNDS.value)\n\nintegration/tests/basic/test_transfers.py:184: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <integration.tests.basic.test_transfers.TestTransfer object at 0x7fbf77d38370>\nsender_account = <eth_account.signers.local.LocalAccount object at 0x7fbf77e65700>\nrecipient_account = <eth_account.signers.local.LocalAccount object at 0x7fbf77e65f70>\namount = 1.1, gas = 0, gas_price = None\nerror_message = 'insufficient funds for transfer'\n\n    def process_transaction_with_failure(\n            self,\n            sender_account: Account,\n            recipient_account: Union[Account, AccountData],\n            amount: int,\n            gas: Optional[int] = 0,\n            gas_price: Optional[int] = None,\n            error_message: str = \"\") -> Union[web3.types.TxReceipt, None]:\n        '''Processes transaction, expects a failure'''\n    \n        tx: Union[web3.types.TxReceipt, None] = None\n        with allure.step(\n                f\"Sending {amount} from {sender_account.address} to {recipient_account.address}\"\n        ):\n            with pytest.raises(Exception) as error_info:\n                tx = self.web3_client.send_neon(sender_account,\n                                                recipient_account, amount, gas,\n                                                gas_price)\n    \n            if error_info != None:\n    \n                #\n                print(\"=======\")\n                print(error_info)\n                #\n    \n                if error_message:\n>                   assert error_message in str(\n                        error_info), f\"Expected {error_message} to be in {error_info}\"\nE                   AssertionError: Expected insufficient funds for transfer to be in <ExceptionInfo ValueError({'code': -32000, 'message': 'Expecting value: line 1 column 1 (char 0)'}) tblen=6>\n\nintegration/tests/basic/helpers/basic.py:114: AssertionError",
    "steps" : [ {
      "name" : "Sending 1.1 from 0x76F46E5972523d96fE5bEd19d57De3326aF926ed to 0x22372b519cb73C9e7d2ABd4254887e62d87F99b2",
      "time" : {
        "start" : 1650131150984,
        "stop" : 1650131151821,
        "duration" : 837
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Expected insufficient funds for transfer to be in <ExceptionInfo ValueError({'code': -32000, 'message': 'Expecting value: line 1 column 1 (char 0)'}) tblen=6>\n",
      "statusTrace" : "  File \"/home/runner/work/neon-tests/neon-tests/integration/tests/basic/helpers/basic.py\", line 114, in process_transaction_with_failure\n    assert error_message in str(\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "4bf2a23897589e1a",
      "name" : "stdout",
      "source" : "4bf2a23897589e1a.txt",
      "type" : "text/plain",
      "size" : 117
    } ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "prepare_account::0",
    "time" : {
      "start" : 1650131151834,
      "stop" : 1650131152647,
      "duration" : 813
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Operator end balance: 960385259.0 NEON 4898.53336824 SOL",
      "time" : {
        "start" : 1650131152481,
        "stop" : 1650131152481,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Account end balance: 1000 NEON",
      "time" : {
        "start" : 1650131152647,
        "stop" : 1650131152647,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "allure_environment::0",
    "time" : {
      "start" : 1650131179788,
      "stop" : 1650131179789,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "Basic: transfer tests"
  }, {
    "name" : "parentSuite",
    "value" : "integration.tests.basic"
  }, {
    "name" : "suite",
    "value" : "test_transfers"
  }, {
    "name" : "subSuite",
    "value" : "TestTransfer"
  }, {
    "name" : "host",
    "value" : "fv-az445-589"
  }, {
    "name" : "thread",
    "value" : "1839-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "integration.tests.basic.test_transfers"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 12,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 0,
        "unknown" : 0,
        "total" : 12
      },
      "items" : [ {
        "uid" : "7e469586fdda8dbd",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25f/904//#testresult/7e469586fdda8dbd",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1650130146532,
          "stop" : 1650130148027,
          "duration" : 1495
        }
      }, {
        "uid" : "15d6f67fd7c81291",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25f/902//#testresult/15d6f67fd7c81291",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1650128815170,
          "stop" : 1650128816465,
          "duration" : 1295
        }
      }, {
        "uid" : "e71893447a6cd36d",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25f/900//#testresult/e71893447a6cd36d",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1650127280341,
          "stop" : 1650127281889,
          "duration" : 1548
        }
      }, {
        "uid" : "776ef0007f534984",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25f/898//#testresult/776ef0007f534984",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1650125900178,
          "stop" : 1650125901278,
          "duration" : 1100
        }
      }, {
        "uid" : "fed1ed8489f36732",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25f/896//#testresult/fed1ed8489f36732",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1650124975630,
          "stop" : 1650124977175,
          "duration" : 1545
        }
      }, {
        "uid" : "1fc125cb1d85094c",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25f/894//#testresult/1fc125cb1d85094c",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1650123731966,
          "stop" : 1650123733481,
          "duration" : 1515
        }
      }, {
        "uid" : "68fcadb1a3423b87",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25f/892//#testresult/68fcadb1a3423b87",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1650122798603,
          "stop" : 1650122799702,
          "duration" : 1099
        }
      }, {
        "uid" : "abdddff6740880de",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25f/890//#testresult/abdddff6740880de",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1650121748501,
          "stop" : 1650121749772,
          "duration" : 1271
        }
      }, {
        "uid" : "38f25a29280ecd41",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25f/888//#testresult/38f25a29280ecd41",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1650116881379,
          "stop" : 1650116882475,
          "duration" : 1096
        }
      }, {
        "uid" : "d8bf7f5d2ccb04ea",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25f/886//#testresult/d8bf7f5d2ccb04ea",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1650114428211,
          "stop" : 1650114429320,
          "duration" : 1109
        }
      }, {
        "uid" : "63644b8a4b7d92d3",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25f/884//#testresult/63644b8a4b7d92d3",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1650048103516,
          "stop" : 1650048105046,
          "duration" : 1530
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "3c7e492603131e29.json",
  "parameterValues" : [ ]
}