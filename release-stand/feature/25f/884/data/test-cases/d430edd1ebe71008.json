{
  "uid" : "d430edd1ebe71008",
  "name" : "test_generate_bad_sign[0.01-None-Transaction had invalid fields: {'gas']",
  "fullName" : "integration.tests.basic.test_transfers.TestRpcCallsTransactionsValidation#test_generate_bad_sign",
  "historyId" : "0014a5c839b4d869856aec7c53a74865",
  "time" : {
    "start" : 1650048139844,
    "stop" : 1650048140013,
    "duration" : 169
  },
  "description" : "Generate bad sign (when v, r, s over allowed size)",
  "descriptionHtml" : "<p>Generate bad sign (when v, r, s over allowed size)</p>\n",
  "status" : "broken",
  "statusMessage" : "TypeError: Unsupported type: '<class 'float'>'.  Must be one of: bool, str, bytes, bytearrayor int.",
  "statusTrace" : "self = <integration.tests.basic.test_transfers.TestRpcCallsTransactionsValidation object at 0x7fc0fe000370>\ngas_limit = 0.01, gas_price = None\nexpected_message = \"Transaction had invalid fields: {'gas'\"\nprepare_accounts = None\n\n    @pytest.mark.parametrize(\"gas_limit,gas_price,expected_message\", GAS_LIMIT_AND_PRICE_DATA)\n    def test_generate_bad_sign(self, gas_limit, gas_price, expected_message, prepare_accounts):\n        \"\"\"Generate bad sign (when v, r, s over allowed size)\"\"\"\n    \n        transaction = {\n            \"from\":\n            self.sender_account.address,\n            \"to\":\n            self.recipient_account.address,\n            \"value\":\n            self.web3_client.toWei(InputData.SAMPLE_AMOUNT.value, \"ether\"),\n            \"chainId\":\n            self.web3_client._chain_id,\n            \"gasPrice\":\n            gas_price,\n            \"gas\":\n            gas_limit,\n            \"nonce\":\n            self.web3_client.eth.get_transaction_count(\n                self.sender_account.address),\n        }\n>       transaction[\"gas\"] = self.web3_client.eth.estimate_gas(transaction)\n\nintegration/tests/basic/test_transfers.py:424: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.9.12/x64/lib/python3.9/site-packages/web3/eth.py:820: in estimate_gas\n    return self._estimate_gas(transaction, block_identifier)\n/opt/hostedtoolcache/Python/3.9.12/x64/lib/python3.9/site-packages/web3/module.py:53: in caller\n    (method_str, params), response_formatters = method.process_params(module, *args, **kwargs)  # noqa: E501\n/opt/hostedtoolcache/Python/3.9.12/x64/lib/python3.9/site-packages/web3/method.py:202: in process_params\n    _apply_request_formatters(params, self.request_formatters(method)))\n/opt/hostedtoolcache/Python/3.9.12/x64/lib/python3.9/site-packages/eth_utils/functional.py:45: in inner\n    return callback(fn(*args, **kwargs))\n/opt/hostedtoolcache/Python/3.9.12/x64/lib/python3.9/site-packages/web3/method.py:52: in _apply_request_formatters\n    formatted_params = pipe(params, request_formatters)\ncytoolz/functoolz.pyx:667: in cytoolz.functoolz.pipe\n    ???\ncytoolz/functoolz.pyx:642: in cytoolz.functoolz.c_pipe\n    ???\ncytoolz/functoolz.pyx:505: in cytoolz.functoolz.Compose.__call__\n    ???\ncytoolz/functoolz.pyx:254: in cytoolz.functoolz.curry.__call__\n    ???\ncytoolz/functoolz.pyx:250: in cytoolz.functoolz.curry.__call__\n    ???\n/opt/hostedtoolcache/Python/3.9.12/x64/lib/python3.9/site-packages/eth_utils/decorators.py:91: in wrapper\n    return ReturnType(result)  # type: ignore\n/opt/hostedtoolcache/Python/3.9.12/x64/lib/python3.9/site-packages/eth_utils/applicators.py:22: in apply_formatter_at_index\n    yield formatter(item)\ncytoolz/functoolz.pyx:254: in cytoolz.functoolz.curry.__call__\n    ???\ncytoolz/functoolz.pyx:250: in cytoolz.functoolz.curry.__call__\n    ???\n/opt/hostedtoolcache/Python/3.9.12/x64/lib/python3.9/site-packages/web3/_utils/rpc_abi.py:223: in apply_abi_formatters_to_dict\n    formatted_values = map_abi_data(\ncytoolz/functoolz.pyx:254: in cytoolz.functoolz.curry.__call__\n    ???\ncytoolz/functoolz.pyx:250: in cytoolz.functoolz.curry.__call__\n    ???\n/opt/hostedtoolcache/Python/3.9.12/x64/lib/python3.9/site-packages/web3/_utils/abi.py:799: in map_abi_data\n    return pipe(data, *pipeline)\ncytoolz/functoolz.pyx:667: in cytoolz.functoolz.pipe\n    ???\ncytoolz/functoolz.pyx:642: in cytoolz.functoolz.c_pipe\n    ???\ncytoolz/functoolz.pyx:254: in cytoolz.functoolz.curry.__call__\n    ???\ncytoolz/functoolz.pyx:250: in cytoolz.functoolz.curry.__call__\n    ???\n/opt/hostedtoolcache/Python/3.9.12/x64/lib/python3.9/site-packages/web3/_utils/abi.py:833: in data_tree_map\n    return recursive_map(map_to_typed_data, data_tree)\n/opt/hostedtoolcache/Python/3.9.12/x64/lib/python3.9/site-packages/web3/_utils/decorators.py:30: in wrapped\n    wrapped_val = to_wrap(*args)\n/opt/hostedtoolcache/Python/3.9.12/x64/lib/python3.9/site-packages/web3/_utils/formatters.py:89: in recursive_map\n    items_mapped = map_collection(recurse, data)\n/opt/hostedtoolcache/Python/3.9.12/x64/lib/python3.9/site-packages/web3/_utils/formatters.py:76: in map_collection\n    return datatype(map(func, collection))\n/opt/hostedtoolcache/Python/3.9.12/x64/lib/python3.9/site-packages/web3/_utils/formatters.py:88: in recurse\n    return recursive_map(func, item)\n/opt/hostedtoolcache/Python/3.9.12/x64/lib/python3.9/site-packages/web3/_utils/decorators.py:30: in wrapped\n    wrapped_val = to_wrap(*args)\n/opt/hostedtoolcache/Python/3.9.12/x64/lib/python3.9/site-packages/web3/_utils/formatters.py:90: in recursive_map\n    return func(items_mapped)\n/opt/hostedtoolcache/Python/3.9.12/x64/lib/python3.9/site-packages/web3/_utils/abi.py:830: in map_to_typed_data\n    return ABITypedData(func(*elements))\n/opt/hostedtoolcache/Python/3.9.12/x64/lib/python3.9/site-packages/web3/_utils/normalizers.py:78: in wrapper\n    modified = to_wrap(type_str, data)\n/opt/hostedtoolcache/Python/3.9.12/x64/lib/python3.9/site-packages/web3/_utils/normalizers.py:129: in new_normalizer\n    return old_normalizer(abi_type, type_str, data)\n/opt/hostedtoolcache/Python/3.9.12/x64/lib/python3.9/site-packages/web3/_utils/normalizers.py:165: in abi_int_to_hex\n    return type_str, hexstr_if_str(to_hex, data)\ncytoolz/functoolz.pyx:254: in cytoolz.functoolz.curry.__call__\n    ???\ncytoolz/functoolz.pyx:250: in cytoolz.functoolz.curry.__call__\n    ???\n/opt/hostedtoolcache/Python/3.9.12/x64/lib/python3.9/site-packages/web3/_utils/encoding.py:178: in hexstr_if_str\n    return to_type(primitive, hexstr=hexstr)\n/opt/hostedtoolcache/Python/3.9.12/x64/lib/python3.9/site-packages/eth_utils/decorators.py:76: in wrapper\n    return to_wrap(*args, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nprimitive = 0.01, hexstr = None, text = None\n\n    @validate_conversion_arguments\n    def to_hex(\n        primitive: Primitives = None, hexstr: HexStr = None, text: str = None\n    ) -> HexStr:\n        \"\"\"\n        Auto converts any supported value into its hex representation.\n        Trims leading zeros, as defined in:\n        https://github.com/ethereum/wiki/wiki/JSON-RPC#hex-value-encoding\n        \"\"\"\n        if hexstr is not None:\n            return add_0x_prefix(HexStr(hexstr.lower()))\n    \n        if text is not None:\n            return encode_hex(text.encode(\"utf-8\"))\n    \n        if is_boolean(primitive):\n            return HexStr(\"0x1\") if primitive else HexStr(\"0x0\")\n    \n        if isinstance(primitive, (bytes, bytearray)):\n            return encode_hex(primitive)\n        elif is_string(primitive):\n            raise TypeError(\n                \"Unsupported type: The primitive argument must be one of: bytes,\"\n                \"bytearray, int or bool and not str\"\n            )\n    \n        if is_integer(primitive):\n            return HexStr(hex(primitive))\n    \n>       raise TypeError(\n            \"Unsupported type: '{0}'.  Must be one of: bool, str, bytes, bytearray\"\n            \"or int.\".format(repr(type(primitive)))\n        )\nE       TypeError: Unsupported type: '<class 'float'>'.  Must be one of: bool, str, bytes, bytearrayor int.\n\n/opt/hostedtoolcache/Python/3.9.12/x64/lib/python3.9/site-packages/eth_utils/conversions.py:48: TypeError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "web3_client",
    "time" : {
      "start" : 1650047933257,
      "stop" : 1650047933259,
      "duration" : 2
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "pytestconfig",
    "time" : {
      "start" : 1650047933257,
      "stop" : 1650047933257,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "allure_environment",
    "time" : {
      "start" : 1650047933259,
      "stop" : 1650047934464,
      "duration" : 1205
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "faucet",
    "time" : {
      "start" : 1650047934464,
      "stop" : 1650047934464,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "jsonrpc_requester",
    "time" : {
      "start" : 1650047934464,
      "stop" : 1650047934464,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "sol_client",
    "time" : {
      "start" : 1650047934465,
      "stop" : 1650047934465,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "operator",
    "time" : {
      "start" : 1650047934465,
      "stop" : 1650047934465,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_account",
    "time" : {
      "start" : 1650048121330,
      "stop" : 1650048122985,
      "duration" : 1655
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Create account for tests",
      "time" : {
        "start" : 1650048121330,
        "stop" : 1650048121335,
        "duration" : 5
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Request 1000 NEON from faucet for 0x40552027ea6446A6152319fa6Ce4B950b9852208",
      "time" : {
        "start" : 1650048121335,
        "stop" : 1650048122333,
        "duration" : 998
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Operator initial balance: 967507388.0 NEON 4911.16653316 SOL",
      "time" : {
        "start" : 1650048122985,
        "stop" : 1650048122985,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 3,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "prepare_account",
    "time" : {
      "start" : 1650048138497,
      "stop" : 1650048138497,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_json_rpc_requester",
    "time" : {
      "start" : 1650048138497,
      "stop" : 1650048138497,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare",
    "time" : {
      "start" : 1650048138497,
      "stop" : 1650048138497,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_accounts",
    "time" : {
      "start" : 1650048138498,
      "stop" : 1650048139843,
      "duration" : 1345
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ {
    "name" : "prepare_accounts::0",
    "time" : {
      "start" : 1650048140113,
      "stop" : 1650048140113,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_account::0",
    "time" : {
      "start" : 1650048148858,
      "stop" : 1650048149680,
      "duration" : 822
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Operator end balance: 967507268.0 NEON 4911.1289962 SOL",
      "time" : {
        "start" : 1650048149513,
        "stop" : 1650048149513,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Account end balance: 1000 NEON",
      "time" : {
        "start" : 1650048149680,
        "stop" : 1650048149680,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "allure_environment::0",
    "time" : {
      "start" : 1650048149686,
      "stop" : 1650048149687,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "Basic: Json-RPC call tests - transactions validation"
  }, {
    "name" : "parentSuite",
    "value" : "integration.tests.basic"
  }, {
    "name" : "suite",
    "value" : "test_transfers"
  }, {
    "name" : "subSuite",
    "value" : "TestRpcCallsTransactionsValidation"
  }, {
    "name" : "host",
    "value" : "fv-az457-317"
  }, {
    "name" : "thread",
    "value" : "1911-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "integration.tests.basic.test_transfers"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "expected_message",
    "value" : "'Transaction had invalid fields: {'gas''"
  }, {
    "name" : "gas_limit",
    "value" : "0.01"
  }, {
    "name" : "gas_price",
    "value" : "None"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "d430edd1ebe71008.json",
  "parameterValues" : [ "'Transaction had invalid fields: {'gas''", "0.01", "None" ]
}