{
  "uid" : "4b4757e66a1912dae1a509f688f20b0f",
  "children" : [ {
    "name" : "Test defects",
    "children" : [ {
      "name" : "ValueError: {'code': -32000, 'message': 'relation \"neon_transactions\" does not exist\\nLINE 3:               FROM neon_transactions AS a\\n                           ^\\n'}",
      "children" : [ {
        "name" : "test_rpc_call_eth_getBlockByHash",
        "uid" : "14259c0294bb1871",
        "parentUid" : "69453fb2bc7653d0a16f1bd046aaf65a",
        "status" : "broken",
        "time" : {
          "start" : 1650047938103,
          "stop" : 1650047939468,
          "duration" : 1365
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ ]
      }, {
        "name" : "test_rpc_call_eth_getBlockByNumber_via_numbers",
        "uid" : "d705a65e36ad1385",
        "parentUid" : "69453fb2bc7653d0a16f1bd046aaf65a",
        "status" : "broken",
        "time" : {
          "start" : 1650047942193,
          "stop" : 1650047943243,
          "duration" : 1050
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ ]
      }, {
        "name" : "test_rpc_call_eth_call",
        "uid" : "aa65849278e844db",
        "parentUid" : "69453fb2bc7653d0a16f1bd046aaf65a",
        "status" : "broken",
        "time" : {
          "start" : 1650047947181,
          "stop" : 1650047948269,
          "duration" : 1088
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ ]
      }, {
        "name" : "test_send_neon_from_one_account_to_another[1]",
        "uid" : "cf3b409c157f4cb9",
        "parentUid" : "69453fb2bc7653d0a16f1bd046aaf65a",
        "status" : "broken",
        "time" : {
          "start" : 1650048086229,
          "stop" : 1650048087286,
          "duration" : 1057
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ "1" ]
      }, {
        "name" : "test_send_neon_from_one_account_to_another[1.1]",
        "uid" : "b6d5119289066ad5",
        "parentUid" : "69453fb2bc7653d0a16f1bd046aaf65a",
        "status" : "broken",
        "time" : {
          "start" : 1650048088665,
          "stop" : 1650048089729,
          "duration" : 1064
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ "1.1" ]
      }, {
        "name" : "test_rpc_call_eth_getTransactionReceipt",
        "uid" : "417299b0e5edcdff",
        "parentUid" : "69453fb2bc7653d0a16f1bd046aaf65a",
        "status" : "broken",
        "time" : {
          "start" : 1650048117357,
          "stop" : 1650048118399,
          "duration" : 1042
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ ]
      } ],
      "uid" : "69453fb2bc7653d0a16f1bd046aaf65a"
    }, {
      "name" : "TypeError: Transaction had invalid fields: {'gasPrice': None}",
      "children" : [ {
        "name" : "test_generate_bad_sign[1-None-gas limit reached]",
        "uid" : "be6d81b6d3e2db26",
        "parentUid" : "75fd25b10532717aff6a32e91489208b",
        "status" : "broken",
        "time" : {
          "start" : 1650048137790,
          "stop" : 1650048138475,
          "duration" : 685
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ "'gas limit reached'", "1", "None" ]
      }, {
        "name" : "test_generate_bad_sign[18446744073709551616-None-insufficient funds for transfer]",
        "uid" : "b21dadc5cf00373d",
        "parentUid" : "75fd25b10532717aff6a32e91489208b",
        "status" : "broken",
        "time" : {
          "start" : 1650048141462,
          "stop" : 1650048142144,
          "duration" : 682
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ "'insufficient funds for transfer'", "18446744073709551616", "None" ]
      } ],
      "uid" : "75fd25b10532717aff6a32e91489208b"
    }, {
      "name" : "TypeError: Unsupported type: '<class 'float'>'.  Must be one of: bool, str, bytes, bytearrayor int.",
      "children" : [ {
        "name" : "test_generate_bad_sign[0.01-None-Transaction had invalid fields: {'gas']",
        "uid" : "d430edd1ebe71008",
        "parentUid" : "d9ef9cd71b090d65a37e84fb55bef004",
        "status" : "broken",
        "time" : {
          "start" : 1650048139844,
          "stop" : 1650048140013,
          "duration" : 169
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ "'Transaction had invalid fields: {'gas''", "0.01", "None" ]
      } ],
      "uid" : "d9ef9cd71b090d65a37e84fb55bef004"
    } ],
    "uid" : "bdbf199525818fae7a8651db9eafe741"
  }, {
    "name" : "Product defects",
    "children" : [ {
      "name" : "AssertionError: <AssertMessage.CONTAINS_ERROR: 'Contains the error data'>\nassert False\n +  where False = <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7fc0fe533070>>(JsonRpcErrorResponse(id=2, error={'code': -32000, 'message': 'relation \"neon_transaction_logs\" does not exist\\nLINE 1: SELECT * FROM neon_transaction_logs WHERE address IN (\\'0xbcb...\\n                      ^\\n'}, jsonrpc='2.0'))\n +    where <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7fc0fe533070>> = <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7fc0fe533070>.assert_no_error_object",
      "children" : [ {
        "name" : "test_rpc_call_eth_getLogs_via_tags[latest-earliest]",
        "uid" : "926263c58a10dc19",
        "parentUid" : "ba440dba733dc117a1a81f7324e29531",
        "status" : "failed",
        "time" : {
          "start" : 1650047952564,
          "stop" : 1650047953404,
          "duration" : 840
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ "'latest'", "'earliest'" ]
      } ],
      "uid" : "ba440dba733dc117a1a81f7324e29531"
    }, {
      "name" : "AssertionError: <AssertMessage.CONTAINS_ERROR: 'Contains the error data'>\nassert False\n +  where False = <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7fc0fe15fbe0>>(JsonRpcErrorResponse(id=55, error={'code': -32000, 'message': 'relation \"neon_transaction_logs\" does not exist\\nLINE 1: SELECT * FROM neon_transaction_logs WHERE address IN (\\'0x020...\\n                      ^\\n'}, jsonrpc='2.0'))\n +    where <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7fc0fe15fbe0>> = <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7fc0fe15fbe0>.assert_no_error_object",
      "children" : [ {
        "name" : "test_rpc_call_eth_getLogs_via_tags[latest-pending]",
        "uid" : "4d0e6b8708f1c7c6",
        "parentUid" : "c26e08b23c275c75fb59f2172c793316",
        "status" : "failed",
        "time" : {
          "start" : 1650047953412,
          "stop" : 1650047954255,
          "duration" : 843
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ "'latest'", "'pending'" ]
      } ],
      "uid" : "c26e08b23c275c75fb59f2172c793316"
    }, {
      "name" : "AssertionError: <AssertMessage.CONTAINS_ERROR: 'Contains the error data'>\nassert False\n +  where False = <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7fc0fe2287c0>>(JsonRpcErrorResponse(id=22, error={'code': -32000, 'message': 'relation \"neon_transaction_logs\" does not exist\\nLINE 1: SELECT * FROM neon_transaction_logs WHERE address IN (\\'0x3eb...\\n                      ^\\n'}, jsonrpc='2.0'))\n +    where <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7fc0fe2287c0>> = <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7fc0fe2287c0>.assert_no_error_object",
      "children" : [ {
        "name" : "test_rpc_call_eth_getLogs_via_numbers",
        "uid" : "f0366a38ebe5b3b0",
        "parentUid" : "03053d0f4c9c605d19659adfc6c1cbd8",
        "status" : "failed",
        "time" : {
          "start" : 1650047954264,
          "stop" : 1650047955104,
          "duration" : 840
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ ]
      } ],
      "uid" : "03053d0f4c9c605d19659adfc6c1cbd8"
    }, {
      "name" : "AssertionError",
      "children" : [ {
        "name" : "test_send_more_than_exist_on_account_neon[1501]",
        "uid" : "e1598af0f3030f19",
        "parentUid" : "a0017ad855102fea08b8682d27fec4ca",
        "status" : "failed",
        "time" : {
          "start" : 1650048091111,
          "stop" : 1650048091967,
          "duration" : 856
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ "1501" ]
      }, {
        "name" : "test_send_more_than_exist_on_account_neon[10000.1]",
        "uid" : "61e4480efa4af06f",
        "parentUid" : "a0017ad855102fea08b8682d27fec4ca",
        "status" : "failed",
        "time" : {
          "start" : 1650048093326,
          "stop" : 1650048094179,
          "duration" : 853
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ "10000.1" ]
      }, {
        "name" : "test_there_are_not_enough_neons_for_gas_fee",
        "uid" : "c3400303f47803ff",
        "parentUid" : "a0017ad855102fea08b8682d27fec4ca",
        "status" : "failed",
        "time" : {
          "start" : 1650048101792,
          "stop" : 1650048103503,
          "duration" : 1711
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ ]
      }, {
        "name" : "test_there_are_not_enough_neons_for_transfer",
        "uid" : "63644b8a4b7d92d3",
        "parentUid" : "a0017ad855102fea08b8682d27fec4ca",
        "status" : "failed",
        "time" : {
          "start" : 1650048103516,
          "stop" : 1650048105046,
          "duration" : 1530
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ ]
      }, {
        "name" : "test_gas_limit_and_gas_price[1-None-gas limit reached]",
        "uid" : "7fc24f76e00b412a",
        "parentUid" : "a0017ad855102fea08b8682d27fec4ca",
        "status" : "failed",
        "time" : {
          "start" : 1650048126337,
          "stop" : 1650048126877,
          "duration" : 540
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ "'gas limit reached'", "1", "None" ]
      }, {
        "name" : "test_gas_limit_and_gas_price[18446744073709551616-None-insufficient funds for transfer]",
        "uid" : "1d98e878d2cd6c0c",
        "parentUid" : "a0017ad855102fea08b8682d27fec4ca",
        "status" : "failed",
        "time" : {
          "start" : 1650048130298,
          "stop" : 1650048130805,
          "duration" : 507
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ "'insufficient funds for transfer'", "18446744073709551616", "None" ]
      }, {
        "name" : "test_gas_limit_and_gas_price[0-18446744073709551616-insufficient funds for transfer]",
        "uid" : "b112ab7bc37710a9",
        "parentUid" : "a0017ad855102fea08b8682d27fec4ca",
        "status" : "failed",
        "time" : {
          "start" : 1650048132162,
          "stop" : 1650048133021,
          "duration" : 859
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ "'insufficient funds for transfer'", "0", "18446744073709551616" ]
      }, {
        "name" : "test_gas_limit_and_gas_price[1-18446744073709551616-insufficient funds for transfer]",
        "uid" : "3d85656a1e93b49f",
        "parentUid" : "a0017ad855102fea08b8682d27fec4ca",
        "status" : "failed",
        "time" : {
          "start" : 1650048134386,
          "stop" : 1650048134728,
          "duration" : 342
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ "'insufficient funds for transfer'", "1", "18446744073709551616" ]
      }, {
        "name" : "test_gas_limit_and_gas_price[1000-18446744073709552-insufficient funds for transfer]",
        "uid" : "ff3d56cda935a266",
        "parentUid" : "a0017ad855102fea08b8682d27fec4ca",
        "status" : "failed",
        "time" : {
          "start" : 1650048136089,
          "stop" : 1650048136433,
          "duration" : 344
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ "'insufficient funds for transfer'", "1000", "18446744073709552" ]
      } ],
      "uid" : "a0017ad855102fea08b8682d27fec4ca"
    }, {
      "name" : "AssertionError: The response type is error response\nassert False\n +  where False = <bound method BasicTests.assert_is_successful_response of <integration.tests.basic.test_transfers.TestRpcCallsTransactions object at 0x7fc0fe020790>>(JsonRpcErrorResponse(id=31, error={'code': -32000, 'message': 'relation \"neon_transactions\" does not exist\\nLINE 3:               FROM neon_transactions AS a\\n                           ^\\n'}, jsonrpc='2.0'))\n +    where <bound method BasicTests.assert_is_successful_response of <integration.tests.basic.test_transfers.TestRpcCallsTransactions object at 0x7fc0fe020790>> = <integration.tests.basic.test_transfers.TestRpcCallsTransactions object at 0x7fc0fe020790>.assert_is_successful_response",
      "children" : [ {
        "name" : "test_rpc_call_eth_sendRawTransaction",
        "uid" : "355811373f34c783",
        "parentUid" : "12bed9e94e244669a659b37501356b22",
        "status" : "failed",
        "time" : {
          "start" : 1650048111794,
          "stop" : 1650048113004,
          "duration" : 1210
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ ]
      } ],
      "uid" : "12bed9e94e244669a659b37501356b22"
    }, {
      "name" : "AssertionError: The response type is error response\nassert False\n +  where False = <bound method BasicTests.assert_is_successful_response of <integration.tests.basic.test_transfers.TestRpcCallsTransactions object at 0x7fc0fe195f40>>(JsonRpcErrorResponse(id=24, error={'code': -32000, 'message': 'relation \"neon_transactions\" does not exist\\nLINE 3:               FROM neon_transactions AS a\\n                           ^\\n'}, jsonrpc='2.0'))\n +    where <bound method BasicTests.assert_is_successful_response of <integration.tests.basic.test_transfers.TestRpcCallsTransactions object at 0x7fc0fe195f40>> = <integration.tests.basic.test_transfers.TestRpcCallsTransactions object at 0x7fc0fe195f40>.assert_is_successful_response",
      "children" : [ {
        "name" : "test_check_erc_1820_transaction",
        "uid" : "5f7d626d7312feb4",
        "parentUid" : "37adf13ebccc929c01446556c23700e9",
        "status" : "failed",
        "time" : {
          "start" : 1650048119778,
          "stop" : 1650048120493,
          "duration" : 715
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ ]
      } ],
      "uid" : "37adf13ebccc929c01446556c23700e9"
    }, {
      "name" : "AssertionError: The response type is error response\nassert False\n +  where False = <bound method BasicTests.assert_is_successful_response of <integration.tests.basic.test_transfers.TestRpcCallsTransactionsValidation object at 0x7fc0fde173a0>>(JsonRpcErrorResponse(id=24, error={'code': -32000, 'message': 'The account balance is less than required: Account 6f74... = 387381625547900583936000; value = 20000000000000000; required_balance = 387381645547900583936000; '}, jsonrpc='2.0'))\n +    where <bound method BasicTests.assert_is_successful_response of <integration.tests.basic.test_transfers.TestRpcCallsTransactionsValidation object at 0x7fc0fde173a0>> = <integration.tests.basic.test_transfers.TestRpcCallsTransactionsValidation object at 0x7fc0fde173a0>.assert_is_successful_response",
      "children" : [ {
        "name" : "test_generate_bad_sign[0-18446744073709551616-insufficient funds for transfer]",
        "uid" : "990afbb5942d8ace",
        "parentUid" : "40cf5ea7129be2be94f4dc2cc925913f",
        "status" : "failed",
        "time" : {
          "start" : 1650048143509,
          "stop" : 1650048144419,
          "duration" : 910
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ "'insufficient funds for transfer'", "0", "18446744073709551616" ]
      } ],
      "uid" : "40cf5ea7129be2be94f4dc2cc925913f"
    }, {
      "name" : "AssertionError: The response type is error response\nassert False\n +  where False = <bound method BasicTests.assert_is_successful_response of <integration.tests.basic.test_transfers.TestRpcCallsTransactionsValidation object at 0x7fc0fe06d370>>(JsonRpcErrorResponse(id=50, error={'code': -32000, 'message': 'The account balance is less than required: Account b2c5... = 387381625547900583936000; value = 20000000000000000; required_balance = 387381645547900583936000; '}, jsonrpc='2.0'))\n +    where <bound method BasicTests.assert_is_successful_response of <integration.tests.basic.test_transfers.TestRpcCallsTransactionsValidation object at 0x7fc0fe06d370>> = <integration.tests.basic.test_transfers.TestRpcCallsTransactionsValidation object at 0x7fc0fe06d370>.assert_is_successful_response",
      "children" : [ {
        "name" : "test_generate_bad_sign[1-18446744073709551616-insufficient funds for transfer]",
        "uid" : "6e8a52d8e3d2b439",
        "parentUid" : "1a5c651ce9bc5071658823e902357ac3",
        "status" : "failed",
        "time" : {
          "start" : 1650048145775,
          "stop" : 1650048146632,
          "duration" : 857
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ "'insufficient funds for transfer'", "1", "18446744073709551616" ]
      } ],
      "uid" : "1a5c651ce9bc5071658823e902357ac3"
    }, {
      "name" : "AssertionError: The response type is error response\nassert False\n +  where False = <bound method BasicTests.assert_is_successful_response of <integration.tests.basic.test_transfers.TestRpcCallsTransactionsValidation object at 0x7fc0fdeb7400>>(JsonRpcErrorResponse(id=45, error={'code': -32000, 'message': 'The account balance is less than required: Account 7295...0; fee = 387381625547900592000; value = 20000000000000000; required_balance = 387401625547900592000; '}, jsonrpc='2.0'))\n +    where <bound method BasicTests.assert_is_successful_response of <integration.tests.basic.test_transfers.TestRpcCallsTransactionsValidation object at 0x7fc0fdeb7400>> = <integration.tests.basic.test_transfers.TestRpcCallsTransactionsValidation object at 0x7fc0fdeb7400>.assert_is_successful_response",
      "children" : [ {
        "name" : "test_generate_bad_sign[1000-18446744073709552-insufficient funds for transfer]",
        "uid" : "bf3121746f030e70",
        "parentUid" : "68860e8019257256d81569bc3f1caf86",
        "status" : "failed",
        "time" : {
          "start" : 1650048147989,
          "stop" : 1650048148849,
          "duration" : 860
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ "'insufficient funds for transfer'", "1000", "18446744073709552" ]
      } ],
      "uid" : "68860e8019257256d81569bc3f1caf86"
    } ],
    "uid" : "8fb3a91ba5aaf9de24cc8a92edc82b5d"
  } ],
  "name" : "categories"
}