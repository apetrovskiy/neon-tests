{
  "uid" : "4b4757e66a1912dae1a509f688f20b0f",
  "children" : [ {
    "name" : "Test defects",
    "children" : [ {
      "name" : "ValueError: {'code': -32000, 'message': 'relation \"neon_transactions\" does not exist\\nLINE 3:               FROM neon_transactions AS a\\n                           ^\\n'}",
      "children" : [ {
        "name" : "test_rpc_call_eth_getBlockByHash",
        "uid" : "43e9851f3cf1a4c3",
        "parentUid" : "69453fb2bc7653d0a16f1bd046aaf65a",
        "status" : "broken",
        "time" : {
          "start" : 1650124801107,
          "stop" : 1650124812340,
          "duration" : 11233
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ ]
      }, {
        "name" : "test_rpc_call_eth_getBlockByNumber_via_numbers",
        "uid" : "c07333b7d01d3f8",
        "parentUid" : "69453fb2bc7653d0a16f1bd046aaf65a",
        "status" : "broken",
        "time" : {
          "start" : 1650124814979,
          "stop" : 1650124816012,
          "duration" : 1033
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ ]
      }, {
        "name" : "test_send_neon_from_one_account_to_another[1.1]",
        "uid" : "9429d36adc62ce11",
        "parentUid" : "69453fb2bc7653d0a16f1bd046aaf65a",
        "status" : "broken",
        "time" : {
          "start" : 1650124961819,
          "stop" : 1650124962872,
          "duration" : 1053
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : true,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ "1.1" ]
      }, {
        "name" : "test_zero_neon",
        "uid" : "3c47dd9ac7815a65",
        "parentUid" : "69453fb2bc7653d0a16f1bd046aaf65a",
        "status" : "broken",
        "time" : {
          "start" : 1650124968653,
          "stop" : 1650124969701,
          "duration" : 1048
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ ]
      }, {
        "name" : "test_rpc_call_eth_getTransactionCount",
        "uid" : "54309510a9e384fb",
        "parentUid" : "69453fb2bc7653d0a16f1bd046aaf65a",
        "status" : "broken",
        "time" : {
          "start" : 1650124980831,
          "stop" : 1650124981866,
          "duration" : 1035
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ ]
      }, {
        "name" : "test_rpc_call_eth_getTransactionReceipt",
        "uid" : "d692220e69a040",
        "parentUid" : "69453fb2bc7653d0a16f1bd046aaf65a",
        "status" : "broken",
        "time" : {
          "start" : 1650124989405,
          "stop" : 1650124990445,
          "duration" : 1040
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ ]
      } ],
      "uid" : "69453fb2bc7653d0a16f1bd046aaf65a"
    }, {
      "name" : "TypeError: Transaction had invalid fields: {'gas': 0.01}",
      "children" : [ {
        "name" : "test_generate_bad_sign[0.01-None-Transaction had invalid fields: {'gas']",
        "uid" : "5f7ae4addcb28d7d",
        "parentUid" : "ed55583356fef18e67ebe1252ecaca53",
        "status" : "broken",
        "time" : {
          "start" : 1650124998249,
          "stop" : 1650124998582,
          "duration" : 333
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ "'Transaction had invalid fields: {'gas''", "0.01", "None" ]
      } ],
      "uid" : "ed55583356fef18e67ebe1252ecaca53"
    } ],
    "uid" : "bdbf199525818fae7a8651db9eafe741"
  }, {
    "name" : "Product defects",
    "children" : [ {
      "name" : "AssertionError: <AssertMessage.CONTAINS_ERROR: 'Contains the error data'>\nassert False\n +  where False = <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f712e09c5e0>>(JsonRpcErrorResponse(id=12, error={'code': -32000, 'message': 'relation \"neon_transaction_logs\" does not exist\\nLINE 1: SELECT * FROM neon_transaction_logs WHERE address IN (\\'0x709...\\n                      ^\\n'}, jsonrpc='2.0'))\n +    where <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f712e09c5e0>> = <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f712e09c5e0>.assert_no_error_object",
      "children" : [ {
        "name" : "test_rpc_call_eth_getLogs_via_tags[latest-latest]",
        "uid" : "a54c3dbb5ca20f0b",
        "parentUid" : "8ce35e814968ef80d9fe292cee251b41",
        "status" : "failed",
        "time" : {
          "start" : 1650124823497,
          "stop" : 1650124824332,
          "duration" : 835
        },
        "flaky" : true,
        "newFailed" : true,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ "'latest'", "'latest'" ]
      } ],
      "uid" : "8ce35e814968ef80d9fe292cee251b41"
    }, {
      "name" : "AssertionError: <AssertMessage.CONTAINS_ERROR: 'Contains the error data'>\nassert False\n +  where False = <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f712e019d00>>(JsonRpcErrorResponse(id=78, error={'code': -32000, 'message': 'relation \"neon_transaction_logs\" does not exist\\nLINE 1: SELECT * FROM neon_transaction_logs WHERE address IN (\\'0x9df...\\n                      ^\\n'}, jsonrpc='2.0'))\n +    where <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f712e019d00>> = <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f712e019d00>.assert_no_error_object",
      "children" : [ {
        "name" : "test_rpc_call_eth_getLogs_via_tags[latest-earliest]",
        "uid" : "661fd30301509a96",
        "parentUid" : "54b284021d8133db8fb9742d4d82fc13",
        "status" : "failed",
        "time" : {
          "start" : 1650124826022,
          "stop" : 1650124826857,
          "duration" : 835
        },
        "flaky" : true,
        "newFailed" : true,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ "'latest'", "'earliest'" ]
      } ],
      "uid" : "54b284021d8133db8fb9742d4d82fc13"
    }, {
      "name" : "AssertionError: <AssertMessage.CONTAINS_ERROR: 'Contains the error data'>\nassert False\n +  where False = <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f712dfb9310>>(JsonRpcErrorResponse(id=26, error={'code': -32000, 'message': 'relation \"neon_transaction_logs\" does not exist\\nLINE 1: SELECT * FROM neon_transaction_logs WHERE address IN (\\'0xea6...\\n                      ^\\n'}, jsonrpc='2.0'))\n +    where <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f712dfb9310>> = <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f712dfb9310>.assert_no_error_object",
      "children" : [ {
        "name" : "test_rpc_call_eth_getLogs_via_tags[latest-pending]",
        "uid" : "b83625703b7f1d71",
        "parentUid" : "fefb494f869138656e5d70547d3442b3",
        "status" : "failed",
        "time" : {
          "start" : 1650124826866,
          "stop" : 1650124827701,
          "duration" : 835
        },
        "flaky" : true,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ "'latest'", "'pending'" ]
      } ],
      "uid" : "fefb494f869138656e5d70547d3442b3"
    }, {
      "name" : "AssertionError: <AssertMessage.CONTAINS_ERROR: 'Contains the error data'>\nassert False\n +  where False = <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f712df1f0a0>>(JsonRpcErrorResponse(id=19, error={'code': -32000, 'message': 'relation \"neon_transaction_logs\" does not exist\\nLINE 1: SELECT * FROM neon_transaction_logs WHERE address IN (\\'0x5e6...\\n                      ^\\n'}, jsonrpc='2.0'))\n +    where <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f712df1f0a0>> = <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f712df1f0a0>.assert_no_error_object",
      "children" : [ {
        "name" : "test_rpc_call_eth_getLogs_via_numbers",
        "uid" : "4514666237105f03",
        "parentUid" : "9411e868b8fd4b9ace67ddffe318b2c9",
        "status" : "failed",
        "time" : {
          "start" : 1650124827709,
          "stop" : 1650124828549,
          "duration" : 840
        },
        "flaky" : true,
        "newFailed" : true,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ ]
      } ],
      "uid" : "9411e868b8fd4b9ace67ddffe318b2c9"
    }, {
      "name" : "AssertionError",
      "children" : [ {
        "name" : "test_send_more_than_exist_on_account_neon[1501]",
        "uid" : "87c79ef49ca453bc",
        "parentUid" : "a0017ad855102fea08b8682d27fec4ca",
        "status" : "failed",
        "time" : {
          "start" : 1650124964253,
          "stop" : 1650124965091,
          "duration" : 838
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ "1501" ]
      }, {
        "name" : "test_send_more_than_exist_on_account_neon[10000.1]",
        "uid" : "bcc68257fcbaac1f",
        "parentUid" : "a0017ad855102fea08b8682d27fec4ca",
        "status" : "failed",
        "time" : {
          "start" : 1650124966450,
          "stop" : 1650124967290,
          "duration" : 840
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ "10000.1" ]
      }, {
        "name" : "test_there_are_not_enough_neons_for_gas_fee",
        "uid" : "b1d0954ce33b6221",
        "parentUid" : "a0017ad855102fea08b8682d27fec4ca",
        "status" : "failed",
        "time" : {
          "start" : 1650124973924,
          "stop" : 1650124975615,
          "duration" : 1691
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ ]
      }, {
        "name" : "test_there_are_not_enough_neons_for_transfer",
        "uid" : "fed1ed8489f36732",
        "parentUid" : "a0017ad855102fea08b8682d27fec4ca",
        "status" : "failed",
        "time" : {
          "start" : 1650124975630,
          "stop" : 1650124977175,
          "duration" : 1545
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ ]
      } ],
      "uid" : "a0017ad855102fea08b8682d27fec4ca"
    }, {
      "name" : "AssertionError: The response type is error response\nassert False\n +  where False = <bound method BasicTests.assert_is_successful_response of <integration.tests.basic.test_transfers.TestRpcCallsTransactions object at 0x7f712de06730>>(JsonRpcErrorResponse(id=74, error={'code': -32000, 'message': 'relation \"neon_transactions\" does not exist\\nLINE 3:               FROM neon_transactions AS a\\n                           ^\\n'}, jsonrpc='2.0'))\n +    where <bound method BasicTests.assert_is_successful_response of <integration.tests.basic.test_transfers.TestRpcCallsTransactions object at 0x7f712de06730>> = <integration.tests.basic.test_transfers.TestRpcCallsTransactions object at 0x7f712de06730>.assert_is_successful_response",
      "children" : [ {
        "name" : "test_check_erc_1820_transaction",
        "uid" : "736fa8e9bfd128b2",
        "parentUid" : "b30cafe03d7d2ead916d987c473688a1",
        "status" : "failed",
        "time" : {
          "start" : 1650124991828,
          "stop" : 1650124992550,
          "duration" : 722
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ ]
      } ],
      "uid" : "b30cafe03d7d2ead916d987c473688a1"
    }, {
      "name" : "AssertionError: Actual result JsonRpcErrorResponse(id=21, error={'code': -32000, 'message': 'relation \"neon_transactions\" does not exist\\nLINE 3:               FROM neon_transactions AS a\\n                           ^\\n'}, jsonrpc='2.0')\nassert 'gas limit reached' in 'relation \"neon_transactions\" does not exist\\nLINE 3:               FROM neon_transactions AS a\\n                           ^\\n'",
      "children" : [ {
        "name" : "test_generate_bad_sign[1-None-gas limit reached]",
        "uid" : "53d28b86a829be23",
        "parentUid" : "69a258c3ee3faccf048e20e02d8c31f4",
        "status" : "failed",
        "time" : {
          "start" : 1650124996358,
          "stop" : 1650124996894,
          "duration" : 536
        },
        "flaky" : false,
        "newFailed" : true,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ "'gas limit reached'", "1", "None" ]
      } ],
      "uid" : "69a258c3ee3faccf048e20e02d8c31f4"
    }, {
      "name" : "AssertionError: Actual result JsonRpcErrorResponse(id=65, error={'code': -32000, 'message': 'The account balance is less than required: Account 135d5bff9f3638c0379f13b9c263b5ca65dc31a0; balance = 5000000000000000000; gasPrice = 487412400000; gasLimit = 18446744073709551616; fee = 8991171801152549456078438400000; value = 20000000000000000; required_balance = 8991171801152569456078438400000; '}, jsonrpc='2.0')\nassert 'insufficient funds for transfer' in 'The account balance is less than required: Account 135d5bff9f3638c0379f13b9c263b5ca65dc31a0; balance = 50000000000000...fee = 8991171801152549456078438400000; value = 20000000000000000; required_balance = 8991171801152569456078438400000; '",
      "children" : [ {
        "name" : "test_generate_bad_sign[18446744073709551616-None-insufficient funds for transfer]",
        "uid" : "e3701fea2f8e8ec3",
        "parentUid" : "579fc7541967d10c1dd7110c4f93dcf2",
        "status" : "failed",
        "time" : {
          "start" : 1650124999982,
          "stop" : 1650125000486,
          "duration" : 504
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ "'insufficient funds for transfer'", "18446744073709551616", "None" ]
      } ],
      "uid" : "579fc7541967d10c1dd7110c4f93dcf2"
    }, {
      "name" : "AssertionError: Actual result JsonRpcErrorResponse(id=63, error={'code': -32000, 'message': 'relation \"neon_transactions\" does not exist\\nLINE 3:               FROM neon_transactions AS a\\n                           ^\\n'}, jsonrpc='2.0')\nassert 'gas limit reached' in 'relation \"neon_transactions\" does not exist\\nLINE 3:               FROM neon_transactions AS a\\n                           ^\\n'",
      "children" : [ {
        "name" : "test_generate_bad_sign[0-18446744073709551616-gas limit reached]",
        "uid" : "1d1c21a4605aeefc",
        "parentUid" : "fc07edb7c55455a0f76f8d1619a41423",
        "status" : "failed",
        "time" : {
          "start" : 1650125001841,
          "stop" : 1650125002218,
          "duration" : 377
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ "'gas limit reached'", "0", "18446744073709551616" ]
      } ],
      "uid" : "fc07edb7c55455a0f76f8d1619a41423"
    }, {
      "name" : "AssertionError: Actual result JsonRpcErrorResponse(id=15, error={'code': -32000, 'message': 'The account balance is less than required: Account 90f8bcc7cd1258cb55f6073453c8b44c5f96fd69; balance = 5000000000000000000; gasPrice = 18446744073709551616; gasLimit = 1; fee = 18446744073709551616; value = 20000000000000000; required_balance = 18466744073709551616; '}, jsonrpc='2.0')\nassert 'insufficient funds for transfer' in 'The account balance is less than required: Account 90f8bcc7cd1258cb55f6073453c8b44c5f96fd69; balance = 50000000000000...551616; gasLimit = 1; fee = 18446744073709551616; value = 20000000000000000; required_balance = 18466744073709551616; '",
      "children" : [ {
        "name" : "test_generate_bad_sign[1-18446744073709551616-insufficient funds for transfer]",
        "uid" : "44a6185c910096c3",
        "parentUid" : "59fa73ac75e17c96a0c6a7887aa032bc",
        "status" : "failed",
        "time" : {
          "start" : 1650125003573,
          "stop" : 1650125003915,
          "duration" : 342
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ "'insufficient funds for transfer'", "1", "18446744073709551616" ]
      } ],
      "uid" : "59fa73ac75e17c96a0c6a7887aa032bc"
    }, {
      "name" : "AssertionError: Actual result JsonRpcErrorResponse(id=67, error={'code': -32000, 'message': 'The account balance is less than required: Account fd5b73639ce6dc15db4fa2a51b0c176f937b59fb; balance = 5000000000000000000; gasPrice = 18446744073709552; gasLimit = 1000; fee = 18446744073709552000; value = 20000000000000000; required_balance = 18466744073709552000; '}, jsonrpc='2.0')\nassert 'insufficient funds for transfer' in 'The account balance is less than required: Account fd5b73639ce6dc15db4fa2a51b0c176f937b59fb; balance = 50000000000000...552; gasLimit = 1000; fee = 18446744073709552000; value = 20000000000000000; required_balance = 18466744073709552000; '",
      "children" : [ {
        "name" : "test_generate_bad_sign[1000-18446744073709552-insufficient funds for transfer]",
        "uid" : "687ca50153bd0322",
        "parentUid" : "823faf53336954d8ac9e6cca3c456b95",
        "status" : "failed",
        "time" : {
          "start" : 1650125005268,
          "stop" : 1650125005608,
          "duration" : 340
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ "'insufficient funds for transfer'", "1000", "18446744073709552" ]
      } ],
      "uid" : "823faf53336954d8ac9e6cca3c456b95"
    } ],
    "uid" : "8fb3a91ba5aaf9de24cc8a92edc82b5d"
  } ],
  "name" : "categories"
}