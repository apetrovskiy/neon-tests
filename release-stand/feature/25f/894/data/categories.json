{
  "uid" : "4b4757e66a1912dae1a509f688f20b0f",
  "children" : [ {
    "name" : "Test defects",
    "children" : [ {
      "name" : "ValueError: {'code': -32000, 'message': 'relation \"neon_transactions\" does not exist\\nLINE 3:               FROM neon_transactions AS a\\n                           ^\\n'}",
      "children" : [ {
        "name" : "test_rpc_call_eth_getBlockByHash",
        "uid" : "a05f4e2cd836c59f",
        "parentUid" : "69453fb2bc7653d0a16f1bd046aaf65a",
        "status" : "broken",
        "time" : {
          "start" : 1650123566312,
          "stop" : 1650123567697,
          "duration" : 1385
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : true,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ ]
      }, {
        "name" : "test_rpc_call_eth_getBlockByNumber_via_numbers",
        "uid" : "3eb30234a4551718",
        "parentUid" : "69453fb2bc7653d0a16f1bd046aaf65a",
        "status" : "broken",
        "time" : {
          "start" : 1650123570352,
          "stop" : 1650123571431,
          "duration" : 1079
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ ]
      }, {
        "name" : "test_zero_neon",
        "uid" : "f77c1660e0b3b8cb",
        "parentUid" : "69453fb2bc7653d0a16f1bd046aaf65a",
        "status" : "broken",
        "time" : {
          "start" : 1650123724956,
          "stop" : 1650123726015,
          "duration" : 1059
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ ]
      }, {
        "name" : "test_rpc_call_eth_getTransactionCount",
        "uid" : "8fb48215f1695369",
        "parentUid" : "69453fb2bc7653d0a16f1bd046aaf65a",
        "status" : "broken",
        "time" : {
          "start" : 1650123737140,
          "stop" : 1650123738359,
          "duration" : 1219
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ ]
      }, {
        "name" : "test_rpc_call_eth_getTransactionByHash",
        "uid" : "c2cd452d48b2f90e",
        "parentUid" : "69453fb2bc7653d0a16f1bd046aaf65a",
        "status" : "broken",
        "time" : {
          "start" : 1650123742931,
          "stop" : 1650123743975,
          "duration" : 1044
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ ]
      }, {
        "name" : "test_rpc_call_eth_getTransactionReceipt",
        "uid" : "9a281b37cdd4888",
        "parentUid" : "69453fb2bc7653d0a16f1bd046aaf65a",
        "status" : "broken",
        "time" : {
          "start" : 1650123745357,
          "stop" : 1650123746401,
          "duration" : 1044
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : true,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ ]
      } ],
      "uid" : "69453fb2bc7653d0a16f1bd046aaf65a"
    }, {
      "name" : "AttributeError: 'JsonRpcResponse' object has no attribute 'error'",
      "children" : [ {
        "name" : "test_generate_bad_sign[1-None-gas limit reached]",
        "uid" : "c9309b36d5049eef",
        "parentUid" : "5b1e7d62156d662c114542cb4238b3f0",
        "status" : "broken",
        "time" : {
          "start" : 1650123752310,
          "stop" : 1650123753337,
          "duration" : 1027
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ "'gas limit reached'", "1", "None" ]
      } ],
      "uid" : "5b1e7d62156d662c114542cb4238b3f0"
    }, {
      "name" : "TypeError: Transaction had invalid fields: {'gas': 0.01}",
      "children" : [ {
        "name" : "test_generate_bad_sign[0.01-None-Transaction had invalid fields: {'gas']",
        "uid" : "223cd044d0674e0a",
        "parentUid" : "ed55583356fef18e67ebe1252ecaca53",
        "status" : "broken",
        "time" : {
          "start" : 1650123754691,
          "stop" : 1650123755028,
          "duration" : 337
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ "'Transaction had invalid fields: {'gas''", "0.01", "None" ]
      } ],
      "uid" : "ed55583356fef18e67ebe1252ecaca53"
    } ],
    "uid" : "bdbf199525818fae7a8651db9eafe741"
  }, {
    "name" : "Product defects",
    "children" : [ {
      "name" : "AssertionError: <AssertMessage.CONTAINS_ERROR: 'Contains the error data'>\nassert False\n +  where False = <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f588f7ad130>>(JsonRpcErrorResponse(id=64, error={'code': -32000, 'message': 'relation \"neon_transaction_logs\" does not exist\\nLINE 1: SELECT * FROM neon_transaction_logs WHERE address IN (\\'0x5b2...\\n                      ^\\n'}, jsonrpc='2.0'))\n +    where <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f588f7ad130>> = <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f588f7ad130>.assert_no_error_object",
      "children" : [ {
        "name" : "test_rpc_call_eth_getLogs_via_tags[earliest-latest]",
        "uid" : "b1055fdc5c3267df",
        "parentUid" : "82e7dcd5be72413d625f1a65ce8a0f35",
        "status" : "failed",
        "time" : {
          "start" : 1650123579667,
          "stop" : 1650123580505,
          "duration" : 838
        },
        "flaky" : true,
        "newFailed" : true,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ "'earliest'", "'latest'" ]
      } ],
      "uid" : "82e7dcd5be72413d625f1a65ce8a0f35"
    }, {
      "name" : "AssertionError: <AssertMessage.CONTAINS_ERROR: 'Contains the error data'>\nassert False\n +  where False = <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f588f7abfd0>>(JsonRpcErrorResponse(id=29, error={'code': -32000, 'message': 'relation \"neon_transaction_logs\" does not exist\\nLINE 1: SELECT * FROM neon_transaction_logs WHERE address IN (\\'0xa07...\\n                      ^\\n'}, jsonrpc='2.0'))\n +    where <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f588f7abfd0>> = <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f588f7abfd0>.assert_no_error_object",
      "children" : [ {
        "name" : "test_rpc_call_eth_getLogs_via_tags[pending-latest]",
        "uid" : "cc6c0a028242ae88",
        "parentUid" : "e1467537d0d6b2d5b778ee1e1c4c5a1b",
        "status" : "failed",
        "time" : {
          "start" : 1650123580516,
          "stop" : 1650123581354,
          "duration" : 838
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ "'pending'", "'latest'" ]
      } ],
      "uid" : "e1467537d0d6b2d5b778ee1e1c4c5a1b"
    }, {
      "name" : "AssertionError: <AssertMessage.CONTAINS_ERROR: 'Contains the error data'>\nassert False\n +  where False = <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f588fb40820>>(JsonRpcErrorResponse(id=76, error={'code': -32000, 'message': 'relation \"neon_transaction_logs\" does not exist\\nLINE 1: SELECT * FROM neon_transaction_logs WHERE address IN (\\'0x165...\\n                      ^\\n'}, jsonrpc='2.0'))\n +    where <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f588fb40820>> = <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f588fb40820>.assert_no_error_object",
      "children" : [ {
        "name" : "test_rpc_call_eth_getLogs_via_tags[latest-pending]",
        "uid" : "c711c703d81e5",
        "parentUid" : "f62395e5dd04c38f1cefdde55e08f5b6",
        "status" : "failed",
        "time" : {
          "start" : 1650123582206,
          "stop" : 1650123583042,
          "duration" : 836
        },
        "flaky" : true,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ "'latest'", "'pending'" ]
      } ],
      "uid" : "f62395e5dd04c38f1cefdde55e08f5b6"
    }, {
      "name" : "AssertionError: <AssertMessage.CONTAINS_ERROR: 'Contains the error data'>\nassert False\n +  where False = <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f588f683730>>(JsonRpcErrorResponse(id=60, error={'code': -32000, 'message': 'relation \"neon_accounts\" does not exist\\nLINE 3:               FROM neon_accounts AS a\\n                           ^\\n'}, jsonrpc='2.0'))\n +    where <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f588f683730>> = <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f588f683730>.assert_no_error_object",
      "children" : [ {
        "name" : "test_rpc_call_eth_getCode",
        "uid" : "d9f2fa2447e03862",
        "parentUid" : "ba58f5ed9aa36795030af8fdf54395db",
        "status" : "failed",
        "time" : {
          "start" : 1650123584735,
          "stop" : 1650123585573,
          "duration" : 838
        },
        "flaky" : true,
        "newFailed" : true,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ ]
      } ],
      "uid" : "ba58f5ed9aa36795030af8fdf54395db"
    }, {
      "name" : "AssertionError",
      "children" : [ {
        "name" : "test_send_more_than_exist_on_account_neon[1501]",
        "uid" : "a74c33e472488e8c",
        "parentUid" : "a0017ad855102fea08b8682d27fec4ca",
        "status" : "failed",
        "time" : {
          "start" : 1650123720557,
          "stop" : 1650123721394,
          "duration" : 837
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ "1501" ]
      }, {
        "name" : "test_send_more_than_exist_on_account_neon[10000.1]",
        "uid" : "600993903c0ebd5f",
        "parentUid" : "a0017ad855102fea08b8682d27fec4ca",
        "status" : "failed",
        "time" : {
          "start" : 1650123722754,
          "stop" : 1650123723591,
          "duration" : 837
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ "10000.1" ]
      }, {
        "name" : "test_there_are_not_enough_neons_for_gas_fee",
        "uid" : "bd72fd3c1e85355c",
        "parentUid" : "a0017ad855102fea08b8682d27fec4ca",
        "status" : "failed",
        "time" : {
          "start" : 1650123730255,
          "stop" : 1650123731951,
          "duration" : 1696
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ ]
      }, {
        "name" : "test_there_are_not_enough_neons_for_transfer",
        "uid" : "1fc125cb1d85094c",
        "parentUid" : "a0017ad855102fea08b8682d27fec4ca",
        "status" : "failed",
        "time" : {
          "start" : 1650123731966,
          "stop" : 1650123733481,
          "duration" : 1515
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ ]
      } ],
      "uid" : "a0017ad855102fea08b8682d27fec4ca"
    }, {
      "name" : "AssertionError: The response type is error response\nassert False\n +  where False = <bound method BasicTests.assert_is_successful_response of <integration.tests.basic.test_transfers.TestRpcCallsTransactions object at 0x7f588f54b3a0>>(JsonRpcErrorResponse(id=91, error={'code': -32000, 'message': 'relation \"neon_transactions\" does not exist\\nLINE 3:               FROM neon_transactions AS a\\n                           ^\\n'}, jsonrpc='2.0'))\n +    where <bound method BasicTests.assert_is_successful_response of <integration.tests.basic.test_transfers.TestRpcCallsTransactions object at 0x7f588f54b3a0>> = <integration.tests.basic.test_transfers.TestRpcCallsTransactions object at 0x7f588f54b3a0>.assert_is_successful_response",
      "children" : [ {
        "name" : "test_check_erc_1820_transaction",
        "uid" : "831310f6465dd2f7",
        "parentUid" : "e2d529f142e6a8d4221059c5d3548551",
        "status" : "failed",
        "time" : {
          "start" : 1650123747787,
          "stop" : 1650123748496,
          "duration" : 709
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ ]
      } ],
      "uid" : "e2d529f142e6a8d4221059c5d3548551"
    }, {
      "name" : "AssertionError: Actual result JsonRpcErrorResponse(id=69, error={'code': -32000, 'message': 'The account balance is less than required: Account 3f9e39933c579dc2554d821474afb86e6f9ee831; balance = 5000000000000000000; gasPrice = 487412400000; gasLimit = 18446744073709551616; fee = 8991171801152549456078438400000; value = 20000000000000000; required_balance = 8991171801152569456078438400000; '}, jsonrpc='2.0')\nassert 'insufficient funds for transfer' in 'The account balance is less than required: Account 3f9e39933c579dc2554d821474afb86e6f9ee831; balance = 50000000000000...fee = 8991171801152549456078438400000; value = 20000000000000000; required_balance = 8991171801152569456078438400000; '",
      "children" : [ {
        "name" : "test_generate_bad_sign[18446744073709551616-None-insufficient funds for transfer]",
        "uid" : "18fd5b504897b675",
        "parentUid" : "37c3477fb913dfbcd0d0e6e0c3a0810b",
        "status" : "failed",
        "time" : {
          "start" : 1650123756448,
          "stop" : 1650123756957,
          "duration" : 509
        },
        "flaky" : false,
        "newFailed" : true,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ "'insufficient funds for transfer'", "18446744073709551616", "None" ]
      } ],
      "uid" : "37c3477fb913dfbcd0d0e6e0c3a0810b"
    }, {
      "name" : "AssertionError: Actual result JsonRpcErrorResponse(id=26, error={'code': -32000, 'message': 'relation \"neon_transactions\" does not exist\\nLINE 3:               FROM neon_transactions AS a\\n                           ^\\n'}, jsonrpc='2.0')\nassert 'gas limit reached' in 'relation \"neon_transactions\" does not exist\\nLINE 3:               FROM neon_transactions AS a\\n                           ^\\n'",
      "children" : [ {
        "name" : "test_generate_bad_sign[0-18446744073709551616-gas limit reached]",
        "uid" : "b688776bd59c40f6",
        "parentUid" : "bce2491557f663eb30f7d0e05de4e6db",
        "status" : "failed",
        "time" : {
          "start" : 1650123758312,
          "stop" : 1650123758684,
          "duration" : 372
        },
        "flaky" : false,
        "newFailed" : true,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ "'gas limit reached'", "0", "18446744073709551616" ]
      } ],
      "uid" : "bce2491557f663eb30f7d0e05de4e6db"
    }, {
      "name" : "AssertionError: Actual result JsonRpcErrorResponse(id=63, error={'code': -32000, 'message': 'The account balance is less than required: Account b40b7be1b6635e88397ce87564c5eee72e21a1f7; balance = 5000000000000000000; gasPrice = 18446744073709551616; gasLimit = 1; fee = 18446744073709551616; value = 20000000000000000; required_balance = 18466744073709551616; '}, jsonrpc='2.0')\nassert 'insufficient funds for transfer' in 'The account balance is less than required: Account b40b7be1b6635e88397ce87564c5eee72e21a1f7; balance = 50000000000000...551616; gasLimit = 1; fee = 18446744073709551616; value = 20000000000000000; required_balance = 18466744073709551616; '",
      "children" : [ {
        "name" : "test_generate_bad_sign[1-18446744073709551616-insufficient funds for transfer]",
        "uid" : "41c1e7464ccda58b",
        "parentUid" : "58d112adebd1f63e0b5629050ee4604e",
        "status" : "failed",
        "time" : {
          "start" : 1650123760044,
          "stop" : 1650123760389,
          "duration" : 345
        },
        "flaky" : false,
        "newFailed" : true,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ "'insufficient funds for transfer'", "1", "18446744073709551616" ]
      } ],
      "uid" : "58d112adebd1f63e0b5629050ee4604e"
    }, {
      "name" : "AssertionError: Actual result JsonRpcErrorResponse(id=37, error={'code': -32000, 'message': 'The account balance is less than required: Account 8acffc774231822bfa465953ad55eaa08f7b150f; balance = 5000000000000000000; gasPrice = 18446744073709552; gasLimit = 1000; fee = 18446744073709552000; value = 20000000000000000; required_balance = 18466744073709552000; '}, jsonrpc='2.0')\nassert 'insufficient funds for transfer' in 'The account balance is less than required: Account 8acffc774231822bfa465953ad55eaa08f7b150f; balance = 50000000000000...552; gasLimit = 1000; fee = 18446744073709552000; value = 20000000000000000; required_balance = 18466744073709552000; '",
      "children" : [ {
        "name" : "test_generate_bad_sign[1000-18446744073709552-insufficient funds for transfer]",
        "uid" : "981b7f4c6d6d032f",
        "parentUid" : "ede70a2daf8d96eeb6cfd1daa715f494",
        "status" : "failed",
        "time" : {
          "start" : 1650123761747,
          "stop" : 1650123762093,
          "duration" : 346
        },
        "flaky" : false,
        "newFailed" : true,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ "'insufficient funds for transfer'", "1000", "18446744073709552" ]
      } ],
      "uid" : "ede70a2daf8d96eeb6cfd1daa715f494"
    } ],
    "uid" : "8fb3a91ba5aaf9de24cc8a92edc82b5d"
  } ],
  "name" : "categories"
}