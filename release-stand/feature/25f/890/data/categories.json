{
  "uid" : "4b4757e66a1912dae1a509f688f20b0f",
  "children" : [ {
    "name" : "Test defects",
    "children" : [ {
      "name" : "ValueError: {'code': -32000, 'message': 'relation \"neon_transactions\" does not exist\\nLINE 3:               FROM neon_transactions AS a\\n                           ^\\n'}",
      "children" : [ {
        "name" : "test_rpc_call_eth_getBlockByHash",
        "uid" : "6aaf172083caacc0",
        "parentUid" : "69453fb2bc7653d0a16f1bd046aaf65a",
        "status" : "broken",
        "time" : {
          "start" : 1650121601686,
          "stop" : 1650121602550,
          "duration" : 864
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ ]
      }, {
        "name" : "test_rpc_call_eth_getBlockByNumber_via_numbers",
        "uid" : "f38f13dbbafb43df",
        "parentUid" : "69453fb2bc7653d0a16f1bd046aaf65a",
        "status" : "broken",
        "time" : {
          "start" : 1650121604913,
          "stop" : 1650121605738,
          "duration" : 825
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : true,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ ]
      }, {
        "name" : "test_rpc_call_eth_call",
        "uid" : "59603ece8565dc95",
        "parentUid" : "69453fb2bc7653d0a16f1bd046aaf65a",
        "status" : "broken",
        "time" : {
          "start" : 1650121609039,
          "stop" : 1650121609835,
          "duration" : 796
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ ]
      }, {
        "name" : "test_send_neon_from_one_account_to_another[0.01]",
        "uid" : "b5f75a382ca76115",
        "parentUid" : "69453fb2bc7653d0a16f1bd046aaf65a",
        "status" : "broken",
        "time" : {
          "start" : 1650121731534,
          "stop" : 1650121732422,
          "duration" : 888
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : true,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ "0.01" ]
      }, {
        "name" : "test_send_neon_from_one_account_to_another[1]",
        "uid" : "86e38b154c6300a",
        "parentUid" : "69453fb2bc7653d0a16f1bd046aaf65a",
        "status" : "broken",
        "time" : {
          "start" : 1650121733721,
          "stop" : 1650121734516,
          "duration" : 795
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ "1" ]
      }, {
        "name" : "test_send_neon_from_one_account_to_another[1.1]",
        "uid" : "dc4f565f281abff2",
        "parentUid" : "69453fb2bc7653d0a16f1bd046aaf65a",
        "status" : "broken",
        "time" : {
          "start" : 1650121735815,
          "stop" : 1650121736613,
          "duration" : 798
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : true,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ "1.1" ]
      }, {
        "name" : "test_rpc_call_eth_getTransactionCount",
        "uid" : "6822fb6bacd82351",
        "parentUid" : "69453fb2bc7653d0a16f1bd046aaf65a",
        "status" : "broken",
        "time" : {
          "start" : 1650121753072,
          "stop" : 1650121753878,
          "duration" : 806
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ ]
      }, {
        "name" : "test_rpc_call_eth_getTransactionReceipt",
        "uid" : "e71676063843a9ae",
        "parentUid" : "69453fb2bc7653d0a16f1bd046aaf65a",
        "status" : "broken",
        "time" : {
          "start" : 1650121760424,
          "stop" : 1650121761230,
          "duration" : 806
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : true,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ ]
      } ],
      "uid" : "69453fb2bc7653d0a16f1bd046aaf65a"
    }, {
      "name" : "TypeError: Transaction must include these fields: {'gasPrice'}",
      "children" : [ {
        "name" : "test_generate_bad_sign[1-None-gas limit reached]",
        "uid" : "258e70f87b5f9b12",
        "parentUid" : "d97ad279c0d5b61a80528dcb71ce98f5",
        "status" : "broken",
        "time" : {
          "start" : 1650121766472,
          "stop" : 1650121766606,
          "duration" : 134
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ "'gas limit reached'", "1", "None" ]
      }, {
        "name" : "test_generate_bad_sign[0.01-None-Transaction had invalid fields: {'gas']",
        "uid" : "9460962d748c46b2",
        "parentUid" : "d97ad279c0d5b61a80528dcb71ce98f5",
        "status" : "broken",
        "time" : {
          "start" : 1650121767894,
          "stop" : 1650121768028,
          "duration" : 134
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ "'Transaction had invalid fields: {'gas''", "0.01", "None" ]
      }, {
        "name" : "test_generate_bad_sign[18446744073709551616-None-insufficient funds for transfer]",
        "uid" : "4c9367f36bc1505f",
        "parentUid" : "d97ad279c0d5b61a80528dcb71ce98f5",
        "status" : "broken",
        "time" : {
          "start" : 1650121769315,
          "stop" : 1650121769447,
          "duration" : 132
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ "'insufficient funds for transfer'", "18446744073709551616", "None" ]
      } ],
      "uid" : "d97ad279c0d5b61a80528dcb71ce98f5"
    } ],
    "uid" : "bdbf199525818fae7a8651db9eafe741"
  }, {
    "name" : "Product defects",
    "children" : [ {
      "name" : "AssertionError: <AssertMessage.CONTAINS_ERROR: 'Contains the error data'>\nassert False\n +  where False = <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f851d21f070>>(JsonRpcErrorResponse(id=71, error={'code': -32000, 'message': 'relation \"neon_transaction_logs\" does not exist\\nLINE 1: SELECT * FROM neon_transaction_logs WHERE address IN (\\'0xddb...\\n                      ^\\n'}, jsonrpc='2.0'))\n +    where <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f851d21f070>> = <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f851d21f070>.assert_no_error_object",
      "children" : [ {
        "name" : "test_rpc_call_eth_getLogs_via_tags[latest-latest]",
        "uid" : "a3109f52f46af24a",
        "parentUid" : "a81f44fd73fc96929ba6becd3a240493",
        "status" : "failed",
        "time" : {
          "start" : 1650121611435,
          "stop" : 1650121612199,
          "duration" : 764
        },
        "flaky" : true,
        "newFailed" : true,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ "'latest'", "'latest'" ]
      } ],
      "uid" : "a81f44fd73fc96929ba6becd3a240493"
    }, {
      "name" : "AssertionError: <AssertMessage.CONTAINS_ERROR: 'Contains the error data'>\nassert False\n +  where False = <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f851d5c1cd0>>(JsonRpcErrorResponse(id=71, error={'code': -32000, 'message': 'relation \"neon_transaction_logs\" does not exist\\nLINE 1: SELECT * FROM neon_transaction_logs WHERE address IN (\\'0x627...\\n                      ^\\n'}, jsonrpc='2.0'))\n +    where <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f851d5c1cd0>> = <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f851d5c1cd0>.assert_no_error_object",
      "children" : [ {
        "name" : "test_rpc_call_eth_getLogs_via_tags[earliest-latest]",
        "uid" : "3364bca4b021839d",
        "parentUid" : "331e5bfbf3041b8f9b1cd5135f4807d1",
        "status" : "failed",
        "time" : {
          "start" : 1650121612206,
          "stop" : 1650121612968,
          "duration" : 762
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ "'earliest'", "'latest'" ]
      } ],
      "uid" : "331e5bfbf3041b8f9b1cd5135f4807d1"
    }, {
      "name" : "AssertionError: <AssertMessage.CONTAINS_ERROR: 'Contains the error data'>\nassert False\n +  where False = <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f851d1af940>>(JsonRpcErrorResponse(id=94, error={'code': -32000, 'message': 'relation \"neon_transaction_logs\" does not exist\\nLINE 1: SELECT * FROM neon_transaction_logs WHERE address IN (\\'0xbc1...\\n                      ^\\n'}, jsonrpc='2.0'))\n +    where <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f851d1af940>> = <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f851d1af940>.assert_no_error_object",
      "children" : [ {
        "name" : "test_rpc_call_eth_getLogs_via_tags[pending-latest]",
        "uid" : "b606d2a9231d3e18",
        "parentUid" : "0172920b82ec88e87b82e6097693dd3c",
        "status" : "failed",
        "time" : {
          "start" : 1650121612976,
          "stop" : 1650121613738,
          "duration" : 762
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ "'pending'", "'latest'" ]
      } ],
      "uid" : "0172920b82ec88e87b82e6097693dd3c"
    }, {
      "name" : "AssertionError: <AssertMessage.CONTAINS_ERROR: 'Contains the error data'>\nassert False\n +  where False = <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f851d235df0>>(JsonRpcErrorResponse(id=83, error={'code': -32000, 'message': 'relation \"neon_transaction_logs\" does not exist\\nLINE 1: SELECT * FROM neon_transaction_logs WHERE address IN (\\'0xdf6...\\n                      ^\\n'}, jsonrpc='2.0'))\n +    where <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f851d235df0>> = <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f851d235df0>.assert_no_error_object",
      "children" : [ {
        "name" : "test_rpc_call_eth_getLogs_via_numbers",
        "uid" : "56cd65d80ade7d51",
        "parentUid" : "58e65a8aeef4aaec87ece18cdc50c7e4",
        "status" : "failed",
        "time" : {
          "start" : 1650121615276,
          "stop" : 1650121616037,
          "duration" : 761
        },
        "flaky" : true,
        "newFailed" : true,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ ]
      } ],
      "uid" : "58e65a8aeef4aaec87ece18cdc50c7e4"
    }, {
      "name" : "AssertionError: <AssertMessage.CONTAINS_ERROR: 'Contains the error data'>\nassert False\n +  where False = <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f851d27c7c0>>(JsonRpcErrorResponse(id=51, error={'code': -32000, 'message': 'relation \"neon_accounts\" does not exist\\nLINE 3:               FROM neon_accounts AS a\\n                           ^\\n'}, jsonrpc='2.0'))\n +    where <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f851d27c7c0>> = <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f851d27c7c0>.assert_no_error_object",
      "children" : [ {
        "name" : "test_rpc_call_eth_getCode",
        "uid" : "93b3f3c9f48c07c0",
        "parentUid" : "8a714250304f8c89497df343fc38f910",
        "status" : "failed",
        "time" : {
          "start" : 1650121616809,
          "stop" : 1650121617569,
          "duration" : 760
        },
        "flaky" : false,
        "newFailed" : true,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ ]
      } ],
      "uid" : "8a714250304f8c89497df343fc38f910"
    }, {
      "name" : "AssertionError",
      "children" : [ {
        "name" : "test_send_more_than_exist_on_account_neon[1501]",
        "uid" : "c5311df4f295af18",
        "parentUid" : "a0017ad855102fea08b8682d27fec4ca",
        "status" : "failed",
        "time" : {
          "start" : 1650121737913,
          "stop" : 1650121738551,
          "duration" : 638
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ "1501" ]
      }, {
        "name" : "test_send_more_than_exist_on_account_neon[10000.1]",
        "uid" : "4e76a6eae833d0d0",
        "parentUid" : "a0017ad855102fea08b8682d27fec4ca",
        "status" : "failed",
        "time" : {
          "start" : 1650121739830,
          "stop" : 1650121740532,
          "duration" : 702
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ "10000.1" ]
      }, {
        "name" : "test_there_are_not_enough_neons_for_gas_fee",
        "uid" : "d570622e5008a215",
        "parentUid" : "a0017ad855102fea08b8682d27fec4ca",
        "status" : "failed",
        "time" : {
          "start" : 1650121747077,
          "stop" : 1650121748488,
          "duration" : 1411
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ ]
      }, {
        "name" : "test_there_are_not_enough_neons_for_transfer",
        "uid" : "abdddff6740880de",
        "parentUid" : "a0017ad855102fea08b8682d27fec4ca",
        "status" : "failed",
        "time" : {
          "start" : 1650121748501,
          "stop" : 1650121749772,
          "duration" : 1271
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ ]
      } ],
      "uid" : "a0017ad855102fea08b8682d27fec4ca"
    }, {
      "name" : "AssertionError: The response type is error response\nassert False\n +  where False = <bound method BasicTests.assert_is_successful_response of <integration.tests.basic.test_transfers.TestRpcCallsTransactions object at 0x7f851d168a30>>(JsonRpcErrorResponse(id=64, error={'code': -32000, 'message': 'relation \"neon_transactions\" does not exist\\nLINE 3:               FROM neon_transactions AS a\\n                           ^\\n'}, jsonrpc='2.0'))\n +    where <bound method BasicTests.assert_is_successful_response of <integration.tests.basic.test_transfers.TestRpcCallsTransactions object at 0x7f851d168a30>> = <integration.tests.basic.test_transfers.TestRpcCallsTransactions object at 0x7f851d168a30>.assert_is_successful_response",
      "children" : [ {
        "name" : "test_rpc_call_eth_sendRawTransaction",
        "uid" : "455293e2f2927a60",
        "parentUid" : "0cfbd3135bcaf8398872c2a33a165e53",
        "status" : "failed",
        "time" : {
          "start" : 1650121755205,
          "stop" : 1650121756126,
          "duration" : 921
        },
        "flaky" : true,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ ]
      } ],
      "uid" : "0cfbd3135bcaf8398872c2a33a165e53"
    }, {
      "name" : "AssertionError: The response type is error response\nassert False\n +  where False = <bound method BasicTests.assert_is_successful_response of <integration.tests.basic.test_transfers.TestRpcCallsTransactions object at 0x7f851d0b8ac0>>(JsonRpcErrorResponse(id=5, error='InvalidInstructionData', jsonrpc='2.0'))\n +    where <bound method BasicTests.assert_is_successful_response of <integration.tests.basic.test_transfers.TestRpcCallsTransactions object at 0x7f851d0b8ac0>> = <integration.tests.basic.test_transfers.TestRpcCallsTransactions object at 0x7f851d0b8ac0>.assert_is_successful_response",
      "children" : [ {
        "name" : "test_check_erc_1820_transaction",
        "uid" : "eabf2f5483542cbd",
        "parentUid" : "d2b3585195ca2d32fb313aef48fbfcac",
        "status" : "failed",
        "time" : {
          "start" : 1650121762528,
          "stop" : 1650121763115,
          "duration" : 587
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ ]
      } ],
      "uid" : "d2b3585195ca2d32fb313aef48fbfcac"
    }, {
      "name" : "AssertionError: Actual result JsonRpcErrorResponse(id=8, error={'code': -32000, 'message': 'relation \"neon_transactions\" does not exist\\nLINE 3:               FROM neon_transactions AS a\\n                           ^\\n'}, jsonrpc='2.0')\nassert 'insufficient funds for transfer' in {'code': -32000, 'message': 'relation \"neon_transactions\" does not exist\\nLINE 3:               FROM neon_transactions AS a\\n                           ^\\n'}\n +  where {'code': -32000, 'message': 'relation \"neon_transactions\" does not exist\\nLINE 3:               FROM neon_transactions AS a\\n                           ^\\n'} = JsonRpcErrorResponse(id=8, error={'code': -32000, 'message': 'relation \"neon_transactions\" does not exist\\nLINE 3:               FROM neon_transactions AS a\\n                           ^\\n'}, jsonrpc='2.0').error",
      "children" : [ {
        "name" : "test_generate_bad_sign[0-18446744073709551616-insufficient funds for transfer]",
        "uid" : "a19ebf86ae7af8fd",
        "parentUid" : "0d6407e675f033d475b9b168f0b32e0a",
        "status" : "failed",
        "time" : {
          "start" : 1650121770735,
          "stop" : 1650121771034,
          "duration" : 299
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ "'insufficient funds for transfer'", "0", "18446744073709551616" ]
      } ],
      "uid" : "0d6407e675f033d475b9b168f0b32e0a"
    }, {
      "name" : "AssertionError: Actual result JsonRpcErrorResponse(id=30, error={'code': -32000, 'message': 'The account balance is less than required: Account 68f4b4de3ca9ed855e047c6502f9ac23d0513e84; balance = 5000000000000000000; gasPrice = 18446744073709551616; gasLimit = 1; fee = 18446744073709551616; value = 20000000000000000; required_balance = 18466744073709551616; '}, jsonrpc='2.0')\nassert 'insufficient funds for transfer' in {'code': -32000, 'message': 'The account balance is less than required: Account 68f4b4de3ca9ed855e047c6502f9ac23d0513e...51616; gasLimit = 1; fee = 18446744073709551616; value = 20000000000000000; required_balance = 18466744073709551616; '}\n +  where {'code': -32000, 'message': 'The account balance is less than required: Account 68f4b4de3ca9ed855e047c6502f9ac23d0513e...51616; gasLimit = 1; fee = 18446744073709551616; value = 20000000000000000; required_balance = 18466744073709551616; '} = JsonRpcErrorResponse(id=30, error={'code': -32000, 'message': 'The account balance is less than required: Account 68f4...= 1; fee = 18446744073709551616; value = 20000000000000000; required_balance = 18466744073709551616; '}, jsonrpc='2.0').error",
      "children" : [ {
        "name" : "test_generate_bad_sign[1-18446744073709551616-insufficient funds for transfer]",
        "uid" : "7b484eba14382232",
        "parentUid" : "cecc9dd1f11a192804cb6507a6cafc26",
        "status" : "failed",
        "time" : {
          "start" : 1650121772310,
          "stop" : 1650121772576,
          "duration" : 266
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ "'insufficient funds for transfer'", "1", "18446744073709551616" ]
      } ],
      "uid" : "cecc9dd1f11a192804cb6507a6cafc26"
    }, {
      "name" : "AssertionError: Actual result JsonRpcErrorResponse(id=32, error={'code': -32000, 'message': 'The account balance is less than required: Account 7eb966ed64c1bef396d735324d49dfffd1cf05c8; balance = 5000000000000000000; gasPrice = 18446744073709552; gasLimit = 1000; fee = 18446744073709552000; value = 20000000000000000; required_balance = 18466744073709552000; '}, jsonrpc='2.0')\nassert 'insufficient funds for transfer' in {'code': -32000, 'message': 'The account balance is less than required: Account 7eb966ed64c1bef396d735324d49dfffd1cf05...52; gasLimit = 1000; fee = 18446744073709552000; value = 20000000000000000; required_balance = 18466744073709552000; '}\n +  where {'code': -32000, 'message': 'The account balance is less than required: Account 7eb966ed64c1bef396d735324d49dfffd1cf05...52; gasLimit = 1000; fee = 18446744073709552000; value = 20000000000000000; required_balance = 18466744073709552000; '} = JsonRpcErrorResponse(id=32, error={'code': -32000, 'message': 'The account balance is less than required: Account 7eb9...000; fee = 18446744073709552000; value = 20000000000000000; required_balance = 18466744073709552000; '}, jsonrpc='2.0').error",
      "children" : [ {
        "name" : "test_generate_bad_sign[1000-18446744073709552-insufficient funds for transfer]",
        "uid" : "48eff4ec8ae77507",
        "parentUid" : "cfcbf3f036134044914162c38e2a603c",
        "status" : "failed",
        "time" : {
          "start" : 1650121773860,
          "stop" : 1650121774125,
          "duration" : 265
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ "'insufficient funds for transfer'", "1000", "18446744073709552" ]
      } ],
      "uid" : "cfcbf3f036134044914162c38e2a603c"
    } ],
    "uid" : "8fb3a91ba5aaf9de24cc8a92edc82b5d"
  } ],
  "name" : "categories"
}