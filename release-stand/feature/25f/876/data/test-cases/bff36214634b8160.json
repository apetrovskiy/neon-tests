{
  "uid" : "bff36214634b8160",
  "name" : "test_send_more_than_exist_on_account_neon[10000.1]",
  "fullName" : "integration.tests.basic.test_transfers.TestTransfer#test_send_more_than_exist_on_account_neon",
  "historyId" : "846952fe5ae186a491ca35d8b8adc7c4",
  "time" : {
    "start" : 1650043155121,
    "stop" : 1650043155976,
    "duration" : 855
  },
  "description" : "Send more than exist on account: neon",
  "descriptionHtml" : "<p>Send more than exist on account: neon</p>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError",
  "statusTrace" : "self = <integration.tests.basic.test_transfers.TestTransfer object at 0x7f2bcdb9c970>\namount = 10000.1, prepare_accounts = None\n\n    @pytest.mark.parametrize(\"amount\", WRONG_TRANSFER_AMOUNT_DATA)\n    def test_send_more_than_exist_on_account_neon(self, amount: Union[int,\n                                                                      float],\n                                                  prepare_accounts):\n        \"\"\"Send more than exist on account: neon\"\"\"\n    \n>       self.check_value_error_if_less_than_required(self.sender_account,\n                                                     self.recipient_account,\n                                                     amount)\n\nintegration/tests/basic/test_transfers.py:77: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nintegration/tests/basic/helpers/basic.py:118: in check_value_error_if_less_than_required\n    return self.process_transaction_with_failure(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <integration.tests.basic.test_transfers.TestTransfer object at 0x7f2bcdb9c970>\nsender_account = <eth_account.signers.local.LocalAccount object at 0x7f2bcda75bb0>\nrecipient_account = <eth_account.signers.local.LocalAccount object at 0x7f2bcda75220>\namount = 10000.1, gas = 0, gas_price = None\nerror_message = 'insufficient funds for transfer'\n\n    def process_transaction_with_failure(\n            self,\n            sender_account: Account,\n            recipient_account: Union[Account, AccountData],\n            amount: int,\n            gas: Optional[int] = 0,\n            gas_price: Optional[int] = None,\n            error_message: str = \"\") -> Union[web3.types.TxReceipt, None]:\n        '''Processes transaction, expects a failure'''\n    \n        tx: Union[web3.types.TxReceipt, None] = None\n        with allure.step(\n                f\"Sending {amount} from {sender_account.address} to {recipient_account.address}\"\n        ):\n            with pytest.raises(Exception) as error_info:\n                tx = self.web3_client.send_neon(sender_account,\n                                                recipient_account, amount, gas,\n                                                gas_price)\n    \n            if error_info != None:\n    \n                if error_message:\n>                   assert error_message in str(error_info)\nE                   AssertionError\n\nintegration/tests/basic/helpers/basic.py:109: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "pytestconfig",
    "time" : {
      "start" : 1650042992966,
      "stop" : 1650042992967,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "web3_client",
    "time" : {
      "start" : 1650042992967,
      "stop" : 1650042992968,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "allure_environment",
    "time" : {
      "start" : 1650042992969,
      "stop" : 1650042993976,
      "duration" : 1007
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "jsonrpc_requester",
    "time" : {
      "start" : 1650042993977,
      "stop" : 1650042993977,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "faucet",
    "time" : {
      "start" : 1650042993977,
      "stop" : 1650042993977,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "operator",
    "time" : {
      "start" : 1650042993977,
      "stop" : 1650042993978,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "sol_client",
    "time" : {
      "start" : 1650042993978,
      "stop" : 1650042993978,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_account",
    "time" : {
      "start" : 1650043140084,
      "stop" : 1650043141584,
      "duration" : 1500
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Create account for tests",
      "time" : {
        "start" : 1650043140084,
        "stop" : 1650043140088,
        "duration" : 4
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Request 1000 NEON from faucet for 0x954A07afcfC5B51Ee7F2767bacc153F98014F52F",
      "time" : {
        "start" : 1650043140088,
        "stop" : 1650043140927,
        "duration" : 839
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Operator initial balance: 968778054.0 NEON 4912.529637 SOL",
      "time" : {
        "start" : 1650043141584,
        "stop" : 1650043141584,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 3,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "prepare",
    "time" : {
      "start" : 1650043153767,
      "stop" : 1650043153767,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_accounts",
    "time" : {
      "start" : 1650043153768,
      "stop" : 1650043155120,
      "duration" : 1352
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_json_rpc_requester",
    "time" : {
      "start" : 1650043153768,
      "stop" : 1650043153768,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_account",
    "time" : {
      "start" : 1650043153768,
      "stop" : 1650043153768,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "Send more than exist on account: neon",
    "status" : "failed",
    "statusMessage" : "AssertionError",
    "statusTrace" : "self = <integration.tests.basic.test_transfers.TestTransfer object at 0x7f2bcdb9c970>\namount = 10000.1, prepare_accounts = None\n\n    @pytest.mark.parametrize(\"amount\", WRONG_TRANSFER_AMOUNT_DATA)\n    def test_send_more_than_exist_on_account_neon(self, amount: Union[int,\n                                                                      float],\n                                                  prepare_accounts):\n        \"\"\"Send more than exist on account: neon\"\"\"\n    \n>       self.check_value_error_if_less_than_required(self.sender_account,\n                                                     self.recipient_account,\n                                                     amount)\n\nintegration/tests/basic/test_transfers.py:77: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nintegration/tests/basic/helpers/basic.py:118: in check_value_error_if_less_than_required\n    return self.process_transaction_with_failure(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <integration.tests.basic.test_transfers.TestTransfer object at 0x7f2bcdb9c970>\nsender_account = <eth_account.signers.local.LocalAccount object at 0x7f2bcda75bb0>\nrecipient_account = <eth_account.signers.local.LocalAccount object at 0x7f2bcda75220>\namount = 10000.1, gas = 0, gas_price = None\nerror_message = 'insufficient funds for transfer'\n\n    def process_transaction_with_failure(\n            self,\n            sender_account: Account,\n            recipient_account: Union[Account, AccountData],\n            amount: int,\n            gas: Optional[int] = 0,\n            gas_price: Optional[int] = None,\n            error_message: str = \"\") -> Union[web3.types.TxReceipt, None]:\n        '''Processes transaction, expects a failure'''\n    \n        tx: Union[web3.types.TxReceipt, None] = None\n        with allure.step(\n                f\"Sending {amount} from {sender_account.address} to {recipient_account.address}\"\n        ):\n            with pytest.raises(Exception) as error_info:\n                tx = self.web3_client.send_neon(sender_account,\n                                                recipient_account, amount, gas,\n                                                gas_price)\n    \n            if error_info != None:\n    \n                if error_message:\n>                   assert error_message in str(error_info)\nE                   AssertionError\n\nintegration/tests/basic/helpers/basic.py:109: AssertionError",
    "steps" : [ {
      "name" : "Sending 10000.1 from 0x92426EE3364d436F27de17BC46bf96566fDCD764 to 0xbCf5f5cAD56512E5CEc54AcDFb91FF9077e2c646",
      "time" : {
        "start" : 1650043155122,
        "stop" : 1650043155975,
        "duration" : 853
      },
      "status" : "failed",
      "statusMessage" : "AssertionError\n",
      "statusTrace" : "  File \"/home/runner/work/neon-tests/neon-tests/integration/tests/basic/helpers/basic.py\", line 109, in process_transaction_with_failure\n    assert error_message in str(error_info)\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "prepare_accounts::0",
    "time" : {
      "start" : 1650043155990,
      "stop" : 1650043155990,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_account::0",
    "time" : {
      "start" : 1650043165983,
      "stop" : 1650043166815,
      "duration" : 832
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Operator end balance: 968777972.0 NEON 4912.50146928 SOL",
      "time" : {
        "start" : 1650043166645,
        "stop" : 1650043166645,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Account end balance: 1000 NEON",
      "time" : {
        "start" : 1650043166815,
        "stop" : 1650043166815,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "allure_environment::0",
    "time" : {
      "start" : 1650043239869,
      "stop" : 1650043239870,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "Basic: transfer tests"
  }, {
    "name" : "parentSuite",
    "value" : "integration.tests.basic"
  }, {
    "name" : "suite",
    "value" : "test_transfers"
  }, {
    "name" : "subSuite",
    "value" : "TestTransfer"
  }, {
    "name" : "host",
    "value" : "fv-az451-175"
  }, {
    "name" : "thread",
    "value" : "2074-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "integration.tests.basic.test_transfers"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "amount",
    "value" : "10000.1"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 14,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 0,
        "unknown" : 0,
        "total" : 14
      },
      "items" : [ {
        "uid" : "c729fd5635149452",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25f/874//#testresult/c729fd5635149452",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1650042412373,
          "stop" : 1650042412879,
          "duration" : 506
        }
      }, {
        "uid" : "b29e96e4d2ef894c",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25f/872//#testresult/b29e96e4d2ef894c",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1650041306788,
          "stop" : 1650041307288,
          "duration" : 500
        }
      }, {
        "uid" : "c65fcbfe9cdf7a18",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25f/870//#testresult/c65fcbfe9cdf7a18",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1650040326398,
          "stop" : 1650040327034,
          "duration" : 636
        }
      }, {
        "uid" : "47b873adf6e8df68",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25f/868//#testresult/47b873adf6e8df68",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1650039009110,
          "stop" : 1650039009606,
          "duration" : 496
        }
      }, {
        "uid" : "dde2b9d93031c4c6",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25f/866//#testresult/dde2b9d93031c4c6",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1650038213095,
          "stop" : 1650038213756,
          "duration" : 661
        }
      }, {
        "uid" : "552b32a7904aef12",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25f/864//#testresult/552b32a7904aef12",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1650036629994,
          "stop" : 1650036630850,
          "duration" : 856
        }
      }, {
        "uid" : "a528467191b3394e",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25f/862//#testresult/a528467191b3394e",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1650035449408,
          "stop" : 1650035450256,
          "duration" : 848
        }
      }, {
        "uid" : "a937fb329a711ef1",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25f/860//#testresult/a937fb329a711ef1",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1650034582880,
          "stop" : 1650034583416,
          "duration" : 536
        }
      }, {
        "uid" : "9e69c03173a66d78",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25f/858//#testresult/9e69c03173a66d78",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1650032562297,
          "stop" : 1650032563144,
          "duration" : 847
        }
      }, {
        "uid" : "4cb18818139be4ba",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25f/856//#testresult/4cb18818139be4ba",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1650031710984,
          "stop" : 1650031711830,
          "duration" : 846
        }
      }, {
        "uid" : "9e68d00aa1050755",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25f/854//#testresult/9e68d00aa1050755",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1650026727637,
          "stop" : 1650026728479,
          "duration" : 842
        }
      }, {
        "uid" : "7ebf793474f6367c",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25f/852//#testresult/7ebf793474f6367c",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1650026266897,
          "stop" : 1650026267749,
          "duration" : 852
        }
      }, {
        "uid" : "bd950e1a37b98f1a",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25f/850//#testresult/bd950e1a37b98f1a",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1650026208030,
          "stop" : 1650026208883,
          "duration" : 853
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "bff36214634b8160.json",
  "parameterValues" : [ "10000.1" ]
}