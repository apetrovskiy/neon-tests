{
  "uid" : "83b1dc1160dcc1b9",
  "name" : "test_send_more_than_exist_on_account_neon[10000.1]",
  "fullName" : "integration.tests.basic.test_transfers.TestTransfer#test_send_more_than_exist_on_account_neon",
  "historyId" : "846952fe5ae186a491ca35d8b8adc7c4",
  "time" : {
    "start" : 1650134530890,
    "stop" : 1650134531385,
    "duration" : 495
  },
  "description" : "Send more than exist on account: neon",
  "descriptionHtml" : "<p>Send more than exist on account: neon</p>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: Expected insufficient funds for transfer to be in <ExceptionInfo ValueError({'code': -32000, 'message': 'Expecting value: line 1 column 1 (char 0)'}) tblen=6>",
  "statusTrace" : "self = <integration.tests.basic.test_transfers.TestTransfer object at 0x7fd23ed09cd0>\namount = 10000.1, prepare_accounts = None\n\n    @pytest.mark.parametrize(\"amount\", WRONG_TRANSFER_AMOUNT_DATA)\n    def test_send_more_than_exist_on_account_neon(self, amount: Union[int,\n                                                                      float],\n                                                  prepare_accounts):\n        \"\"\"Send more than exist on account: neon\"\"\"\n    \n>       self.check_value_error_if_less_than_required(self.sender_account,\n                                                     self.recipient_account,\n                                                     amount)\n\nintegration/tests/basic/test_transfers.py:53: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nintegration/tests/basic/helpers/basic.py:119: in check_value_error_if_less_than_required\n    return self.process_transaction_with_failure(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <integration.tests.basic.test_transfers.TestTransfer object at 0x7fd23ed09cd0>\nsender_account = <eth_account.signers.local.LocalAccount object at 0x7fd23ed5ee80>\nrecipient_account = <eth_account.signers.local.LocalAccount object at 0x7fd23ed5ed90>\namount = 10000.1, gas = 0, gas_price = None\nerror_message = 'insufficient funds for transfer'\n\n    def process_transaction_with_failure(\n            self,\n            sender_account: Account,\n            recipient_account: Union[Account, AccountData],\n            amount: int,\n            gas: Optional[int] = 0,\n            gas_price: Optional[int] = None,\n            error_message: str = \"\") -> Union[web3.types.TxReceipt, None]:\n        '''Processes transaction, expects a failure'''\n    \n        tx: Union[web3.types.TxReceipt, None] = None\n        with allure.step(\n                f\"Sending {amount} from {sender_account.address} to {recipient_account.address}\"\n        ):\n            with pytest.raises(Exception) as error_info:\n                tx = self.web3_client.send_neon(sender_account,\n                                                recipient_account, amount, gas,\n                                                gas_price)\n    \n            if error_info != None:\n    \n                if error_message:\n>                   assert error_message in str(\n                        error_info), f\"Expected {error_message} to be in {error_info}\"\nE                   AssertionError: Expected insufficient funds for transfer to be in <ExceptionInfo ValueError({'code': -32000, 'message': 'Expecting value: line 1 column 1 (char 0)'}) tblen=6>\n\nintegration/tests/basic/helpers/basic.py:109: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "pytestconfig",
    "time" : {
      "start" : 1650134399715,
      "stop" : 1650134399716,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "web3_client",
    "time" : {
      "start" : 1650134399716,
      "stop" : 1650134399717,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "allure_environment",
    "time" : {
      "start" : 1650134399717,
      "stop" : 1650134400291,
      "duration" : 574
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "faucet",
    "time" : {
      "start" : 1650134400291,
      "stop" : 1650134400291,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "operator",
    "time" : {
      "start" : 1650134400291,
      "stop" : 1650134400291,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "sol_client",
    "time" : {
      "start" : 1650134400291,
      "stop" : 1650134400291,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "jsonrpc_requester",
    "time" : {
      "start" : 1650134400291,
      "stop" : 1650134400291,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_account",
    "time" : {
      "start" : 1650134520925,
      "stop" : 1650134521998,
      "duration" : 1073
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Create account for tests",
      "time" : {
        "start" : 1650134520925,
        "stop" : 1650134520931,
        "duration" : 6
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Request 1000 NEON from faucet for 0xEA49C4607cfcB7E1C4f1c131f5BC127AAcf99569",
      "time" : {
        "start" : 1650134520931,
        "stop" : 1650134521627,
        "duration" : 696
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Operator initial balance: 959125386.0 NEON 4897.73035572 SOL",
      "time" : {
        "start" : 1650134521998,
        "stop" : 1650134521998,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 3,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "prepare",
    "time" : {
      "start" : 1650134529684,
      "stop" : 1650134529685,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_account",
    "time" : {
      "start" : 1650134529685,
      "stop" : 1650134529685,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_accounts",
    "time" : {
      "start" : 1650134529685,
      "stop" : 1650134530889,
      "duration" : 1204
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_json_rpc_requester",
    "time" : {
      "start" : 1650134529685,
      "stop" : 1650134529685,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "Send more than exist on account: neon",
    "status" : "failed",
    "statusMessage" : "AssertionError: Expected insufficient funds for transfer to be in <ExceptionInfo ValueError({'code': -32000, 'message': 'Expecting value: line 1 column 1 (char 0)'}) tblen=6>",
    "statusTrace" : "self = <integration.tests.basic.test_transfers.TestTransfer object at 0x7fd23ed09cd0>\namount = 10000.1, prepare_accounts = None\n\n    @pytest.mark.parametrize(\"amount\", WRONG_TRANSFER_AMOUNT_DATA)\n    def test_send_more_than_exist_on_account_neon(self, amount: Union[int,\n                                                                      float],\n                                                  prepare_accounts):\n        \"\"\"Send more than exist on account: neon\"\"\"\n    \n>       self.check_value_error_if_less_than_required(self.sender_account,\n                                                     self.recipient_account,\n                                                     amount)\n\nintegration/tests/basic/test_transfers.py:53: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nintegration/tests/basic/helpers/basic.py:119: in check_value_error_if_less_than_required\n    return self.process_transaction_with_failure(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <integration.tests.basic.test_transfers.TestTransfer object at 0x7fd23ed09cd0>\nsender_account = <eth_account.signers.local.LocalAccount object at 0x7fd23ed5ee80>\nrecipient_account = <eth_account.signers.local.LocalAccount object at 0x7fd23ed5ed90>\namount = 10000.1, gas = 0, gas_price = None\nerror_message = 'insufficient funds for transfer'\n\n    def process_transaction_with_failure(\n            self,\n            sender_account: Account,\n            recipient_account: Union[Account, AccountData],\n            amount: int,\n            gas: Optional[int] = 0,\n            gas_price: Optional[int] = None,\n            error_message: str = \"\") -> Union[web3.types.TxReceipt, None]:\n        '''Processes transaction, expects a failure'''\n    \n        tx: Union[web3.types.TxReceipt, None] = None\n        with allure.step(\n                f\"Sending {amount} from {sender_account.address} to {recipient_account.address}\"\n        ):\n            with pytest.raises(Exception) as error_info:\n                tx = self.web3_client.send_neon(sender_account,\n                                                recipient_account, amount, gas,\n                                                gas_price)\n    \n            if error_info != None:\n    \n                if error_message:\n>                   assert error_message in str(\n                        error_info), f\"Expected {error_message} to be in {error_info}\"\nE                   AssertionError: Expected insufficient funds for transfer to be in <ExceptionInfo ValueError({'code': -32000, 'message': 'Expecting value: line 1 column 1 (char 0)'}) tblen=6>\n\nintegration/tests/basic/helpers/basic.py:109: AssertionError",
    "steps" : [ {
      "name" : "Sending 10000.1 from 0xf4f91A2C4f3d0c45efa42705Bf3f09277DDd5E24 to 0xb4A3A54717fD65905CCcf79c7a5e4B55aaAbB37B",
      "time" : {
        "start" : 1650134530890,
        "stop" : 1650134531384,
        "duration" : 494
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Expected insufficient funds for transfer to be in <ExceptionInfo ValueError({'code': -32000, 'message': 'Expecting value: line 1 column 1 (char 0)'}) tblen=6>\n",
      "statusTrace" : "  File \"/home/runner/work/neon-tests/neon-tests/integration/tests/basic/helpers/basic.py\", line 109, in process_transaction_with_failure\n    assert error_message in str(\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "prepare_accounts::0",
    "time" : {
      "start" : 1650134531401,
      "stop" : 1650134531401,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_account::0",
    "time" : {
      "start" : 1650134538953,
      "stop" : 1650134539421,
      "duration" : 468
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Operator end balance: 959125304.0 NEON 4897.702203 SOL",
      "time" : {
        "start" : 1650134539322,
        "stop" : 1650134539322,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Account end balance: 1000 NEON",
      "time" : {
        "start" : 1650134539421,
        "stop" : 1650134539421,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "allure_environment::0",
    "time" : {
      "start" : 1650134560037,
      "stop" : 1650134560037,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "Basic: transfer tests"
  }, {
    "name" : "parentSuite",
    "value" : "integration.tests.basic"
  }, {
    "name" : "suite",
    "value" : "test_transfers"
  }, {
    "name" : "subSuite",
    "value" : "TestTransfer"
  }, {
    "name" : "host",
    "value" : "fv-az196-855"
  }, {
    "name" : "thread",
    "value" : "1980-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "integration.tests.basic.test_transfers"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "amount",
    "value" : "10000.1"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 14,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 0,
        "unknown" : 0,
        "total" : 14
      },
      "items" : [ {
        "uid" : "cf9218ccd4803336",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25f/908//#testresult/cf9218ccd4803336",
        "status" : "failed",
        "statusDetails" : "AssertionError: Expected insufficient funds for transfer to be in <ExceptionInfo ValueError({'code': -32000, 'message': 'Expecting value: line 1 column 1 (char 0)'}) tblen=6>",
        "time" : {
          "start" : 1650131767633,
          "stop" : 1650131768471,
          "duration" : 838
        }
      }, {
        "uid" : "35b6bdc2a68f0615",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25f/906//#testresult/35b6bdc2a68f0615",
        "status" : "failed",
        "statusDetails" : "AssertionError: Expected insufficient funds for transfer to be in <ExceptionInfo ValueError({'code': -32000, 'message': 'Expecting value: line 1 column 1 (char 0)'}) tblen=6>",
        "time" : {
          "start" : 1650131141100,
          "stop" : 1650131141935,
          "duration" : 835
        }
      }, {
        "uid" : "85c58ae5ababecb7",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25f/904//#testresult/85c58ae5ababecb7",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1650130136555,
          "stop" : 1650130137371,
          "duration" : 816
        }
      }, {
        "uid" : "316a327909c6e6eb",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25f/902//#testresult/316a327909c6e6eb",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1650128807179,
          "stop" : 1650128807833,
          "duration" : 654
        }
      }, {
        "uid" : "588998c3ed160a01",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25f/900//#testresult/588998c3ed160a01",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1650127271153,
          "stop" : 1650127271995,
          "duration" : 842
        }
      }, {
        "uid" : "2dfbc314c6900dec",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25f/898//#testresult/2dfbc314c6900dec",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1650125893194,
          "stop" : 1650125893694,
          "duration" : 500
        }
      }, {
        "uid" : "bcc68257fcbaac1f",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25f/896//#testresult/bcc68257fcbaac1f",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1650124966450,
          "stop" : 1650124967290,
          "duration" : 840
        }
      }, {
        "uid" : "600993903c0ebd5f",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25f/894//#testresult/600993903c0ebd5f",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1650123722754,
          "stop" : 1650123723591,
          "duration" : 837
        }
      }, {
        "uid" : "e13929d032010930",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25f/892//#testresult/e13929d032010930",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1650122791685,
          "stop" : 1650122792179,
          "duration" : 494
        }
      }, {
        "uid" : "4e76a6eae833d0d0",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25f/890//#testresult/4e76a6eae833d0d0",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1650121739830,
          "stop" : 1650121740532,
          "duration" : 702
        }
      }, {
        "uid" : "7b976488427ef4ad",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25f/888//#testresult/7b976488427ef4ad",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1650116874480,
          "stop" : 1650116874971,
          "duration" : 491
        }
      }, {
        "uid" : "c6b88b6cb749bf89",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25f/886//#testresult/c6b88b6cb749bf89",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1650114421243,
          "stop" : 1650114421744,
          "duration" : 501
        }
      }, {
        "uid" : "61e4480efa4af06f",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25f/884//#testresult/61e4480efa4af06f",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1650048093326,
          "stop" : 1650048094179,
          "duration" : 853
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "83b1dc1160dcc1b9.json",
  "parameterValues" : [ "10000.1" ]
}