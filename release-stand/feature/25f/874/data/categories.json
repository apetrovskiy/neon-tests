{
  "uid" : "4b4757e66a1912dae1a509f688f20b0f",
  "children" : [ {
    "name" : "Test defects",
    "children" : [ {
      "name" : "ValueError: {'code': -32000, 'message': 'relation \"neon_transactions\" does not exist\\nLINE 3:               FROM neon_transactions AS a\\n                           ^\\n'}",
      "children" : [ {
        "name" : "test_rpc_call_eth_getBlockByHash",
        "uid" : "dd09d6172e7e75c9",
        "parentUid" : "69453fb2bc7653d0a16f1bd046aaf65a",
        "status" : "broken",
        "time" : {
          "start" : 1650042283562,
          "stop" : 1650042284327,
          "duration" : 765
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ ]
      }, {
        "name" : "test_rpc_call_eth_getBlockByNumber_via_numbers",
        "uid" : "733047a288713285",
        "parentUid" : "69453fb2bc7653d0a16f1bd046aaf65a",
        "status" : "broken",
        "time" : {
          "start" : 1650042286386,
          "stop" : 1650042287067,
          "duration" : 681
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : true,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ ]
      }, {
        "name" : "test_rpc_call_eth_call",
        "uid" : "b4b4c4c179544704",
        "parentUid" : "69453fb2bc7653d0a16f1bd046aaf65a",
        "status" : "broken",
        "time" : {
          "start" : 1650042290009,
          "stop" : 1650042290660,
          "duration" : 651
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : true,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ ]
      }, {
        "name" : "test_send_neon_from_one_account_to_another[0.01]",
        "uid" : "14c0237828429a38",
        "parentUid" : "69453fb2bc7653d0a16f1bd046aaf65a",
        "status" : "broken",
        "time" : {
          "start" : 1650042404034,
          "stop" : 1650042404757,
          "duration" : 723
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ "0.01" ]
      }, {
        "name" : "test_send_neon_from_one_account_to_another[1.1]",
        "uid" : "9e0fcacb731bd870",
        "parentUid" : "69453fb2bc7653d0a16f1bd046aaf65a",
        "status" : "broken",
        "time" : {
          "start" : 1650042408735,
          "stop" : 1650042409373,
          "duration" : 638
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ "1.1" ]
      }, {
        "name" : "test_rpc_call_eth_getTransactionCount",
        "uid" : "1c99e2bdeddcaad6",
        "parentUid" : "69453fb2bc7653d0a16f1bd046aaf65a",
        "status" : "broken",
        "time" : {
          "start" : 1650042423853,
          "stop" : 1650042424507,
          "duration" : 654
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : true,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ ]
      }, {
        "name" : "test_rpc_call_eth_getTransactionByHash",
        "uid" : "18ca642aa16db38",
        "parentUid" : "69453fb2bc7653d0a16f1bd046aaf65a",
        "status" : "broken",
        "time" : {
          "start" : 1650042427819,
          "stop" : 1650042428466,
          "duration" : 647
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : true,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ ]
      }, {
        "name" : "test_rpc_call_eth_getTransactionReceipt",
        "uid" : "fc97c9530e5cd498",
        "parentUid" : "69453fb2bc7653d0a16f1bd046aaf65a",
        "status" : "broken",
        "time" : {
          "start" : 1650042429758,
          "stop" : 1650042430402,
          "duration" : 644
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ ]
      } ],
      "uid" : "69453fb2bc7653d0a16f1bd046aaf65a"
    } ],
    "uid" : "bdbf199525818fae7a8651db9eafe741"
  }, {
    "name" : "Product defects",
    "children" : [ {
      "name" : "AssertionError: <AssertMessage.CONTAINS_ERROR: 'Contains the error data'>\nassert False\n +  where False = <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7fd8b6abc8b0>>(JsonRpcErrorResponse(id=12, error={'code': -32000, 'message': 'relation \"neon_transaction_logs\" does not exist\\nLINE 1: SELECT * FROM neon_transaction_logs WHERE address IN (\\'0xffe...\\n                      ^\\n'}, jsonrpc='2.0'))\n +    where <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7fd8b6abc8b0>> = <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7fd8b6abc8b0>.assert_no_error_object",
      "children" : [ {
        "name" : "test_rpc_call_eth_getLogs_via_tags[latest-pending]",
        "uid" : "d56018bb3eff426f",
        "parentUid" : "a613f540f9f158d481571bda023c378a",
        "status" : "failed",
        "time" : {
          "start" : 1650042295005,
          "stop" : 1650042295708,
          "duration" : 703
        },
        "flaky" : true,
        "newFailed" : true,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ "'latest'", "'pending'" ]
      } ],
      "uid" : "a613f540f9f158d481571bda023c378a"
    }, {
      "name" : "AssertionError: <AssertMessage.CONTAINS_ERROR: 'Contains the error data'>\nassert False\n +  where False = <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7fd8b6e16910>>(JsonRpcErrorResponse(id=58, error={'code': -32000, 'message': 'relation \"neon_transaction_logs\" does not exist\\nLINE 1: SELECT * FROM neon_transaction_logs WHERE address IN (\\'0xaca...\\n                      ^\\n'}, jsonrpc='2.0'))\n +    where <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7fd8b6e16910>> = <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7fd8b6e16910>.assert_no_error_object",
      "children" : [ {
        "name" : "test_rpc_call_eth_getLogs_via_numbers",
        "uid" : "9ad15b8b58083c2f",
        "parentUid" : "2a60131bc70656810d59388e5679ef3d",
        "status" : "failed",
        "time" : {
          "start" : 1650042295719,
          "stop" : 1650042296420,
          "duration" : 701
        },
        "flaky" : true,
        "newFailed" : true,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ ]
      } ],
      "uid" : "2a60131bc70656810d59388e5679ef3d"
    }, {
      "name" : "AssertionError",
      "children" : [ {
        "name" : "test_send_more_than_exist_on_account_neon[1501]",
        "uid" : "cd08b2b713fcddb3",
        "parentUid" : "a0017ad855102fea08b8682d27fec4ca",
        "status" : "failed",
        "time" : {
          "start" : 1650042410640,
          "stop" : 1650042411146,
          "duration" : 506
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ "1501" ]
      }, {
        "name" : "test_send_more_than_exist_on_account_neon[10000.1]",
        "uid" : "c729fd5635149452",
        "parentUid" : "a0017ad855102fea08b8682d27fec4ca",
        "status" : "failed",
        "time" : {
          "start" : 1650042412373,
          "stop" : 1650042412879,
          "duration" : 506
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ "10000.1" ]
      }, {
        "name" : "test_there_are_not_enough_neons_for_gas_fee",
        "uid" : "335f72d1b1b03a85",
        "parentUid" : "a0017ad855102fea08b8682d27fec4ca",
        "status" : "failed",
        "time" : {
          "start" : 1650042418664,
          "stop" : 1650042419915,
          "duration" : 1251
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ ]
      }, {
        "name" : "test_there_are_not_enough_neons_for_transfer",
        "uid" : "292f20c4ac48c463",
        "parentUid" : "a0017ad855102fea08b8682d27fec4ca",
        "status" : "failed",
        "time" : {
          "start" : 1650042419932,
          "stop" : 1650042421047,
          "duration" : 1115
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ ]
      }, {
        "name" : "test_gas_limit_and_gas_price[1-None-gas limit reached]",
        "uid" : "99cc196912caa0a7",
        "parentUid" : "a0017ad855102fea08b8682d27fec4ca",
        "status" : "failed",
        "time" : {
          "start" : 1650042434991,
          "stop" : 1650042435321,
          "duration" : 330
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ "'gas limit reached'", "1", "None" ]
      }, {
        "name" : "test_gas_limit_and_gas_price[18446744073709551616-None-insufficient funds for transfer]",
        "uid" : "81669339bffc9867",
        "parentUid" : "a0017ad855102fea08b8682d27fec4ca",
        "status" : "failed",
        "time" : {
          "start" : 1650042438170,
          "stop" : 1650042438481,
          "duration" : 311
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ "'insufficient funds for transfer'", "18446744073709551616", "None" ]
      }, {
        "name" : "test_gas_limit_and_gas_price[0-18446744073709551616-insufficient funds for transfer]",
        "uid" : "ba67ffd238723c88",
        "parentUid" : "a0017ad855102fea08b8682d27fec4ca",
        "status" : "failed",
        "time" : {
          "start" : 1650042439707,
          "stop" : 1650042440229,
          "duration" : 522
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ "'insufficient funds for transfer'", "0", "18446744073709551616" ]
      }, {
        "name" : "test_gas_limit_and_gas_price[1-18446744073709551616-insufficient funds for transfer]",
        "uid" : "eca4bc7fb4268061",
        "parentUid" : "a0017ad855102fea08b8682d27fec4ca",
        "status" : "failed",
        "time" : {
          "start" : 1650042441456,
          "stop" : 1650042441671,
          "duration" : 215
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ "'insufficient funds for transfer'", "1", "18446744073709551616" ]
      }, {
        "name" : "test_gas_limit_and_gas_price[1000-18446744073709552-insufficient funds for transfer]",
        "uid" : "61b8b8a6b070d03f",
        "parentUid" : "a0017ad855102fea08b8682d27fec4ca",
        "status" : "failed",
        "time" : {
          "start" : 1650042442900,
          "stop" : 1650042443115,
          "duration" : 215
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ "'insufficient funds for transfer'", "1000", "18446744073709552" ]
      } ],
      "uid" : "a0017ad855102fea08b8682d27fec4ca"
    }, {
      "name" : "AssertionError: The response type is error response\nassert False\n +  where False = <bound method BasicTests.assert_is_successful_response of <integration.tests.basic.test_transfers.TestRpcCallsTransactions object at 0x7fd8b6977070>>(JsonRpcErrorResponse(id=36, error={'code': -32000, 'message': 'relation \"neon_transactions\" does not exist\\nLINE 3:               FROM neon_transactions AS a\\n                           ^\\n'}, jsonrpc='2.0'))\n +    where <bound method BasicTests.assert_is_successful_response of <integration.tests.basic.test_transfers.TestRpcCallsTransactions object at 0x7fd8b6977070>> = <integration.tests.basic.test_transfers.TestRpcCallsTransactions object at 0x7fd8b6977070>.assert_is_successful_response",
      "children" : [ {
        "name" : "test_rpc_call_eth_sendRawTransaction",
        "uid" : "f701a1fb8930d1b2",
        "parentUid" : "aadb8f4950330965a7facb3b70f5a049",
        "status" : "failed",
        "time" : {
          "start" : 1650042425761,
          "stop" : 1650042426596,
          "duration" : 835
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ ]
      } ],
      "uid" : "aadb8f4950330965a7facb3b70f5a049"
    }, {
      "name" : "AssertionError: The response type is error response\nassert False\n +  where False = <bound method BasicTests.assert_is_successful_response of <integration.tests.basic.test_transfers.TestRpcCallsTransactions object at 0x7fd8b6f38fd0>>(JsonRpcErrorResponse(id=34, error={'code': -32000, 'message': 'relation \"neon_transactions\" does not exist\\nLINE 3:               FROM neon_transactions AS a\\n                           ^\\n'}, jsonrpc='2.0'))\n +    where <bound method BasicTests.assert_is_successful_response of <integration.tests.basic.test_transfers.TestRpcCallsTransactions object at 0x7fd8b6f38fd0>> = <integration.tests.basic.test_transfers.TestRpcCallsTransactions object at 0x7fd8b6f38fd0>.assert_is_successful_response",
      "children" : [ {
        "name" : "test_check_erc_1820_transaction",
        "uid" : "4756ce4d94315751",
        "parentUid" : "a381b75a750e1554de00aded6ba26e55",
        "status" : "failed",
        "time" : {
          "start" : 1650042431654,
          "stop" : 1650042432106,
          "duration" : 452
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ ]
      } ],
      "uid" : "a381b75a750e1554de00aded6ba26e55"
    }, {
      "name" : "AssertionError: The response type is error response\nassert False\n +  where False = <bound method BasicTests.assert_is_successful_response of <integration.tests.basic.test_transfers.TestRpcCallsTransactionsValidation object at 0x7fd8b685d340>>(JsonRpcErrorResponse(id=90, error={'code': -32000, 'message': 'relation \"neon_transactions\" does not exist\\nLINE 3:               FROM neon_transactions AS a\\n                           ^\\n'}, jsonrpc='2.0'))\n +    where <bound method BasicTests.assert_is_successful_response of <integration.tests.basic.test_transfers.TestRpcCallsTransactionsValidation object at 0x7fd8b685d340>> = <integration.tests.basic.test_transfers.TestRpcCallsTransactionsValidation object at 0x7fd8b685d340>.assert_is_successful_response",
      "children" : [ {
        "name" : "test_generate_bad_sign[s_action-0]",
        "uid" : "e68e1b61f1b436e9",
        "parentUid" : "411213b127cb4bd71790ece357dbd98a",
        "status" : "failed",
        "time" : {
          "start" : 1650042458127,
          "stop" : 1650042458773,
          "duration" : 646
        },
        "flaky" : false,
        "newFailed" : true,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ "<function s_action at 0x7fd8b6ec9940>", "0" ]
      } ],
      "uid" : "411213b127cb4bd71790ece357dbd98a"
    }, {
      "name" : "AssertionError: The response type is error response\nassert False\n +  where False = <bound method BasicTests.assert_is_successful_response of <integration.tests.basic.test_transfers.TestRpcCallsTransactionsValidation object at 0x7fd8b69913a0>>(JsonRpcErrorResponse(id=28, error={'code': -32000, 'message': 'relation \"neon_transactions\" does not exist\\nLINE 3:               FROM neon_transactions AS a\\n                           ^\\n'}, jsonrpc='2.0'))\n +    where <bound method BasicTests.assert_is_successful_response of <integration.tests.basic.test_transfers.TestRpcCallsTransactionsValidation object at 0x7fd8b69913a0>> = <integration.tests.basic.test_transfers.TestRpcCallsTransactionsValidation object at 0x7fd8b69913a0>.assert_is_successful_response",
      "children" : [ {
        "name" : "test_generate_bad_sign[s_action-1]",
        "uid" : "ee788f4c254e53fe",
        "parentUid" : "74187f2347500d977393deddc5fa9c2f",
        "status" : "failed",
        "time" : {
          "start" : 1650042459996,
          "stop" : 1650042460641,
          "duration" : 645
        },
        "flaky" : false,
        "newFailed" : true,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ "<function s_action at 0x7fd8b6ec9940>", "1" ]
      } ],
      "uid" : "74187f2347500d977393deddc5fa9c2f"
    }, {
      "name" : "AssertionError: The response type is error response\nassert False\n +  where False = <bound method BasicTests.assert_is_successful_response of <integration.tests.basic.test_transfers.TestRpcCallsTransactionsValidation object at 0x7fd8b698f9d0>>(JsonRpcErrorResponse(id=73, error={'code': -32000, 'message': 'relation \"neon_transactions\" does not exist\\nLINE 3:               FROM neon_transactions AS a\\n                           ^\\n'}, jsonrpc='2.0'))\n +    where <bound method BasicTests.assert_is_successful_response of <integration.tests.basic.test_transfers.TestRpcCallsTransactionsValidation object at 0x7fd8b698f9d0>> = <integration.tests.basic.test_transfers.TestRpcCallsTransactionsValidation object at 0x7fd8b698f9d0>.assert_is_successful_response",
      "children" : [ {
        "name" : "test_generate_bad_sign[s_action-18446744073709551615]",
        "uid" : "e015f291081a0bc8",
        "parentUid" : "d2a0b762931bf3ed5fe7efa6224df289",
        "status" : "failed",
        "time" : {
          "start" : 1650042461864,
          "stop" : 1650042462501,
          "duration" : 637
        },
        "flaky" : false,
        "newFailed" : true,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ "<function s_action at 0x7fd8b6ec9940>", "18446744073709551615" ]
      } ],
      "uid" : "d2a0b762931bf3ed5fe7efa6224df289"
    }, {
      "name" : "AssertionError: The response type is error response\nassert False\n +  where False = <bound method BasicTests.assert_is_successful_response of <integration.tests.basic.test_transfers.TestRpcCallsTransactionsValidation object at 0x7fd8b67d1820>>(JsonRpcErrorResponse(id=65, error={'code': -32000, 'message': 'relation \"neon_transactions\" does not exist\\nLINE 3:               FROM neon_transactions AS a\\n                           ^\\n'}, jsonrpc='2.0'))\n +    where <bound method BasicTests.assert_is_successful_response of <integration.tests.basic.test_transfers.TestRpcCallsTransactionsValidation object at 0x7fd8b67d1820>> = <integration.tests.basic.test_transfers.TestRpcCallsTransactionsValidation object at 0x7fd8b67d1820>.assert_is_successful_response",
      "children" : [ {
        "name" : "test_generate_bad_sign[v_action-]",
        "uid" : "3a8532200e94adf1",
        "parentUid" : "8c3539a19e651dacc3372d44b799d08b",
        "status" : "failed",
        "time" : {
          "start" : 1650042465841,
          "stop" : 1650042466593,
          "duration" : 752
        },
        "flaky" : false,
        "newFailed" : true,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ "<function v_action at 0x7fd8b6ec9a60>", "''" ]
      } ],
      "uid" : "8c3539a19e651dacc3372d44b799d08b"
    }, {
      "name" : "AssertionError: The response type is error response\nassert False\n +  where False = <bound method BasicTests.assert_is_successful_response of <integration.tests.basic.test_transfers.TestRpcCallsTransactionsValidation object at 0x7fd8b6aa5c10>>(JsonRpcErrorResponse(id=58, error={'code': -32000, 'message': 'relation \"neon_transactions\" does not exist\\nLINE 3:               FROM neon_transactions AS a\\n                           ^\\n'}, jsonrpc='2.0'))\n +    where <bound method BasicTests.assert_is_successful_response of <integration.tests.basic.test_transfers.TestRpcCallsTransactionsValidation object at 0x7fd8b6aa5c10>> = <integration.tests.basic.test_transfers.TestRpcCallsTransactionsValidation object at 0x7fd8b6aa5c10>.assert_is_successful_response",
      "children" : [ {
        "name" : "test_generate_bad_sign[v_action-1]",
        "uid" : "fc188617acefbcbe",
        "parentUid" : "c2cb6041c46da2e2a8c76eafbd4a156d",
        "status" : "failed",
        "time" : {
          "start" : 1650042470354,
          "stop" : 1650042471012,
          "duration" : 658
        },
        "flaky" : false,
        "newFailed" : true,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ "<function v_action at 0x7fd8b6ec9a60>", "1" ]
      } ],
      "uid" : "c2cb6041c46da2e2a8c76eafbd4a156d"
    }, {
      "name" : "AssertionError: The response type is error response\nassert False\n +  where False = <bound method BasicTests.assert_is_successful_response of <integration.tests.basic.test_transfers.TestRpcCallsTransactionsValidation object at 0x7fd8b67d1ac0>>(JsonRpcErrorResponse(id=35, error={'code': -32000, 'message': 'relation \"neon_transactions\" does not exist\\nLINE 3:               FROM neon_transactions AS a\\n                           ^\\n'}, jsonrpc='2.0'))\n +    where <bound method BasicTests.assert_is_successful_response of <integration.tests.basic.test_transfers.TestRpcCallsTransactionsValidation object at 0x7fd8b67d1ac0>> = <integration.tests.basic.test_transfers.TestRpcCallsTransactionsValidation object at 0x7fd8b67d1ac0>.assert_is_successful_response",
      "children" : [ {
        "name" : "test_generate_bad_sign[v_action-18446744073709551615]",
        "uid" : "f83c5a8cb865ecaa",
        "parentUid" : "eca5f4598fba8f6dfb493dfac7753acc",
        "status" : "failed",
        "time" : {
          "start" : 1650042472240,
          "stop" : 1650042472889,
          "duration" : 649
        },
        "flaky" : false,
        "newFailed" : true,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ "<function v_action at 0x7fd8b6ec9a60>", "18446744073709551615" ]
      } ],
      "uid" : "eca5f4598fba8f6dfb493dfac7753acc"
    } ],
    "uid" : "8fb3a91ba5aaf9de24cc8a92edc82b5d"
  } ],
  "name" : "categories"
}