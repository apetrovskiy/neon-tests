{
  "uid" : "67d9e1e93a87e04c",
  "name" : "test_rpc_call_eth_sendRawTransaction",
  "fullName" : "integration.tests.basic.test_transfers.TestRpcCallsTransactions#test_rpc_call_eth_sendRawTransaction",
  "historyId" : "1df0f58d1f0d66c4a3cacb77ac5d0bf9",
  "time" : {
    "start" : 1650039021932,
    "stop" : 1650039022672,
    "duration" : 740
  },
  "description" : "Verify implemented rpc calls work eth_sendRawTransaction",
  "descriptionHtml" : "<p>Verify implemented rpc calls work eth_sendRawTransaction</p>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: The response type is error response\nassert False\n +  where False = <bound method BasicTests.assert_is_successful_response of <integration.tests.basic.test_transfers.TestRpcCallsTransactions object at 0x7f177f9d28e0>>(JsonRpcErrorResponse(id=81, error={'code': -32000, 'message': 'relation \"neon_transactions\" does not exist\\nLINE 3:               FROM neon_transactions AS a\\n                           ^\\n'}, jsonrpc='2.0'))\n +    where <bound method BasicTests.assert_is_successful_response of <integration.tests.basic.test_transfers.TestRpcCallsTransactions object at 0x7f177f9d28e0>> = <integration.tests.basic.test_transfers.TestRpcCallsTransactions object at 0x7f177f9d28e0>.assert_is_successful_response",
  "statusTrace" : "self = <integration.tests.basic.test_transfers.TestRpcCallsTransactions object at 0x7f177f9d28e0>\nprepare_accounts = None\n\n    def test_rpc_call_eth_sendRawTransaction(self, prepare_accounts):\n        \"\"\"Verify implemented rpc calls work eth_sendRawTransaction\"\"\"\n    \n        transaction = {\n            \"from\":\n            self.sender_account.address,\n            \"to\":\n            self.recipient_account.address,\n            \"value\":\n            self.web3_client.toWei(InputData.SAMPLE_AMOUNT.value, \"ether\"),\n            \"chainId\":\n            self.web3_client._chain_id,\n            \"gasPrice\":\n            self.web3_client.gas_price(),\n            \"gas\":\n            0,\n            \"nonce\":\n            self.web3_client.eth.get_transaction_count(\n                self.sender_account.address),\n        }\n        transaction[\"gas\"] = self.web3_client.eth.estimate_gas(transaction)\n    \n        signed_tx = self.web3_client.eth.account.sign_transaction(\n            transaction, self.sender_account.key)\n    \n        params = [signed_tx.rawTransaction.hex()]\n    \n        model = RpcRequestFactory.get_send_raw_trx(params=params)\n        response = self.jsonrpc_requester.request_json_rpc(model)\n        actual_result = self.jsonrpc_requester.deserialize_response(response)\n    \n        assert actual_result.id == model.id, AssertMessage.WRONG_ID.value\n>       assert self.assert_is_successful_response(\n            actual_result), AssertMessage.WRONG_TYPE.value\nE       AssertionError: The response type is error response\nE       assert False\nE        +  where False = <bound method BasicTests.assert_is_successful_response of <integration.tests.basic.test_transfers.TestRpcCallsTransactions object at 0x7f177f9d28e0>>(JsonRpcErrorResponse(id=81, error={'code': -32000, 'message': 'relation \"neon_transactions\" does not exist\\nLINE 3:               FROM neon_transactions AS a\\n                           ^\\n'}, jsonrpc='2.0'))\nE        +    where <bound method BasicTests.assert_is_successful_response of <integration.tests.basic.test_transfers.TestRpcCallsTransactions object at 0x7f177f9d28e0>> = <integration.tests.basic.test_transfers.TestRpcCallsTransactions object at 0x7f177f9d28e0>.assert_is_successful_response\n\nintegration/tests/basic/test_transfers.py:281: AssertionError",
  "flaky" : true,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "web3_client",
    "time" : {
      "start" : 1650038874851,
      "stop" : 1650038874853,
      "duration" : 2
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "pytestconfig",
    "time" : {
      "start" : 1650038874851,
      "stop" : 1650038874851,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "allure_environment",
    "time" : {
      "start" : 1650038874853,
      "stop" : 1650038875448,
      "duration" : 595
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "jsonrpc_requester",
    "time" : {
      "start" : 1650038875448,
      "stop" : 1650038875448,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "operator",
    "time" : {
      "start" : 1650038875448,
      "stop" : 1650038875449,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "faucet",
    "time" : {
      "start" : 1650038875448,
      "stop" : 1650038875448,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "sol_client",
    "time" : {
      "start" : 1650038875449,
      "stop" : 1650038875449,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_account",
    "time" : {
      "start" : 1650039017706,
      "stop" : 1650039018792,
      "duration" : 1086
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Create account for tests",
      "time" : {
        "start" : 1650039017706,
        "stop" : 1650039017711,
        "duration" : 5
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Request 1000 NEON from faucet for 0xbCfEed0A79AC44a68d4a16055648f989f75a1a50",
      "time" : {
        "start" : 1650039017711,
        "stop" : 1650039018411,
        "duration" : 700
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Operator initial balance: 971292744.0 NEON 4914.0635612 SOL",
      "time" : {
        "start" : 1650039018792,
        "stop" : 1650039018792,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 3,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "prepare_json_rpc_requester",
    "time" : {
      "start" : 1650039020719,
      "stop" : 1650039020719,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_account",
    "time" : {
      "start" : 1650039020719,
      "stop" : 1650039020719,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare",
    "time" : {
      "start" : 1650039020719,
      "stop" : 1650039020719,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_accounts",
    "time" : {
      "start" : 1650039020719,
      "stop" : 1650039021931,
      "duration" : 1212
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "Verify implemented rpc calls work eth_sendRawTransaction",
    "status" : "failed",
    "statusMessage" : "AssertionError: The response type is error response\nassert False\n +  where False = <bound method BasicTests.assert_is_successful_response of <integration.tests.basic.test_transfers.TestRpcCallsTransactions object at 0x7f177f9d28e0>>(JsonRpcErrorResponse(id=81, error={'code': -32000, 'message': 'relation \"neon_transactions\" does not exist\\nLINE 3:               FROM neon_transactions AS a\\n                           ^\\n'}, jsonrpc='2.0'))\n +    where <bound method BasicTests.assert_is_successful_response of <integration.tests.basic.test_transfers.TestRpcCallsTransactions object at 0x7f177f9d28e0>> = <integration.tests.basic.test_transfers.TestRpcCallsTransactions object at 0x7f177f9d28e0>.assert_is_successful_response",
    "statusTrace" : "self = <integration.tests.basic.test_transfers.TestRpcCallsTransactions object at 0x7f177f9d28e0>\nprepare_accounts = None\n\n    def test_rpc_call_eth_sendRawTransaction(self, prepare_accounts):\n        \"\"\"Verify implemented rpc calls work eth_sendRawTransaction\"\"\"\n    \n        transaction = {\n            \"from\":\n            self.sender_account.address,\n            \"to\":\n            self.recipient_account.address,\n            \"value\":\n            self.web3_client.toWei(InputData.SAMPLE_AMOUNT.value, \"ether\"),\n            \"chainId\":\n            self.web3_client._chain_id,\n            \"gasPrice\":\n            self.web3_client.gas_price(),\n            \"gas\":\n            0,\n            \"nonce\":\n            self.web3_client.eth.get_transaction_count(\n                self.sender_account.address),\n        }\n        transaction[\"gas\"] = self.web3_client.eth.estimate_gas(transaction)\n    \n        signed_tx = self.web3_client.eth.account.sign_transaction(\n            transaction, self.sender_account.key)\n    \n        params = [signed_tx.rawTransaction.hex()]\n    \n        model = RpcRequestFactory.get_send_raw_trx(params=params)\n        response = self.jsonrpc_requester.request_json_rpc(model)\n        actual_result = self.jsonrpc_requester.deserialize_response(response)\n    \n        assert actual_result.id == model.id, AssertMessage.WRONG_ID.value\n>       assert self.assert_is_successful_response(\n            actual_result), AssertMessage.WRONG_TYPE.value\nE       AssertionError: The response type is error response\nE       assert False\nE        +  where False = <bound method BasicTests.assert_is_successful_response of <integration.tests.basic.test_transfers.TestRpcCallsTransactions object at 0x7f177f9d28e0>>(JsonRpcErrorResponse(id=81, error={'code': -32000, 'message': 'relation \"neon_transactions\" does not exist\\nLINE 3:               FROM neon_transactions AS a\\n                           ^\\n'}, jsonrpc='2.0'))\nE        +    where <bound method BasicTests.assert_is_successful_response of <integration.tests.basic.test_transfers.TestRpcCallsTransactions object at 0x7f177f9d28e0>> = <integration.tests.basic.test_transfers.TestRpcCallsTransactions object at 0x7f177f9d28e0>.assert_is_successful_response\n\nintegration/tests/basic/test_transfers.py:281: AssertionError",
    "steps" : [ {
      "name" : "Request: JsonRpcRequest(id=81, method='eth_sendRawTransaction', params=['0xf86d808571cdcbf40082520894e62a396bc573fbd651cff8bc272c0a0c3aefc54287470de4df82000080820102a07874cdc0258842a48997b7b08e35413e1e6a3d030000540e21e9a09aecaa5d99a0525b2f2c50e0b022d6f4eed21b2fb065c2c25a5fd62b18d2df34267d2036b2e4'], jsonrpc='2.0')",
      "time" : {
        "start" : 1650039022447,
        "stop" : 1650039022672,
        "duration" : 225
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Response: {'jsonrpc': '2.0', 'id': 81, 'error': {'code': -32000, 'message': 'relation \"neon_transactions\" does not exist\\nLINE 3:               FROM neon_transactions AS a\\n                           ^\\n'}}",
      "time" : {
        "start" : 1650039022672,
        "stop" : 1650039022672,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "prepare_accounts::0",
    "time" : {
      "start" : 1650039022684,
      "stop" : 1650039022685,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_account::0",
    "time" : {
      "start" : 1650039028609,
      "stop" : 1650039029085,
      "duration" : 476
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Operator end balance: 971292694.0 NEON 4914.0479208 SOL",
      "time" : {
        "start" : 1650039028985,
        "stop" : 1650039028985,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Account end balance: 1000 NEON",
      "time" : {
        "start" : 1650039029085,
        "stop" : 1650039029085,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "allure_environment::0",
    "time" : {
      "start" : 1650039067105,
      "stop" : 1650039067106,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "Basic: Json-RPC call tests - transactions"
  }, {
    "name" : "parentSuite",
    "value" : "integration.tests.basic"
  }, {
    "name" : "suite",
    "value" : "test_transfers"
  }, {
    "name" : "subSuite",
    "value" : "TestRpcCallsTransactions"
  }, {
    "name" : "host",
    "value" : "fv-az182-392"
  }, {
    "name" : "thread",
    "value" : "1817-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "integration.tests.basic.test_transfers"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 7,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 3,
        "unknown" : 0,
        "total" : 10
      },
      "items" : [ {
        "uid" : "faf08694bdf61dd3",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25f/866//#testresult/faf08694bdf61dd3",
        "status" : "failed",
        "statusDetails" : "AssertionError: The response type is error response\nassert False\n +  where False = <bound method BasicTests.assert_is_successful_response of <integration.tests.basic.test_transfers.TestRpcCallsTransactions object at 0x7f9a3a8bde20>>(JsonRpcErrorResponse(id=82, error={'code': -32000, 'message': 'relation \"neon_transactions\" does not exist\\nLINE 3:               FROM neon_transactions AS a\\n                           ^\\n'}, jsonrpc='2.0'))\n +    where <bound method BasicTests.assert_is_successful_response of <integration.tests.basic.test_transfers.TestRpcCallsTransactions object at 0x7f9a3a8bde20>> = <integration.tests.basic.test_transfers.TestRpcCallsTransactions object at 0x7f9a3a8bde20>.assert_is_successful_response",
        "time" : {
          "start" : 1650038227822,
          "stop" : 1650038228851,
          "duration" : 1029
        }
      }, {
        "uid" : "d3e1f2acebcfd7d",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25f/864//#testresult/d3e1f2acebcfd7d",
        "status" : "passed",
        "time" : {
          "start" : 1650036646920,
          "stop" : 1650036648823,
          "duration" : 1903
        }
      }, {
        "uid" : "d864c1ff3465e80",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25f/862//#testresult/d864c1ff3465e80",
        "status" : "failed",
        "statusDetails" : "AssertionError: The response type is error response\nassert False\n +  where False = <bound method BasicTests.assert_is_successful_response of <integration.tests.basic.test_transfers.TestRpcCallsTransactions object at 0x7fef719fd3a0>>(JsonRpcErrorResponse(id=62, error={'code': -32000, 'message': 'relation \"neon_transactions\" does not exist\\nLINE 3:               FROM neon_transactions AS a\\n                           ^\\n'}, jsonrpc='2.0'))\n +    where <bound method BasicTests.assert_is_successful_response of <integration.tests.basic.test_transfers.TestRpcCallsTransactions object at 0x7fef719fd3a0>> = <integration.tests.basic.test_transfers.TestRpcCallsTransactions object at 0x7fef719fd3a0>.assert_is_successful_response",
        "time" : {
          "start" : 1650035466325,
          "stop" : 1650035467530,
          "duration" : 1205
        }
      }, {
        "uid" : "e1e780516aba52ff",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25f/860//#testresult/e1e780516aba52ff",
        "status" : "passed",
        "time" : {
          "start" : 1650034596541,
          "stop" : 1650034597634,
          "duration" : 1093
        }
      }, {
        "uid" : "89563ce4586adee1",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25f/858//#testresult/89563ce4586adee1",
        "status" : "failed",
        "statusDetails" : "AssertionError: The response type is error response\nassert False\n +  where False = <bound method BasicTests.assert_is_successful_response of <integration.tests.basic.test_transfers.TestRpcCallsTransactions object at 0x7f30ac7edee0>>(JsonRpcErrorResponse(id=94, error={'code': -32000, 'message': 'relation \"neon_transactions\" does not exist\\nLINE 3:               FROM neon_transactions AS a\\n                           ^\\n'}, jsonrpc='2.0'))\n +    where <bound method BasicTests.assert_is_successful_response of <integration.tests.basic.test_transfers.TestRpcCallsTransactions object at 0x7f30ac7edee0>> = <integration.tests.basic.test_transfers.TestRpcCallsTransactions object at 0x7f30ac7edee0>.assert_is_successful_response",
        "time" : {
          "start" : 1650032579254,
          "stop" : 1650032580493,
          "duration" : 1239
        }
      }, {
        "uid" : "4728da3655ece11e",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25f/856//#testresult/4728da3655ece11e",
        "status" : "failed",
        "statusDetails" : "AssertionError: The response type is error response\nassert False\n +  where False = <bound method BasicTests.assert_is_successful_response of <integration.tests.basic.test_transfers.TestRpcCallsTransactions object at 0x7f8481c2f670>>(JsonRpcErrorResponse(id=44, error={'code': -32000, 'message': 'relation \"neon_transactions\" does not exist\\nLINE 3:               FROM neon_transactions AS a\\n                           ^\\n'}, jsonrpc='2.0'))\n +    where <bound method BasicTests.assert_is_successful_response of <integration.tests.basic.test_transfers.TestRpcCallsTransactions object at 0x7f8481c2f670>> = <integration.tests.basic.test_transfers.TestRpcCallsTransactions object at 0x7f8481c2f670>.assert_is_successful_response",
        "time" : {
          "start" : 1650031730970,
          "stop" : 1650031732184,
          "duration" : 1214
        }
      }, {
        "uid" : "e5105af15a35a4a9",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25f/854//#testresult/e5105af15a35a4a9",
        "status" : "passed",
        "time" : {
          "start" : 1650026745380,
          "stop" : 1650026746941,
          "duration" : 1561
        }
      }, {
        "uid" : "a3779af68a08bb8e",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25f/852//#testresult/a3779af68a08bb8e",
        "status" : "failed",
        "statusDetails" : "AssertionError: The response type is error response\nassert False\n +  where False = <bound method BasicTests.assert_is_successful_response of <integration.tests.basic.test_transfers.TestRpcCallsTransactions object at 0x7f8704a70f40>>(JsonRpcErrorResponse(id=80, error={'code': -32000, 'message': 'relation \"neon_transactions\" does not exist\\nLINE 3:               FROM neon_transactions AS a\\n                           ^\\n'}, jsonrpc='2.0'))\n +    where <bound method BasicTests.assert_is_successful_response of <integration.tests.basic.test_transfers.TestRpcCallsTransactions object at 0x7f8704a70f40>> = <integration.tests.basic.test_transfers.TestRpcCallsTransactions object at 0x7f8704a70f40>.assert_is_successful_response",
        "time" : {
          "start" : 1650026283883,
          "stop" : 1650026285104,
          "duration" : 1221
        }
      }, {
        "uid" : "4f81c8906e95157",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25f/850//#testresult/4f81c8906e95157",
        "status" : "failed",
        "statusDetails" : "AssertionError: The response type is error response\nassert False\n +  where False = <bound method BasicTests.assert_is_successful_response of <integration.tests.basic.test_transfers.TestRpcCallsTransactions object at 0x7f9564701f40>>(JsonRpcErrorResponse(id=92, error={'code': -32000, 'message': 'relation \"neon_transactions\" does not exist\\nLINE 3:               FROM neon_transactions AS a\\n                           ^\\n'}, jsonrpc='2.0'))\n +    where <bound method BasicTests.assert_is_successful_response of <integration.tests.basic.test_transfers.TestRpcCallsTransactions object at 0x7f9564701f40>> = <integration.tests.basic.test_transfers.TestRpcCallsTransactions object at 0x7f9564701f40>.assert_is_successful_response",
        "time" : {
          "start" : 1650026228656,
          "stop" : 1650026229878,
          "duration" : 1222
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "67d9e1e93a87e04c.json",
  "parameterValues" : [ ]
}