{
  "uid" : "c28cf87b616393db",
  "name" : "test_too_high_gas_limit_by_gas_prise_greater_than_u64_max[1-18446744073709551616]",
  "fullName" : "integration.tests.basic.test_transfers.TestTransfer#test_too_high_gas_limit_by_gas_prise_greater_than_u64_max",
  "historyId" : "5c80a6f224d6d0f86675a8c41f818007",
  "time" : {
    "start" : 1649762665953,
    "stop" : 1649762666857,
    "duration" : 904
  },
  "description" : "Too high gas_limit * gas_price > u64::max",
  "descriptionHtml" : "<p>Too high gas_limit * gas_price &gt; u64::max</p>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError",
  "statusTrace" : "self = <integration.tests.basic.test_transfers.TestTransfer object at 0x7f74a8e76ca0>\ngas_limit = 1, gas_price = 18446744073709551616, prepare_accounts = None\n\n    @pytest.mark.parametrize(\"gas_limit,gas_price\", GAS_LIMIT_AND_PRICE_DATA)\n    def test_too_high_gas_limit_by_gas_prise_greater_than_u64_max(self, gas_limit: float, gas_price: float, prepare_accounts):\n        \"\"\"Too high gas_limit * gas_price > u64::max\"\"\"\n        sender_amount = 2\n        self.sender_account = self.create_account_with_balance(sender_amount)\n        self.recipient_account = self.web3_client.create_account()\n        amount = InputData.DEFAULT_TRANSFER_AMOUNT.value\n    \n>       self.process_transaction_with_failure(\n            self.sender_account,\n            self.recipient_account,\n            amount,\n            gas=gas_limit,\n            gas_price=gas_price,\n            error_message=ErrorMessage.INSUFFICIENT_FUNDS.value)\n\nintegration/tests/basic/test_transfers.py:238: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <integration.tests.basic.test_transfers.TestTransfer object at 0x7f74a8e76ca0>\nsender_account = <eth_account.signers.local.LocalAccount object at 0x7f74a8e71940>\nrecipient_account = <eth_account.signers.local.LocalAccount object at 0x7f74a8e714c0>\namount = 0.01, gas = 1, gas_price = 18446744073709551616\nerror_message = 'insufficient funds for transfer'\n\n    def process_transaction_with_failure(\n            self,\n            sender_account: Account,\n            recipient_account: Union[Account, AccountData],\n            amount: int,\n            gas: Optional[int] = 0,\n            gas_price: Optional[int] = None,\n            error_message: str = \"\") -> Union[web3.types.TxReceipt, None]:\n        '''Processes transaction, expects a failure'''\n    \n        tx: Union[web3.types.TxReceipt, None] = None\n        with allure.step(\n                f\"Sending {amount} from {sender_account.address} to {recipient_account.address}\"\n        ):\n            with pytest.raises(Exception) as error_info:\n                tx = self.web3_client.send_neon(sender_account,\n                                                recipient_account, amount, gas,\n                                                gas_price)\n    \n            if error_info != None:\n    \n                if error_message:\n>                   assert error_message in str(error_info)\nE                   AssertionError\n\nintegration/tests/basic/helpers/basic.py:109: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "pytestconfig",
    "time" : {
      "start" : 1649762495418,
      "stop" : 1649762495419,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "web3_client",
    "time" : {
      "start" : 1649762495419,
      "stop" : 1649762495420,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "allure_environment",
    "time" : {
      "start" : 1649762495420,
      "stop" : 1649762496406,
      "duration" : 986
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "faucet",
    "time" : {
      "start" : 1649762496406,
      "stop" : 1649762496407,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "sol_client",
    "time" : {
      "start" : 1649762496407,
      "stop" : 1649762496407,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "jsonrpc_requester",
    "time" : {
      "start" : 1649762496407,
      "stop" : 1649762496407,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "operator",
    "time" : {
      "start" : 1649762496407,
      "stop" : 1649762496407,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_account",
    "time" : {
      "start" : 1649762638633,
      "stop" : 1649762639964,
      "duration" : 1331
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Create account for tests",
      "time" : {
        "start" : 1649762638633,
        "stop" : 1649762638637,
        "duration" : 4
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Request 1000 NEON from faucet for 0x8637a07eAe9291c4F1aa8933fDbf84c9F35aea36",
      "time" : {
        "start" : 1649762638637,
        "stop" : 1649762639392,
        "duration" : 755
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Operator initial balance: 990760584.0 NEON 4952.10771668 SOL",
      "time" : {
        "start" : 1649762639964,
        "stop" : 1649762639964,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 3,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "prepare_account",
    "time" : {
      "start" : 1649762664685,
      "stop" : 1649762664685,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare",
    "time" : {
      "start" : 1649762664685,
      "stop" : 1649762664685,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_json_rpc_requester",
    "time" : {
      "start" : 1649762664685,
      "stop" : 1649762664685,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_accounts",
    "time" : {
      "start" : 1649762664686,
      "stop" : 1649762665952,
      "duration" : 1266
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "Too high gas_limit * gas_price > u64::max",
    "status" : "failed",
    "statusMessage" : "AssertionError",
    "statusTrace" : "self = <integration.tests.basic.test_transfers.TestTransfer object at 0x7f74a8e76ca0>\ngas_limit = 1, gas_price = 18446744073709551616, prepare_accounts = None\n\n    @pytest.mark.parametrize(\"gas_limit,gas_price\", GAS_LIMIT_AND_PRICE_DATA)\n    def test_too_high_gas_limit_by_gas_prise_greater_than_u64_max(self, gas_limit: float, gas_price: float, prepare_accounts):\n        \"\"\"Too high gas_limit * gas_price > u64::max\"\"\"\n        sender_amount = 2\n        self.sender_account = self.create_account_with_balance(sender_amount)\n        self.recipient_account = self.web3_client.create_account()\n        amount = InputData.DEFAULT_TRANSFER_AMOUNT.value\n    \n>       self.process_transaction_with_failure(\n            self.sender_account,\n            self.recipient_account,\n            amount,\n            gas=gas_limit,\n            gas_price=gas_price,\n            error_message=ErrorMessage.INSUFFICIENT_FUNDS.value)\n\nintegration/tests/basic/test_transfers.py:238: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <integration.tests.basic.test_transfers.TestTransfer object at 0x7f74a8e76ca0>\nsender_account = <eth_account.signers.local.LocalAccount object at 0x7f74a8e71940>\nrecipient_account = <eth_account.signers.local.LocalAccount object at 0x7f74a8e714c0>\namount = 0.01, gas = 1, gas_price = 18446744073709551616\nerror_message = 'insufficient funds for transfer'\n\n    def process_transaction_with_failure(\n            self,\n            sender_account: Account,\n            recipient_account: Union[Account, AccountData],\n            amount: int,\n            gas: Optional[int] = 0,\n            gas_price: Optional[int] = None,\n            error_message: str = \"\") -> Union[web3.types.TxReceipt, None]:\n        '''Processes transaction, expects a failure'''\n    \n        tx: Union[web3.types.TxReceipt, None] = None\n        with allure.step(\n                f\"Sending {amount} from {sender_account.address} to {recipient_account.address}\"\n        ):\n            with pytest.raises(Exception) as error_info:\n                tx = self.web3_client.send_neon(sender_account,\n                                                recipient_account, amount, gas,\n                                                gas_price)\n    \n            if error_info != None:\n    \n                if error_message:\n>                   assert error_message in str(error_info)\nE                   AssertionError\n\nintegration/tests/basic/helpers/basic.py:109: AssertionError",
    "steps" : [ {
      "name" : "Sending 0.01 from 0x056b8fc84B5FC4a9967182a8B57c765f7C49c9f3 to 0x4ba49020A40d1CC513C1BE79F3a301d4118e43B8",
      "time" : {
        "start" : 1649762666590,
        "stop" : 1649762666857,
        "duration" : 267
      },
      "status" : "failed",
      "statusMessage" : "AssertionError\n",
      "statusTrace" : "  File \"/home/runner/work/neon-tests/neon-tests/integration/tests/basic/helpers/basic.py\", line 109, in process_transaction_with_failure\n    assert error_message in str(error_info)\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "prepare_accounts::0",
    "time" : {
      "start" : 1649762666866,
      "stop" : 1649762666866,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_account::0",
    "time" : {
      "start" : 1649762671829,
      "stop" : 1649762672457,
      "duration" : 628
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Operator end balance: 990760392.0 NEON 4952.0498372 SOL",
      "time" : {
        "start" : 1649762672328,
        "stop" : 1649762672328,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Account end balance: 1000 NEON",
      "time" : {
        "start" : 1649762672457,
        "stop" : 1649762672457,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "allure_environment::0",
    "time" : {
      "start" : 1649762672464,
      "stop" : 1649762672464,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "Basic: transfer tests"
  }, {
    "name" : "parentSuite",
    "value" : "integration.tests.basic"
  }, {
    "name" : "suite",
    "value" : "test_transfers"
  }, {
    "name" : "subSuite",
    "value" : "TestTransfer"
  }, {
    "name" : "host",
    "value" : "fv-az296-546"
  }, {
    "name" : "thread",
    "value" : "2212-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "integration.tests.basic.test_transfers"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "gas_limit",
    "value" : "1"
  }, {
    "name" : "gas_price",
    "value" : "18446744073709551616"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 11,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 0,
        "unknown" : 0,
        "total" : 11
      },
      "items" : [ {
        "uid" : "9678e8ee8466ae2e",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25a/802//#testresult/9678e8ee8466ae2e",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1649762016858,
          "stop" : 1649762017673,
          "duration" : 815
        }
      }, {
        "uid" : "9c306182cb95332d",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25a/800//#testresult/9c306182cb95332d",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1649761196258,
          "stop" : 1649761197276,
          "duration" : 1018
        }
      }, {
        "uid" : "d1f5678056c974f",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25a/798//#testresult/d1f5678056c974f",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1649760198384,
          "stop" : 1649760199191,
          "duration" : 807
        }
      }, {
        "uid" : "7f06a7c106501d78",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25a/796//#testresult/7f06a7c106501d78",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1649759465835,
          "stop" : 1649759466740,
          "duration" : 905
        }
      }, {
        "uid" : "6f3e0b086832efda",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25a/794//#testresult/6f3e0b086832efda",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1649757782297,
          "stop" : 1649757783199,
          "duration" : 902
        }
      }, {
        "uid" : "4c23d581e98215df",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25a/792//#testresult/4c23d581e98215df",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1649756883503,
          "stop" : 1649756884520,
          "duration" : 1017
        }
      }, {
        "uid" : "596b4583f047f4f9",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25a/790//#testresult/596b4583f047f4f9",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1649755094137,
          "stop" : 1649755095152,
          "duration" : 1015
        }
      }, {
        "uid" : "c49e8168eecf2951",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25a/788//#testresult/c49e8168eecf2951",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1649750912934,
          "stop" : 1649750913280,
          "duration" : 346
        }
      }, {
        "uid" : "b1a619f2746e44c0",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25a/786//#testresult/b1a619f2746e44c0",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1649710833768,
          "stop" : 1649710833980,
          "duration" : 212
        }
      }, {
        "uid" : "223dbf5125eae1b2",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25a/784//#testresult/223dbf5125eae1b2",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1649690546931,
          "stop" : 1649690547199,
          "duration" : 268
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "c28cf87b616393db.json",
  "parameterValues" : [ "1", "18446744073709551616" ]
}