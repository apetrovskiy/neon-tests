{
  "uid" : "e19a7c0cfa5d8713",
  "name" : "test_rpc_call_eth_sendRawTransaction",
  "fullName" : "integration.tests.basic.test_transactions.TestRpcCallsTransactions#test_rpc_call_eth_sendRawTransaction",
  "historyId" : "f2266f2fcf46a3382764047e40d95c33",
  "time" : {
    "start" : 1649762632239,
    "stop" : 1649762633177,
    "duration" : 938
  },
  "description" : "Verify implemented rpc calls work eth_sendRawTransaction",
  "descriptionHtml" : "<p>Verify implemented rpc calls work eth_sendRawTransaction</p>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: The response type is error response\nassert False\n +  where False = <bound method BasicTests.assert_is_successful_response of <integration.tests.basic.test_transactions.TestRpcCallsTransactions object at 0x7f74a8f95130>>(JsonRpcErrorResponse(id=95, error={'code': -32000, 'message': 'relation \"neon_transactions\" does not exist\\nLINE 3:               FROM neon_transactions AS a\\n                           ^\\n'}, jsonrpc='2.0'))\n +    where <bound method BasicTests.assert_is_successful_response of <integration.tests.basic.test_transactions.TestRpcCallsTransactions object at 0x7f74a8f95130>> = <integration.tests.basic.test_transactions.TestRpcCallsTransactions object at 0x7f74a8f95130>.assert_is_successful_response",
  "statusTrace" : "self = <integration.tests.basic.test_transactions.TestRpcCallsTransactions object at 0x7f74a8f95130>\nprepare_accounts = None\n\n    def test_rpc_call_eth_sendRawTransaction(self, prepare_accounts):\n        \"\"\"Verify implemented rpc calls work eth_sendRawTransaction\"\"\"\n    \n        # TODO: chain id\n        transaction = {\n            \"from\":\n            self.sender_account.address,\n            \"to\":\n            self.recipient_account.address,\n            \"value\":\n            self.web3_client.toWei(InputData.SAMPLE_AMOUNT.value, \"ether\"),\n            \"chainId\":\n            self.web3_client._chain_id,\n            \"gasPrice\":\n            self.web3_client.gas_price(),\n            \"gas\":\n            0,\n            \"nonce\":\n            self.web3_client.eth.get_transaction_count(\n                self.sender_account.address),\n        }\n        transaction[\"gas\"] = self.web3_client.eth.estimate_gas(transaction)\n    \n        signed_tx = self.web3_client.eth.account.sign_transaction(\n            transaction, self.sender_account.key)\n    \n        params = [signed_tx.rawTransaction.hex()]\n    \n        model = RpcRequestFactory.get_send_raw_trx(params=params)\n        response = self.jsonrpc_requester.request_json_rpc(model)\n        actual_result = self.jsonrpc_requester.deserialize_response(response)\n    \n        assert actual_result.id == model.id, AssertMessage.WRONG_ID.value\n>       assert self.assert_is_successful_response(\n            actual_result), AssertMessage.WRONG_TYPE.value\nE       AssertionError: The response type is error response\nE       assert False\nE        +  where False = <bound method BasicTests.assert_is_successful_response of <integration.tests.basic.test_transactions.TestRpcCallsTransactions object at 0x7f74a8f95130>>(JsonRpcErrorResponse(id=95, error={'code': -32000, 'message': 'relation \"neon_transactions\" does not exist\\nLINE 3:               FROM neon_transactions AS a\\n                           ^\\n'}, jsonrpc='2.0'))\nE        +    where <bound method BasicTests.assert_is_successful_response of <integration.tests.basic.test_transactions.TestRpcCallsTransactions object at 0x7f74a8f95130>> = <integration.tests.basic.test_transactions.TestRpcCallsTransactions object at 0x7f74a8f95130>.assert_is_successful_response\n\nintegration/tests/basic/test_transactions.py:81: AssertionError",
  "flaky" : true,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "pytestconfig",
    "time" : {
      "start" : 1649762495418,
      "stop" : 1649762495419,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "web3_client",
    "time" : {
      "start" : 1649762495419,
      "stop" : 1649762495420,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "allure_environment",
    "time" : {
      "start" : 1649762495420,
      "stop" : 1649762496406,
      "duration" : 986
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "faucet",
    "time" : {
      "start" : 1649762496406,
      "stop" : 1649762496407,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "sol_client",
    "time" : {
      "start" : 1649762496407,
      "stop" : 1649762496407,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "jsonrpc_requester",
    "time" : {
      "start" : 1649762496407,
      "stop" : 1649762496407,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "operator",
    "time" : {
      "start" : 1649762496407,
      "stop" : 1649762496407,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_account",
    "time" : {
      "start" : 1649762627537,
      "stop" : 1649762628796,
      "duration" : 1259
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Create account for tests",
      "time" : {
        "start" : 1649762627537,
        "stop" : 1649762627541,
        "duration" : 4
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Request 1000 NEON from faucet for 0xD849c1946c039dc668a89D3F191037c39820d187",
      "time" : {
        "start" : 1649762627541,
        "stop" : 1649762628296,
        "duration" : 755
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Operator initial balance: 990761624.0 NEON 4952.12179304 SOL",
      "time" : {
        "start" : 1649762628795,
        "stop" : 1649762628795,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 3,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "prepare_account",
    "time" : {
      "start" : 1649762630978,
      "stop" : 1649762630978,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_json_rpc_requester",
    "time" : {
      "start" : 1649762630978,
      "stop" : 1649762630978,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare",
    "time" : {
      "start" : 1649762630978,
      "stop" : 1649762630978,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_accounts",
    "time" : {
      "start" : 1649762630978,
      "stop" : 1649762632238,
      "duration" : 1260
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "Verify implemented rpc calls work eth_sendRawTransaction",
    "status" : "failed",
    "statusMessage" : "AssertionError: The response type is error response\nassert False\n +  where False = <bound method BasicTests.assert_is_successful_response of <integration.tests.basic.test_transactions.TestRpcCallsTransactions object at 0x7f74a8f95130>>(JsonRpcErrorResponse(id=95, error={'code': -32000, 'message': 'relation \"neon_transactions\" does not exist\\nLINE 3:               FROM neon_transactions AS a\\n                           ^\\n'}, jsonrpc='2.0'))\n +    where <bound method BasicTests.assert_is_successful_response of <integration.tests.basic.test_transactions.TestRpcCallsTransactions object at 0x7f74a8f95130>> = <integration.tests.basic.test_transactions.TestRpcCallsTransactions object at 0x7f74a8f95130>.assert_is_successful_response",
    "statusTrace" : "self = <integration.tests.basic.test_transactions.TestRpcCallsTransactions object at 0x7f74a8f95130>\nprepare_accounts = None\n\n    def test_rpc_call_eth_sendRawTransaction(self, prepare_accounts):\n        \"\"\"Verify implemented rpc calls work eth_sendRawTransaction\"\"\"\n    \n        # TODO: chain id\n        transaction = {\n            \"from\":\n            self.sender_account.address,\n            \"to\":\n            self.recipient_account.address,\n            \"value\":\n            self.web3_client.toWei(InputData.SAMPLE_AMOUNT.value, \"ether\"),\n            \"chainId\":\n            self.web3_client._chain_id,\n            \"gasPrice\":\n            self.web3_client.gas_price(),\n            \"gas\":\n            0,\n            \"nonce\":\n            self.web3_client.eth.get_transaction_count(\n                self.sender_account.address),\n        }\n        transaction[\"gas\"] = self.web3_client.eth.estimate_gas(transaction)\n    \n        signed_tx = self.web3_client.eth.account.sign_transaction(\n            transaction, self.sender_account.key)\n    \n        params = [signed_tx.rawTransaction.hex()]\n    \n        model = RpcRequestFactory.get_send_raw_trx(params=params)\n        response = self.jsonrpc_requester.request_json_rpc(model)\n        actual_result = self.jsonrpc_requester.deserialize_response(response)\n    \n        assert actual_result.id == model.id, AssertMessage.WRONG_ID.value\n>       assert self.assert_is_successful_response(\n            actual_result), AssertMessage.WRONG_TYPE.value\nE       AssertionError: The response type is error response\nE       assert False\nE        +  where False = <bound method BasicTests.assert_is_successful_response of <integration.tests.basic.test_transactions.TestRpcCallsTransactions object at 0x7f74a8f95130>>(JsonRpcErrorResponse(id=95, error={'code': -32000, 'message': 'relation \"neon_transactions\" does not exist\\nLINE 3:               FROM neon_transactions AS a\\n                           ^\\n'}, jsonrpc='2.0'))\nE        +    where <bound method BasicTests.assert_is_successful_response of <integration.tests.basic.test_transactions.TestRpcCallsTransactions object at 0x7f74a8f95130>> = <integration.tests.basic.test_transactions.TestRpcCallsTransactions object at 0x7f74a8f95130>.assert_is_successful_response\n\nintegration/tests/basic/test_transactions.py:81: AssertionError",
    "steps" : [ {
      "name" : "Request: JsonRpcRequest(id=95, method='eth_sendRawTransaction', params=['0xf86d8085740e1afcc082520894c4b9bf5bebc70c7ec1d56947b392d481d1c3173d87470de4df82000080820102a0d76fb85e2d88c39c55a2d20dd1b90d2ea826e3f475d861b5bae9e1ac8844ac71a07e711466c95583cb55030356002651b016ab107ad4aa1cd0ac0b105deb72321c'], jsonrpc='2.0')",
      "time" : {
        "start" : 1649762632900,
        "stop" : 1649762633177,
        "duration" : 277
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Response: {'jsonrpc': '2.0', 'id': 95, 'error': {'code': -32000, 'message': 'relation \"neon_transactions\" does not exist\\nLINE 3:               FROM neon_transactions AS a\\n                           ^\\n'}}",
      "time" : {
        "start" : 1649762633177,
        "stop" : 1649762633177,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "prepare_accounts::0",
    "time" : {
      "start" : 1649762633182,
      "stop" : 1649762633182,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_account::0",
    "time" : {
      "start" : 1649762637993,
      "stop" : 1649762638630,
      "duration" : 637
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Operator end balance: 990761584.0 NEON 4952.10928072 SOL",
      "time" : {
        "start" : 1649762638500,
        "stop" : 1649762638500,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Account end balance: 1000 NEON",
      "time" : {
        "start" : 1649762638630,
        "stop" : 1649762638630,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "allure_environment::0",
    "time" : {
      "start" : 1649762672464,
      "stop" : 1649762672464,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "Basic: Json-RPC call tests - transactions"
  }, {
    "name" : "parentSuite",
    "value" : "integration.tests.basic"
  }, {
    "name" : "suite",
    "value" : "test_transactions"
  }, {
    "name" : "subSuite",
    "value" : "TestRpcCallsTransactions"
  }, {
    "name" : "host",
    "value" : "fv-az296-546"
  }, {
    "name" : "thread",
    "value" : "2212-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "integration.tests.basic.test_transactions"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 17,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 12,
        "unknown" : 0,
        "total" : 30
      },
      "items" : [ {
        "uid" : "974f5454654502da",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25a/802//#testresult/974f5454654502da",
        "status" : "failed",
        "statusDetails" : "AssertionError: The response type is error response\nassert False\n +  where False = <bound method BasicTests.assert_is_successful_response of <integration.tests.basic.test_transactions.TestRpcCallsTransactions object at 0x7fe4c2f5a340>>(JsonRpcErrorResponse(id=78, error={'code': -32000, 'message': 'relation \"neon_transactions\" does not exist\\nLINE 3:               FROM neon_transactions AS a\\n                           ^\\n'}, jsonrpc='2.0'))\n +    where <bound method BasicTests.assert_is_successful_response of <integration.tests.basic.test_transactions.TestRpcCallsTransactions object at 0x7fe4c2f5a340>> = <integration.tests.basic.test_transactions.TestRpcCallsTransactions object at 0x7fe4c2f5a340>.assert_is_successful_response",
        "time" : {
          "start" : 1649761987157,
          "stop" : 1649761987791,
          "duration" : 634
        }
      }, {
        "uid" : "d9c6013452065f6b",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25a/800//#testresult/d9c6013452065f6b",
        "status" : "failed",
        "statusDetails" : "AssertionError: The response type is error response\nassert False\n +  where False = <bound method BasicTests.assert_is_successful_response of <integration.tests.basic.test_transactions.TestRpcCallsTransactions object at 0x7f4539a5b1f0>>(JsonRpcErrorResponse(id=37, error={'code': -32000, 'message': 'relation \"neon_transactions\" does not exist\\nLINE 3:               FROM neon_transactions AS a\\n                           ^\\n'}, jsonrpc='2.0'))\n +    where <bound method BasicTests.assert_is_successful_response of <integration.tests.basic.test_transactions.TestRpcCallsTransactions object at 0x7f4539a5b1f0>> = <integration.tests.basic.test_transactions.TestRpcCallsTransactions object at 0x7f4539a5b1f0>.assert_is_successful_response",
        "time" : {
          "start" : 1649761155919,
          "stop" : 1649761156957,
          "duration" : 1038
        }
      }, {
        "uid" : "bfb815ee60a889ab",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25a/798//#testresult/bfb815ee60a889ab",
        "status" : "passed",
        "time" : {
          "start" : 1649760168995,
          "stop" : 1649760170264,
          "duration" : 1269
        }
      }, {
        "uid" : "1d58341a2140bb87",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25a/796//#testresult/1d58341a2140bb87",
        "status" : "passed",
        "time" : {
          "start" : 1649759431342,
          "stop" : 1649759432939,
          "duration" : 1597
        }
      }, {
        "uid" : "5a44a663aa0211a5",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25a/794//#testresult/5a44a663aa0211a5",
        "status" : "failed",
        "statusDetails" : "AssertionError: The response type is error response\nassert False\n +  where False = <bound method BasicTests.assert_is_successful_response of <integration.tests.basic.test_transactions.TestRpcCallsTransactions object at 0x7f98decb1970>>(JsonRpcErrorResponse(id=36, error={'code': -32000, 'message': 'relation \"neon_transactions\" does not exist\\nLINE 3:               FROM neon_transactions AS a\\n                           ^\\n'}, jsonrpc='2.0'))\n +    where <bound method BasicTests.assert_is_successful_response of <integration.tests.basic.test_transactions.TestRpcCallsTransactions object at 0x7f98decb1970>> = <integration.tests.basic.test_transactions.TestRpcCallsTransactions object at 0x7f98decb1970>.assert_is_successful_response",
        "time" : {
          "start" : 1649757748854,
          "stop" : 1649757749692,
          "duration" : 838
        }
      }, {
        "uid" : "199edd798a88396c",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25a/792//#testresult/199edd798a88396c",
        "status" : "passed",
        "time" : {
          "start" : 1649756845340,
          "stop" : 1649756847001,
          "duration" : 1661
        }
      }, {
        "uid" : "62cd61dae080d5f5",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25a/790//#testresult/62cd61dae080d5f5",
        "status" : "failed",
        "statusDetails" : "AssertionError: The response type is error response\nassert False\n +  where False = <bound method BasicTests.assert_is_successful_response of <integration.tests.basic.test_transactions.TestRpcCallsTransactions object at 0x7f5b966ec880>>(JsonRpcErrorResponse(id=60, error={'code': -32000, 'message': 'relation \"neon_transactions\" does not exist\\nLINE 3:               FROM neon_transactions AS a\\n                           ^\\n'}, jsonrpc='2.0'))\n +    where <bound method BasicTests.assert_is_successful_response of <integration.tests.basic.test_transactions.TestRpcCallsTransactions object at 0x7f5b966ec880>> = <integration.tests.basic.test_transactions.TestRpcCallsTransactions object at 0x7f5b966ec880>.assert_is_successful_response",
        "time" : {
          "start" : 1649755055747,
          "stop" : 1649755056950,
          "duration" : 1203
        }
      }, {
        "uid" : "54eedbcf999af350",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25a/788//#testresult/54eedbcf999af350",
        "status" : "failed",
        "statusDetails" : "AssertionError: The response type is error response\nassert False\n +  where False = <bound method BasicTests.assert_is_successful_response of <integration.tests.basic.test_transactions.TestRpcCallsTransactions object at 0x7f723de845e0>>(JsonRpcErrorResponse(id=50, error={'code': -32000, 'message': 'relation \"neon_transactions\" does not exist\\nLINE 3:               FROM neon_transactions AS a\\n                           ^\\n'}, jsonrpc='2.0'))\n +    where <bound method BasicTests.assert_is_successful_response of <integration.tests.basic.test_transactions.TestRpcCallsTransactions object at 0x7f723de845e0>> = <integration.tests.basic.test_transactions.TestRpcCallsTransactions object at 0x7f723de845e0>.assert_is_successful_response",
        "time" : {
          "start" : 1649750874737,
          "stop" : 1649750875769,
          "duration" : 1032
        }
      }, {
        "uid" : "344b0caa8d457535",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25a/786//#testresult/344b0caa8d457535",
        "status" : "passed",
        "time" : {
          "start" : 1649710804770,
          "stop" : 1649710805734,
          "duration" : 964
        }
      }, {
        "uid" : "222466b75d7ad9fc",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25a/784//#testresult/222466b75d7ad9fc",
        "status" : "failed",
        "statusDetails" : "AssertionError: The response type is error response\nassert False\n +  where False = <bound method BasicTests.assert_is_successful_response of <integration.tests.basic.test_transactions.TestRpcCallsTransactions object at 0x7f55485e1b80>>(JsonRpcErrorResponse(id=0, error={'code': -32000, 'message': 'relation \"neon_transactions\" does not exist\\nLINE 3:               FROM neon_transactions AS a\\n                           ^\\n'}, jsonrpc='2.0'))\n +    where <bound method BasicTests.assert_is_successful_response of <integration.tests.basic.test_transactions.TestRpcCallsTransactions object at 0x7f55485e1b80>> = <integration.tests.basic.test_transactions.TestRpcCallsTransactions object at 0x7f55485e1b80>.assert_is_successful_response",
        "time" : {
          "start" : 1649690513197,
          "stop" : 1649690514009,
          "duration" : 812
        }
      }, {
        "uid" : "32a4137c75289aaa",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25a/782//#testresult/32a4137c75289aaa",
        "status" : "failed",
        "statusDetails" : "AssertionError: The response type is error response\nassert False\n +  where False = <bound method BasicTests.assert_is_successful_response of <integration.tests.basic.test_transactions.TestRpcCallsTransactions object at 0x7f1949c22ac0>>(JsonRpcErrorResponse(id=96, error={'code': -32000, 'message': 'relation \"neon_transactions\" does not exist\\nLINE 3:               FROM neon_transactions AS a\\n                           ^\\n'}, jsonrpc='2.0'))\n +    where <bound method BasicTests.assert_is_successful_response of <integration.tests.basic.test_transactions.TestRpcCallsTransactions object at 0x7f1949c22ac0>> = <integration.tests.basic.test_transactions.TestRpcCallsTransactions object at 0x7f1949c22ac0>.assert_is_successful_response",
        "time" : {
          "start" : 1649684811444,
          "stop" : 1649684812149,
          "duration" : 705
        }
      }, {
        "uid" : "614c0de4d34e6360",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25a/780//#testresult/614c0de4d34e6360",
        "status" : "failed",
        "statusDetails" : "AssertionError: The response type is error response\nassert False\n +  where False = <bound method BasicTests.assert_is_successful_response of <integration.tests.basic.test_transactions.TestRpcCallsTransactions object at 0x7fb156c32880>>(JsonRpcErrorResponse(id=76, error={'code': -32000, 'message': 'relation \"neon_transactions\" does not exist\\nLINE 3:               FROM neon_transactions AS a\\n                           ^\\n'}, jsonrpc='2.0'))\n +    where <bound method BasicTests.assert_is_successful_response of <integration.tests.basic.test_transactions.TestRpcCallsTransactions object at 0x7fb156c32880>> = <integration.tests.basic.test_transactions.TestRpcCallsTransactions object at 0x7fb156c32880>.assert_is_successful_response",
        "time" : {
          "start" : 1649682916807,
          "stop" : 1649682917593,
          "duration" : 786
        }
      }, {
        "uid" : "1d144a1bc8fcf3d9",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25a/778//#testresult/1d144a1bc8fcf3d9",
        "status" : "broken",
        "statusDetails" : "TypeError: create_account_with_balance() got an unexpected keyword argument 'is_sender'",
        "time" : {
          "start" : 1649681771100,
          "stop" : 1649681771100,
          "duration" : 0
        }
      }, {
        "uid" : "9b9877e107073eaa",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25a/776//#testresult/9b9877e107073eaa",
        "status" : "failed",
        "statusDetails" : "AssertionError: The response type is error response\nassert False\n +  where False = <bound method BasicTests.assert_is_successful_response of <integration.tests.basic.test_transactions.TestRpcCallsTransactions object at 0x7f0896dccee0>>(JsonRpcErrorResponse(id=67, error={'code': -32000, 'message': 'connection already closed'}, jsonrpc='2.0'))\n +    where <bound method BasicTests.assert_is_successful_response of <integration.tests.basic.test_transactions.TestRpcCallsTransactions object at 0x7f0896dccee0>> = <integration.tests.basic.test_transactions.TestRpcCallsTransactions object at 0x7f0896dccee0>.assert_is_successful_response",
        "time" : {
          "start" : 1649424551703,
          "stop" : 1649424552515,
          "duration" : 812
        }
      }, {
        "uid" : "e633f42dae49fc6d",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25a/774//#testresult/e633f42dae49fc6d",
        "status" : "failed",
        "statusDetails" : "AssertionError: The response type is error response\nassert False\n +  where False = <bound method BasicTests.assert_is_successful_response of <integration.tests.basic.test_transactions.TestRpcCallsTransactions object at 0x7f6167fd4eb0>>(JsonRpcErrorResponse(id=91, error={'code': -32000, 'message': 'connection already closed'}, jsonrpc='2.0'))\n +    where <bound method BasicTests.assert_is_successful_response of <integration.tests.basic.test_transactions.TestRpcCallsTransactions object at 0x7f6167fd4eb0>> = <integration.tests.basic.test_transactions.TestRpcCallsTransactions object at 0x7f6167fd4eb0>.assert_is_successful_response",
        "time" : {
          "start" : 1649418819211,
          "stop" : 1649418820309,
          "duration" : 1098
        }
      }, {
        "uid" : "b82c9248a2f08b43",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25a/770//#testresult/b82c9248a2f08b43",
        "status" : "passed",
        "time" : {
          "start" : 1649417502118,
          "stop" : 1649417503852,
          "duration" : 1734
        }
      }, {
        "uid" : "a28a62a8adb950b",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25a/768//#testresult/a28a62a8adb950b",
        "status" : "failed",
        "statusDetails" : "AssertionError: The response type is error response\nassert False\n +  where False = <bound method BasicTests.assert_is_successful_response of <integration.tests.basic.test_transactions.TestRpcCallsTransactions object at 0x7fd517008970>>(JsonRpcErrorResponse(id=1, error={'code': -32000, 'message': 'connection already closed'}, jsonrpc='2.0'))\n +    where <bound method BasicTests.assert_is_successful_response of <integration.tests.basic.test_transactions.TestRpcCallsTransactions object at 0x7fd517008970>> = <integration.tests.basic.test_transactions.TestRpcCallsTransactions object at 0x7fd517008970>.assert_is_successful_response",
        "time" : {
          "start" : 1649416763197,
          "stop" : 1649416764244,
          "duration" : 1047
        }
      }, {
        "uid" : "ef3346a713aa52ac",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25a/766//#testresult/ef3346a713aa52ac",
        "status" : "failed",
        "statusDetails" : "AssertionError: The response type is error response\nassert False\n +  where False = <bound method BasicTests.assert_is_successful_response of <integration.tests.basic.test_transactions.TestRpcCallsTransactions object at 0x7fa9526e5d00>>(JsonRpcErrorResponse(id=30, error={'code': -32000, 'message': 'connection already closed'}, jsonrpc='2.0'))\n +    where <bound method BasicTests.assert_is_successful_response of <integration.tests.basic.test_transactions.TestRpcCallsTransactions object at 0x7fa9526e5d00>> = <integration.tests.basic.test_transactions.TestRpcCallsTransactions object at 0x7fa9526e5d00>.assert_is_successful_response",
        "time" : {
          "start" : 1649415556800,
          "stop" : 1649415557990,
          "duration" : 1190
        }
      }, {
        "uid" : "74d9317347fbb8a5",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25a/764//#testresult/74d9317347fbb8a5",
        "status" : "passed",
        "time" : {
          "start" : 1649415326708,
          "stop" : 1649415328263,
          "duration" : 1555
        }
      }, {
        "uid" : "db44f9ab965acb30",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25a/762//#testresult/db44f9ab965acb30",
        "status" : "passed",
        "time" : {
          "start" : 1649415066991,
          "stop" : 1649415068844,
          "duration" : 1853
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "e19a7c0cfa5d8713.json",
  "parameterValues" : [ ]
}