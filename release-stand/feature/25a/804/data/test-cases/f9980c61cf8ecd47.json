{
  "uid" : "f9980c61cf8ecd47",
  "name" : "test_there_are_not_enough_neons_for_gas_fee",
  "fullName" : "integration.tests.basic.test_transfers.TestTransfer#test_there_are_not_enough_neons_for_gas_fee",
  "historyId" : "163ae519840dc00f4a52413e2d4748b8",
  "time" : {
    "start" : 1649762669053,
    "stop" : 1649762670481,
    "duration" : 1428
  },
  "description" : "There are not enough Neons for gas fee",
  "descriptionHtml" : "<p>There are not enough Neons for gas fee</p>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError",
  "statusTrace" : "self = <integration.tests.basic.test_transfers.TestTransfer object at 0x7f74a9009b50>\n\n    def test_there_are_not_enough_neons_for_gas_fee(self):\n        \"\"\"There are not enough Neons for gas fee\"\"\"\n        sender_amount = 1\n        self.sender_account = self.create_account_with_balance(sender_amount)\n        self.recipient_account = self.web3_client.create_account()\n        amount = 0.9\n    \n>       self.process_transaction_with_failure(\n            self.sender_account,\n            self.recipient_account,\n            amount,\n            error_message=ErrorMessage.INSUFFICIENT_FUNDS.value)\n\nintegration/tests/basic/test_transfers.py:256: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <integration.tests.basic.test_transfers.TestTransfer object at 0x7f74a9009b50>\nsender_account = <eth_account.signers.local.LocalAccount object at 0x7f74a8e828e0>\nrecipient_account = <eth_account.signers.local.LocalAccount object at 0x7f74a8e82ee0>\namount = 0.9, gas = 0, gas_price = None\nerror_message = 'insufficient funds for transfer'\n\n    def process_transaction_with_failure(\n            self,\n            sender_account: Account,\n            recipient_account: Union[Account, AccountData],\n            amount: int,\n            gas: Optional[int] = 0,\n            gas_price: Optional[int] = None,\n            error_message: str = \"\") -> Union[web3.types.TxReceipt, None]:\n        '''Processes transaction, expects a failure'''\n    \n        tx: Union[web3.types.TxReceipt, None] = None\n        with allure.step(\n                f\"Sending {amount} from {sender_account.address} to {recipient_account.address}\"\n        ):\n            with pytest.raises(Exception) as error_info:\n                tx = self.web3_client.send_neon(sender_account,\n                                                recipient_account, amount, gas,\n                                                gas_price)\n    \n            if error_info != None:\n    \n                if error_message:\n>                   assert error_message in str(error_info)\nE                   AssertionError\n\nintegration/tests/basic/helpers/basic.py:109: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "pytestconfig",
    "time" : {
      "start" : 1649762495418,
      "stop" : 1649762495419,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "web3_client",
    "time" : {
      "start" : 1649762495419,
      "stop" : 1649762495420,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "allure_environment",
    "time" : {
      "start" : 1649762495420,
      "stop" : 1649762496406,
      "duration" : 986
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "faucet",
    "time" : {
      "start" : 1649762496406,
      "stop" : 1649762496407,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "sol_client",
    "time" : {
      "start" : 1649762496407,
      "stop" : 1649762496407,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "jsonrpc_requester",
    "time" : {
      "start" : 1649762496407,
      "stop" : 1649762496407,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "operator",
    "time" : {
      "start" : 1649762496407,
      "stop" : 1649762496407,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_account",
    "time" : {
      "start" : 1649762638633,
      "stop" : 1649762639964,
      "duration" : 1331
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Create account for tests",
      "time" : {
        "start" : 1649762638633,
        "stop" : 1649762638637,
        "duration" : 4
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Request 1000 NEON from faucet for 0x8637a07eAe9291c4F1aa8933fDbf84c9F35aea36",
      "time" : {
        "start" : 1649762638637,
        "stop" : 1649762639392,
        "duration" : 755
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Operator initial balance: 990760584.0 NEON 4952.10771668 SOL",
      "time" : {
        "start" : 1649762639964,
        "stop" : 1649762639964,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 3,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "prepare_json_rpc_requester",
    "time" : {
      "start" : 1649762669053,
      "stop" : 1649762669053,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare",
    "time" : {
      "start" : 1649762669053,
      "stop" : 1649762669053,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_account",
    "time" : {
      "start" : 1649762669053,
      "stop" : 1649762669053,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "There are not enough Neons for gas fee",
    "status" : "failed",
    "statusMessage" : "AssertionError",
    "statusTrace" : "self = <integration.tests.basic.test_transfers.TestTransfer object at 0x7f74a9009b50>\n\n    def test_there_are_not_enough_neons_for_gas_fee(self):\n        \"\"\"There are not enough Neons for gas fee\"\"\"\n        sender_amount = 1\n        self.sender_account = self.create_account_with_balance(sender_amount)\n        self.recipient_account = self.web3_client.create_account()\n        amount = 0.9\n    \n>       self.process_transaction_with_failure(\n            self.sender_account,\n            self.recipient_account,\n            amount,\n            error_message=ErrorMessage.INSUFFICIENT_FUNDS.value)\n\nintegration/tests/basic/test_transfers.py:256: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <integration.tests.basic.test_transfers.TestTransfer object at 0x7f74a9009b50>\nsender_account = <eth_account.signers.local.LocalAccount object at 0x7f74a8e828e0>\nrecipient_account = <eth_account.signers.local.LocalAccount object at 0x7f74a8e82ee0>\namount = 0.9, gas = 0, gas_price = None\nerror_message = 'insufficient funds for transfer'\n\n    def process_transaction_with_failure(\n            self,\n            sender_account: Account,\n            recipient_account: Union[Account, AccountData],\n            amount: int,\n            gas: Optional[int] = 0,\n            gas_price: Optional[int] = None,\n            error_message: str = \"\") -> Union[web3.types.TxReceipt, None]:\n        '''Processes transaction, expects a failure'''\n    \n        tx: Union[web3.types.TxReceipt, None] = None\n        with allure.step(\n                f\"Sending {amount} from {sender_account.address} to {recipient_account.address}\"\n        ):\n            with pytest.raises(Exception) as error_info:\n                tx = self.web3_client.send_neon(sender_account,\n                                                recipient_account, amount, gas,\n                                                gas_price)\n    \n            if error_info != None:\n    \n                if error_message:\n>                   assert error_message in str(error_info)\nE                   AssertionError\n\nintegration/tests/basic/helpers/basic.py:109: AssertionError",
    "steps" : [ {
      "name" : "Sending 0.9 from 0x2b2D952972A4E23f27ea2DbE78e2cbE50b04bF93 to 0x400a329ab70d748E2997A7cC9b7EC469dF8E7734",
      "time" : {
        "start" : 1649762669691,
        "stop" : 1649762670481,
        "duration" : 790
      },
      "status" : "failed",
      "statusMessage" : "AssertionError\n",
      "statusTrace" : "  File \"/home/runner/work/neon-tests/neon-tests/integration/tests/basic/helpers/basic.py\", line 109, in process_transaction_with_failure\n    assert error_message in str(error_info)\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "prepare_account::0",
    "time" : {
      "start" : 1649762671829,
      "stop" : 1649762672457,
      "duration" : 628
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Operator end balance: 990760392.0 NEON 4952.0498372 SOL",
      "time" : {
        "start" : 1649762672328,
        "stop" : 1649762672328,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Account end balance: 1000 NEON",
      "time" : {
        "start" : 1649762672457,
        "stop" : 1649762672457,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "allure_environment::0",
    "time" : {
      "start" : 1649762672464,
      "stop" : 1649762672464,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "Basic: transfer tests"
  }, {
    "name" : "parentSuite",
    "value" : "integration.tests.basic"
  }, {
    "name" : "suite",
    "value" : "test_transfers"
  }, {
    "name" : "subSuite",
    "value" : "TestTransfer"
  }, {
    "name" : "host",
    "value" : "fv-az296-546"
  }, {
    "name" : "thread",
    "value" : "2212-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "integration.tests.basic.test_transfers"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 11,
        "broken" : 3,
        "skipped" : 0,
        "passed" : 11,
        "unknown" : 0,
        "total" : 25
      },
      "items" : [ {
        "uid" : "7360993b0e19f244",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25a/802//#testresult/7360993b0e19f244",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1649762019722,
          "stop" : 1649762020934,
          "duration" : 1212
        }
      }, {
        "uid" : "56b8b10f2477f4c6",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25a/800//#testresult/56b8b10f2477f4c6",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1649761199668,
          "stop" : 1649761201391,
          "duration" : 1723
        }
      }, {
        "uid" : "24b2d4e04cf814b",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25a/798//#testresult/24b2d4e04cf814b",
        "status" : "broken",
        "statusDetails" : "ValueError: {'code': -32000, 'message': 'The account balance is less than required: Account feab9d1f41da81375b2a76a673204093891a89c3; balance = 1000000000000000000; gasPrice = 494132472000; gasLimit = 1579040; fee = 780254938586880000; value = 900000000000000000; required_balance = 1680254938586880000; '}",
        "time" : {
          "start" : 1649760201231,
          "stop" : 1649760202434,
          "duration" : 1203
        }
      }, {
        "uid" : "a0f770f2657cb40d",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25a/796//#testresult/a0f770f2657cb40d",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1649759468983,
          "stop" : 1649759470448,
          "duration" : 1465
        }
      }, {
        "uid" : "d5de700a0bb0af82",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25a/794//#testresult/d5de700a0bb0af82",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1649757785388,
          "stop" : 1649757785516,
          "duration" : 128
        }
      }, {
        "uid" : "356feb1d6fd9037a",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25a/792//#testresult/356feb1d6fd9037a",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1649756886903,
          "stop" : 1649756887069,
          "duration" : 166
        }
      }, {
        "uid" : "d7aeaae5ac1adf11",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25a/790//#testresult/d7aeaae5ac1adf11",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1649755097405,
          "stop" : 1649755097571,
          "duration" : 166
        }
      }, {
        "uid" : "25bf522c01fde807",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25a/788//#testresult/25bf522c01fde807",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1649750914821,
          "stop" : 1649750914987,
          "duration" : 166
        }
      }, {
        "uid" : "180465f7daef5b1b",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25a/786//#testresult/180465f7daef5b1b",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1649710835326,
          "stop" : 1649710835425,
          "duration" : 99
        }
      }, {
        "uid" : "116a671e664ee81b",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25a/784//#testresult/116a671e664ee81b",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1649690548621,
          "stop" : 1649690548749,
          "duration" : 128
        }
      }, {
        "uid" : "47735f32c7e89598",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25a/782//#testresult/47735f32c7e89598",
        "status" : "broken",
        "statusDetails" : "TypeError: create_account() takes 1 positional argument but 2 were given",
        "time" : {
          "start" : 1649684838945,
          "stop" : 1649684838945,
          "duration" : 0
        }
      }, {
        "uid" : "614714bad2c5409a",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25a/780//#testresult/614714bad2c5409a",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1649682947627,
          "stop" : 1649682948421,
          "duration" : 794
        }
      }, {
        "uid" : "fd937d159538dbbf",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25a/778//#testresult/fd937d159538dbbf",
        "status" : "broken",
        "statusDetails" : "TypeError: create_account_with_balance() got an unexpected keyword argument 'is_sender'",
        "time" : {
          "start" : 1649681784924,
          "stop" : 1649681784924,
          "duration" : 0
        }
      }, {
        "uid" : "3dc8f37fb3af3a",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25a/776//#testresult/3dc8f37fb3af3a",
        "status" : "passed",
        "time" : {
          "start" : 1649424584147,
          "stop" : 1649424584147,
          "duration" : 0
        }
      }, {
        "uid" : "91dfa14bc73986a6",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25a/774//#testresult/91dfa14bc73986a6",
        "status" : "passed",
        "time" : {
          "start" : 1649418855746,
          "stop" : 1649418855746,
          "duration" : 0
        }
      }, {
        "uid" : "594f26077e6dcf18",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25a/770//#testresult/594f26077e6dcf18",
        "status" : "passed",
        "time" : {
          "start" : 1649417539992,
          "stop" : 1649417539992,
          "duration" : 0
        }
      }, {
        "uid" : "74698c86b946feef",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25a/768//#testresult/74698c86b946feef",
        "status" : "passed",
        "time" : {
          "start" : 1649416794827,
          "stop" : 1649416794828,
          "duration" : 1
        }
      }, {
        "uid" : "3c17883aecd07021",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25a/766//#testresult/3c17883aecd07021",
        "status" : "passed",
        "time" : {
          "start" : 1649415587682,
          "stop" : 1649415587682,
          "duration" : 0
        }
      }, {
        "uid" : "8b8fc79ea1ca99c9",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25a/764//#testresult/8b8fc79ea1ca99c9",
        "status" : "passed",
        "time" : {
          "start" : 1649415357284,
          "stop" : 1649415357284,
          "duration" : 0
        }
      }, {
        "uid" : "78b55aacfea3304b",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25a/762//#testresult/78b55aacfea3304b",
        "status" : "passed",
        "time" : {
          "start" : 1649415101051,
          "stop" : 1649415101051,
          "duration" : 0
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "f9980c61cf8ecd47.json",
  "parameterValues" : [ ]
}