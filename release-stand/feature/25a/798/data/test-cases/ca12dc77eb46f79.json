{
  "uid" : "ca12dc77eb46f79",
  "name" : "test_send_more_than_exist_on_account_neon[10000.1]",
  "fullName" : "integration.tests.basic.test_transfers.TestTransfer#test_send_more_than_exist_on_account_neon",
  "historyId" : "846952fe5ae186a491ca35d8b8adc7c4",
  "time" : {
    "start" : 1649760184591,
    "stop" : 1649760185082,
    "duration" : 491
  },
  "description" : "Send more than exist on account: neon",
  "descriptionHtml" : "<p>Send more than exist on account: neon</p>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError",
  "statusTrace" : "self = <integration.tests.basic.test_transfers.TestTransfer object at 0x7f6428ff7310>\namount = 10000.1, prepare_accounts = None\n\n    @pytest.mark.parametrize(\"amount\", WRONG_TRANSFER_AMOUNT_DATA)\n    def test_send_more_than_exist_on_account_neon(self, amount: Union[int,\n                                                                      float],\n                                                  prepare_accounts):\n        \"\"\"Send more than exist on account: neon\"\"\"\n    \n>       self.check_value_error_if_less_than_required(self.sender_account,\n                                                     self.recipient_account,\n                                                     amount)\n\nintegration/tests/basic/test_transfers.py:51: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nintegration/tests/basic/helpers/basic.py:128: in check_value_error_if_less_than_required\n    return self.process_transaction_with_failure(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <integration.tests.basic.test_transfers.TestTransfer object at 0x7f6428ff7310>\nsender_account = <eth_account.signers.local.LocalAccount object at 0x7f6428fcadf0>\nrecipient_account = <eth_account.signers.local.LocalAccount object at 0x7f6428fcaa90>\namount = 10000.1, gas = 0, gas_price = None\nerror_message = 'insufficient funds for transfer'\n\n    def process_transaction_with_failure(\n            self,\n            sender_account: Account,\n            recipient_account: Union[Account, AccountData],\n            amount: int,\n            gas: Optional[int] = 0,\n            gas_price: Optional[int] = None,\n            error_message: str = \"\") -> Union[web3.types.TxReceipt, None]:\n        '''Processes transaction, expects a failure'''\n    \n        tx: Union[web3.types.TxReceipt, None] = None\n        with allure.step(\n                f\"Sending {amount} from {sender_account.address} to {recipient_account.address}\"\n        ):\n            with pytest.raises(Exception) as error_info:\n                tx = self.web3_client.send_neon(sender_account,\n                                                recipient_account, amount, gas,\n                                                gas_price)\n    \n                #\n                print(\"111111\")\n                print(error_info)\n                #\n    \n            if error_info != None:\n    \n                #\n                print(\"!!!!!!!!!!!!!!!!!!!!!!!\")\n                print(error_info)\n                #\n    \n                if error_message:\n>                   assert error_message in str(error_info)\nE                   AssertionError\n\nintegration/tests/basic/helpers/basic.py:119: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "pytestconfig",
    "time" : {
      "start" : 1649760043972,
      "stop" : 1649760043973,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "web3_client",
    "time" : {
      "start" : 1649760043973,
      "stop" : 1649760043974,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "allure_environment",
    "time" : {
      "start" : 1649760043974,
      "stop" : 1649760044552,
      "duration" : 578
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "jsonrpc_requester",
    "time" : {
      "start" : 1649760044552,
      "stop" : 1649760044553,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "faucet",
    "time" : {
      "start" : 1649760044552,
      "stop" : 1649760044552,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "sol_client",
    "time" : {
      "start" : 1649760044553,
      "stop" : 1649760044553,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "operator",
    "time" : {
      "start" : 1649760044553,
      "stop" : 1649760044553,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_account",
    "time" : {
      "start" : 1649760174980,
      "stop" : 1649760176047,
      "duration" : 1067
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Create account for tests",
      "time" : {
        "start" : 1649760174980,
        "stop" : 1649760174984,
        "duration" : 4
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Request 1000 NEON from faucet for 0xCF57e0085ADcB081FfE009c71dce46e27a2D4B8a",
      "time" : {
        "start" : 1649760174984,
        "stop" : 1649760175678,
        "duration" : 694
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Operator initial balance: 992648943.0 NEON 4953.35050444 SOL",
      "time" : {
        "start" : 1649760176047,
        "stop" : 1649760176047,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 3,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "prepare_account",
    "time" : {
      "start" : 1649760183373,
      "stop" : 1649760183373,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare",
    "time" : {
      "start" : 1649760183373,
      "stop" : 1649760183373,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_accounts",
    "time" : {
      "start" : 1649760183373,
      "stop" : 1649760184590,
      "duration" : 1217
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_json_rpc_requester",
    "time" : {
      "start" : 1649760183373,
      "stop" : 1649760183373,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "Send more than exist on account: neon",
    "status" : "failed",
    "statusMessage" : "AssertionError",
    "statusTrace" : "self = <integration.tests.basic.test_transfers.TestTransfer object at 0x7f6428ff7310>\namount = 10000.1, prepare_accounts = None\n\n    @pytest.mark.parametrize(\"amount\", WRONG_TRANSFER_AMOUNT_DATA)\n    def test_send_more_than_exist_on_account_neon(self, amount: Union[int,\n                                                                      float],\n                                                  prepare_accounts):\n        \"\"\"Send more than exist on account: neon\"\"\"\n    \n>       self.check_value_error_if_less_than_required(self.sender_account,\n                                                     self.recipient_account,\n                                                     amount)\n\nintegration/tests/basic/test_transfers.py:51: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nintegration/tests/basic/helpers/basic.py:128: in check_value_error_if_less_than_required\n    return self.process_transaction_with_failure(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <integration.tests.basic.test_transfers.TestTransfer object at 0x7f6428ff7310>\nsender_account = <eth_account.signers.local.LocalAccount object at 0x7f6428fcadf0>\nrecipient_account = <eth_account.signers.local.LocalAccount object at 0x7f6428fcaa90>\namount = 10000.1, gas = 0, gas_price = None\nerror_message = 'insufficient funds for transfer'\n\n    def process_transaction_with_failure(\n            self,\n            sender_account: Account,\n            recipient_account: Union[Account, AccountData],\n            amount: int,\n            gas: Optional[int] = 0,\n            gas_price: Optional[int] = None,\n            error_message: str = \"\") -> Union[web3.types.TxReceipt, None]:\n        '''Processes transaction, expects a failure'''\n    \n        tx: Union[web3.types.TxReceipt, None] = None\n        with allure.step(\n                f\"Sending {amount} from {sender_account.address} to {recipient_account.address}\"\n        ):\n            with pytest.raises(Exception) as error_info:\n                tx = self.web3_client.send_neon(sender_account,\n                                                recipient_account, amount, gas,\n                                                gas_price)\n    \n                #\n                print(\"111111\")\n                print(error_info)\n                #\n    \n            if error_info != None:\n    \n                #\n                print(\"!!!!!!!!!!!!!!!!!!!!!!!\")\n                print(error_info)\n                #\n    \n                if error_message:\n>                   assert error_message in str(error_info)\nE                   AssertionError\n\nintegration/tests/basic/helpers/basic.py:119: AssertionError",
    "steps" : [ {
      "name" : "Sending 10000.1 from 0xE61E454d9ab7dD072aD0d51D90dba4D118Ea03B4 to 0x3d6dB835EeBa123787B930b25A359872661c1272",
      "time" : {
        "start" : 1649760184591,
        "stop" : 1649760185081,
        "duration" : 490
      },
      "status" : "failed",
      "statusMessage" : "AssertionError\n",
      "statusTrace" : "  File \"/home/runner/work/neon-tests/neon-tests/integration/tests/basic/helpers/basic.py\", line 119, in process_transaction_with_failure\n    assert error_message in str(error_info)\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "4e32dfb8e5337230",
      "name" : "stdout",
      "source" : "4e32dfb8e5337230.txt",
      "type" : "text/plain",
      "size" : 133
    } ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "prepare_accounts::0",
    "time" : {
      "start" : 1649760185093,
      "stop" : 1649760185094,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_account::0",
    "time" : {
      "start" : 1649760203603,
      "stop" : 1649760204069,
      "duration" : 466
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Operator end balance: 992648795.0 NEON 4953.29889112 SOL",
      "time" : {
        "start" : 1649760203971,
        "stop" : 1649760203971,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Account end balance: 1000 NEON",
      "time" : {
        "start" : 1649760204069,
        "stop" : 1649760204069,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "allure_environment::0",
    "time" : {
      "start" : 1649760204075,
      "stop" : 1649760204076,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "Basic: transfer tests"
  }, {
    "name" : "parentSuite",
    "value" : "integration.tests.basic"
  }, {
    "name" : "suite",
    "value" : "test_transfers"
  }, {
    "name" : "subSuite",
    "value" : "TestTransfer"
  }, {
    "name" : "host",
    "value" : "fv-az182-776"
  }, {
    "name" : "thread",
    "value" : "1927-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "integration.tests.basic.test_transfers"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "amount",
    "value" : "10000.1"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 16,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 10,
        "unknown" : 0,
        "total" : 27
      },
      "items" : [ {
        "uid" : "cc77630cb27cd9c9",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25a/796//#testresult/cc77630cb27cd9c9",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1649759450063,
          "stop" : 1649759450716,
          "duration" : 653
        }
      }, {
        "uid" : "2eb29734d9f0bc57",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25a/794//#testresult/2eb29734d9f0bc57",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1649757766938,
          "stop" : 1649757767589,
          "duration" : 651
        }
      }, {
        "uid" : "feb39382b18ac5a5",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25a/792//#testresult/feb39382b18ac5a5",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1649756865678,
          "stop" : 1649756866512,
          "duration" : 834
        }
      }, {
        "uid" : "84ead591a19d81bb",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25a/790//#testresult/84ead591a19d81bb",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1649755076355,
          "stop" : 1649755077198,
          "duration" : 843
        }
      }, {
        "uid" : "87fa1fc7fe149e6a",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25a/788//#testresult/87fa1fc7fe149e6a",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1649750896280,
          "stop" : 1649750897124,
          "duration" : 844
        }
      }, {
        "uid" : "68b2bdfcc172419f",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25a/786//#testresult/68b2bdfcc172419f",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1649710819621,
          "stop" : 1649710820112,
          "duration" : 491
        }
      }, {
        "uid" : "3e40494daf3243b3",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25a/784//#testresult/3e40494daf3243b3",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1649690531260,
          "stop" : 1649690531911,
          "duration" : 651
        }
      }, {
        "uid" : "d49badf214ce513c",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25a/782//#testresult/d49badf214ce513c",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1649684827027,
          "stop" : 1649684827517,
          "duration" : 490
        }
      }, {
        "uid" : "b2835630001ed544",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25a/780//#testresult/b2835630001ed544",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1649682934397,
          "stop" : 1649682935029,
          "duration" : 632
        }
      }, {
        "uid" : "e2069d6b264dbbe2",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25a/778//#testresult/e2069d6b264dbbe2",
        "status" : "broken",
        "statusDetails" : "TypeError: create_account_with_balance() got an unexpected keyword argument 'is_sender'",
        "time" : {
          "start" : 1649681778163,
          "stop" : 1649681778163,
          "duration" : 0
        }
      }, {
        "uid" : "efca674e9e0e388d",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25a/776//#testresult/efca674e9e0e388d",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1649424569931,
          "stop" : 1649424570581,
          "duration" : 650
        }
      }, {
        "uid" : "b1752692c0cf3b69",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25a/774//#testresult/b1752692c0cf3b69",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1649418840164,
          "stop" : 1649418841031,
          "duration" : 867
        }
      }, {
        "uid" : "c35a29b681545dbc",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25a/770//#testresult/c35a29b681545dbc",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1649417524227,
          "stop" : 1649417525071,
          "duration" : 844
        }
      }, {
        "uid" : "60d19e06f5e6d5e9",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25a/768//#testresult/60d19e06f5e6d5e9",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1649416783984,
          "stop" : 1649416784833,
          "duration" : 849
        }
      }, {
        "uid" : "60911fb1e14fc2ba",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25a/766//#testresult/60911fb1e14fc2ba",
        "status" : "passed",
        "time" : {
          "start" : 1649415577543,
          "stop" : 1649415578205,
          "duration" : 662
        }
      }, {
        "uid" : "7913a192028e63d9",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25a/764//#testresult/7913a192028e63d9",
        "status" : "passed",
        "time" : {
          "start" : 1649415347013,
          "stop" : 1649415347676,
          "duration" : 663
        }
      }, {
        "uid" : "bde5158ffb528ad7",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25a/762//#testresult/bde5158ffb528ad7",
        "status" : "passed",
        "time" : {
          "start" : 1649415090697,
          "stop" : 1649415091367,
          "duration" : 670
        }
      }, {
        "uid" : "4629d6534eb00960",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25a/760//#testresult/4629d6534eb00960",
        "status" : "passed",
        "time" : {
          "start" : 1649413808284,
          "stop" : 1649413808679,
          "duration" : 395
        }
      }, {
        "uid" : "6ed33a10d6588eeb",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25a/758//#testresult/6ed33a10d6588eeb",
        "status" : "passed",
        "time" : {
          "start" : 1649413429426,
          "stop" : 1649413430092,
          "duration" : 666
        }
      }, {
        "uid" : "f284f91d665bff13",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25a/756//#testresult/f284f91d665bff13",
        "status" : "passed",
        "time" : {
          "start" : 1649413027199,
          "stop" : 1649413027868,
          "duration" : 669
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "ca12dc77eb46f79.json",
  "parameterValues" : [ "10000.1" ]
}