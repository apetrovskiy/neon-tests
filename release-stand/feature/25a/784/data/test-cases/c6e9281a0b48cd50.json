{
  "uid" : "c6e9281a0b48cd50",
  "name" : "test_too_high_gas_limit_greater_than_u64_max",
  "fullName" : "integration.tests.basic.test_transfers.TestTransfer#test_too_high_gas_limit_greater_than_u64_max",
  "historyId" : "7def8987f5c280fbcaf1cb39cc980390",
  "time" : {
    "start" : 1649690541783,
    "stop" : 1649690542178,
    "duration" : 395
  },
  "description" : "Too high gas_limit > u64::max",
  "descriptionHtml" : "<p>Too high gas_limit &gt; u64::max</p>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError",
  "statusTrace" : "self = <integration.tests.basic.test_transfers.TestTransfer object at 0x7f5548740f10>\nprepare_accounts = None\n\n    def test_too_high_gas_limit_greater_than_u64_max(self, prepare_accounts):\n        \"\"\"Too high gas_limit > u64::max\"\"\"\n        amount = InputData.DEFAULT_TRANSFER_AMOUNT.value\n    \n>       self.process_transaction_with_failure(\n            self.sender_account,\n            self.recipient_account,\n            amount,\n            gas=U64_MAX + 1,\n            error_message=ErrorMessage.INSUFFICIENT_FUNDS.value)\n\nintegration/tests/basic/test_transfers.py:187: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <integration.tests.basic.test_transfers.TestTransfer object at 0x7f5548740f10>\nsender_account = <eth_account.signers.local.LocalAccount object at 0x7f5548549dc0>\nrecipient_account = <eth_account.signers.local.LocalAccount object at 0x7f55486a5dc0>\namount = 0.01, gas = 18446744073709551616, gas_price = None\nerror_message = 'insufficient funds for transfer'\n\n    def process_transaction_with_failure(\n            self,\n            sender_account: Account,\n            recipient_account: Union[Account, AccountData],\n            amount: int,\n            gas: Optional[int] = 0,\n            gas_price: Optional[int] = None,\n            error_message: str = \"\") -> Union[web3.types.TxReceipt, None]:\n        '''Processes transaction, expects a failure'''\n    \n        tx: Union[web3.types.TxReceipt, None] = None\n        with allure.step(\n                f\"Sending {amount} from {sender_account.address} to {recipient_account.address}\"\n        ):\n            with pytest.raises(Exception) as error_info:\n                tx = self.web3_client.send_neon(sender_account,\n                                                recipient_account, amount, gas,\n                                                gas_price)\n    \n            if error_info != None:\n    \n                #\n                print(\"!!!!!!!!!!!!!!!!!!!!!!!\")\n                print(error_info)\n                #\n    \n                if error_message:\n>                   assert error_message in str(error_info)\nE                   AssertionError\n\nintegration/tests/basic/helpers/basic.py:114: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "pytestconfig",
    "time" : {
      "start" : 1649690374481,
      "stop" : 1649690374481,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "web3_client",
    "time" : {
      "start" : 1649690374481,
      "stop" : 1649690374482,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "allure_environment",
    "time" : {
      "start" : 1649690374482,
      "stop" : 1649690375458,
      "duration" : 976
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "jsonrpc_requester",
    "time" : {
      "start" : 1649690375459,
      "stop" : 1649690375459,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "faucet",
    "time" : {
      "start" : 1649690375459,
      "stop" : 1649690375459,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "operator",
    "time" : {
      "start" : 1649690375459,
      "stop" : 1649690375459,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "sol_client",
    "time" : {
      "start" : 1649690375459,
      "stop" : 1649690375459,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_account",
    "time" : {
      "start" : 1649690519519,
      "stop" : 1649690520779,
      "duration" : 1260
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Create account for tests",
      "time" : {
        "start" : 1649690519519,
        "stop" : 1649690519524,
        "duration" : 5
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Request 1000 NEON from faucet for 0x56d9D4906923958cEd1B7466BA1C97aD5b8E14D7",
      "time" : {
        "start" : 1649690519524,
        "stop" : 1649690520280,
        "duration" : 756
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Operator initial balance: 997205859.0 NEON 4963.01019336 SOL",
      "time" : {
        "start" : 1649690520779,
        "stop" : 1649690520779,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 3,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "prepare_accounts",
    "time" : {
      "start" : 1649690540523,
      "stop" : 1649690541783,
      "duration" : 1260
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare",
    "time" : {
      "start" : 1649690540523,
      "stop" : 1649690540523,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_account",
    "time" : {
      "start" : 1649690540523,
      "stop" : 1649690540523,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_json_rpc_requester",
    "time" : {
      "start" : 1649690540523,
      "stop" : 1649690540523,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "Too high gas_limit > u64::max",
    "status" : "failed",
    "statusMessage" : "AssertionError",
    "statusTrace" : "self = <integration.tests.basic.test_transfers.TestTransfer object at 0x7f5548740f10>\nprepare_accounts = None\n\n    def test_too_high_gas_limit_greater_than_u64_max(self, prepare_accounts):\n        \"\"\"Too high gas_limit > u64::max\"\"\"\n        amount = InputData.DEFAULT_TRANSFER_AMOUNT.value\n    \n>       self.process_transaction_with_failure(\n            self.sender_account,\n            self.recipient_account,\n            amount,\n            gas=U64_MAX + 1,\n            error_message=ErrorMessage.INSUFFICIENT_FUNDS.value)\n\nintegration/tests/basic/test_transfers.py:187: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <integration.tests.basic.test_transfers.TestTransfer object at 0x7f5548740f10>\nsender_account = <eth_account.signers.local.LocalAccount object at 0x7f5548549dc0>\nrecipient_account = <eth_account.signers.local.LocalAccount object at 0x7f55486a5dc0>\namount = 0.01, gas = 18446744073709551616, gas_price = None\nerror_message = 'insufficient funds for transfer'\n\n    def process_transaction_with_failure(\n            self,\n            sender_account: Account,\n            recipient_account: Union[Account, AccountData],\n            amount: int,\n            gas: Optional[int] = 0,\n            gas_price: Optional[int] = None,\n            error_message: str = \"\") -> Union[web3.types.TxReceipt, None]:\n        '''Processes transaction, expects a failure'''\n    \n        tx: Union[web3.types.TxReceipt, None] = None\n        with allure.step(\n                f\"Sending {amount} from {sender_account.address} to {recipient_account.address}\"\n        ):\n            with pytest.raises(Exception) as error_info:\n                tx = self.web3_client.send_neon(sender_account,\n                                                recipient_account, amount, gas,\n                                                gas_price)\n    \n            if error_info != None:\n    \n                #\n                print(\"!!!!!!!!!!!!!!!!!!!!!!!\")\n                print(error_info)\n                #\n    \n                if error_message:\n>                   assert error_message in str(error_info)\nE                   AssertionError\n\nintegration/tests/basic/helpers/basic.py:114: AssertionError",
    "steps" : [ {
      "name" : "Sending 0.01 from 0xA9eaa7d241C6E2A65A1b4a78f3d3964891126adc to 0x5CCC5744d69f58C61E9EdB9AAd80e28dEE4037bA",
      "time" : {
        "start" : 1649690541783,
        "stop" : 1649690542178,
        "duration" : 395
      },
      "status" : "failed",
      "statusMessage" : "AssertionError\n",
      "statusTrace" : "  File \"/home/runner/work/neon-tests/neon-tests/integration/tests/basic/helpers/basic.py\", line 114, in process_transaction_with_failure\n    assert error_message in str(error_info)\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "9b1d1a7191854b10",
      "name" : "stdout",
      "source" : "9b1d1a7191854b10.txt",
      "type" : "text/plain",
      "size" : 289
    } ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "prepare_accounts::0",
    "time" : {
      "start" : 1649690542186,
      "stop" : 1649690542186,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_account::0",
    "time" : {
      "start" : 1649690550057,
      "stop" : 1649690550690,
      "duration" : 633
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Operator end balance: 997205718.0 NEON 4962.9648362 SOL",
      "time" : {
        "start" : 1649690550560,
        "stop" : 1649690550560,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Account end balance: 1000 NEON",
      "time" : {
        "start" : 1649690550690,
        "stop" : 1649690550690,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "allure_environment::0",
    "time" : {
      "start" : 1649690550696,
      "stop" : 1649690550697,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "Basic: transfer tests"
  }, {
    "name" : "parentSuite",
    "value" : "integration.tests.basic"
  }, {
    "name" : "suite",
    "value" : "test_transfers"
  }, {
    "name" : "subSuite",
    "value" : "TestTransfer"
  }, {
    "name" : "host",
    "value" : "fv-az173-572"
  }, {
    "name" : "thread",
    "value" : "1788-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "integration.tests.basic.test_transfers"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 5,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 9,
        "unknown" : 0,
        "total" : 15
      },
      "items" : [ {
        "uid" : "25a7648860d9601c",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25a/782//#testresult/25a7648860d9601c",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1649684836822,
          "stop" : 1649684837117,
          "duration" : 295
        }
      }, {
        "uid" : "743e7d698036f06d",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25a/780//#testresult/743e7d698036f06d",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1649682943907,
          "stop" : 1649682944298,
          "duration" : 391
        }
      }, {
        "uid" : "e1b6f60acc0a9f44",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25a/778//#testresult/e1b6f60acc0a9f44",
        "status" : "broken",
        "statusDetails" : "TypeError: create_account_with_balance() got an unexpected keyword argument 'is_sender'",
        "time" : {
          "start" : 1649681783566,
          "stop" : 1649681783566,
          "duration" : 0
        }
      }, {
        "uid" : "459a4852bd3f4b09",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25a/776//#testresult/459a4852bd3f4b09",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1649424580425,
          "stop" : 1649424580818,
          "duration" : 393
        }
      }, {
        "uid" : "757f7ae9ba2ff739",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25a/774//#testresult/757f7ae9ba2ff739",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1649418851498,
          "stop" : 1649418852004,
          "duration" : 506
        }
      }, {
        "uid" : "a2babaf39d31e447",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25a/770//#testresult/a2babaf39d31e447",
        "status" : "passed",
        "time" : {
          "start" : 1649417535104,
          "stop" : 1649417535940,
          "duration" : 836
        }
      }, {
        "uid" : "13fa51f73d1a78f2",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25a/768//#testresult/13fa51f73d1a78f2",
        "status" : "passed",
        "time" : {
          "start" : 1649416794820,
          "stop" : 1649416794820,
          "duration" : 0
        }
      }, {
        "uid" : "e2f397b6ee879e9e",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25a/766//#testresult/e2f397b6ee879e9e",
        "status" : "passed",
        "time" : {
          "start" : 1649415587676,
          "stop" : 1649415587676,
          "duration" : 0
        }
      }, {
        "uid" : "3394600d6ade2384",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25a/764//#testresult/3394600d6ade2384",
        "status" : "passed",
        "time" : {
          "start" : 1649415357278,
          "stop" : 1649415357278,
          "duration" : 0
        }
      }, {
        "uid" : "87bf62aada1386a0",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25a/762//#testresult/87bf62aada1386a0",
        "status" : "passed",
        "time" : {
          "start" : 1649415101041,
          "stop" : 1649415101042,
          "duration" : 1
        }
      }, {
        "uid" : "507f34d22becca3a",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25a/760//#testresult/507f34d22becca3a",
        "status" : "passed",
        "time" : {
          "start" : 1649413816233,
          "stop" : 1649413816234,
          "duration" : 1
        }
      }, {
        "uid" : "44293dcc6603eeee",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25a/758//#testresult/44293dcc6603eeee",
        "status" : "passed",
        "time" : {
          "start" : 1649413438274,
          "stop" : 1649413438274,
          "duration" : 0
        }
      }, {
        "uid" : "7cef577c014095",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25a/756//#testresult/7cef577c014095",
        "status" : "passed",
        "time" : {
          "start" : 1649413036283,
          "stop" : 1649413036284,
          "duration" : 1
        }
      }, {
        "uid" : "3b69efcb8bdafb0",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25a/754//#testresult/3b69efcb8bdafb0",
        "status" : "passed",
        "time" : {
          "start" : 1649411586379,
          "stop" : 1649411586380,
          "duration" : 1
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "c6e9281a0b48cd50.json",
  "parameterValues" : [ ]
}