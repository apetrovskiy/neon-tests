{
  "uid" : "24655cb340e4cfd0",
  "name" : "test_rpc_call_eth_getLogs_via_tags[latest-latest]",
  "fullName" : "integration.tests.basic.test_rpc_calls.TestRpcCalls#test_rpc_call_eth_getLogs_via_tags",
  "historyId" : "479392f79d4b9e6fead050ce54a4a0dc",
  "time" : {
    "start" : 1649414931428,
    "stop" : 1649414932265,
    "duration" : 837
  },
  "description" : "Verify implemented rpc calls work eth_getLogs",
  "descriptionHtml" : "<p>Verify implemented rpc calls work eth_getLogs</p>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: <AssertMessage.CONTAINS_ERROR: 'Contains the error data'>\nassert False\n +  where False = <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7fcdbea7a130>>(JsonRpcErrorResponse(id=55, error={'code': -32000, 'message': 'connection already closed'}, jsonrpc='2.0'))\n +    where <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7fcdbea7a130>> = <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7fcdbea7a130>.assert_no_error_object",
  "statusTrace" : "self = <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7fcdbea7a130>\nfrom_block = 'latest', to_block = 'latest'\n\n    @pytest.mark.parametrize(\"from_block,to_block\", GET_LOGS_TEST_DATA)\n    def test_rpc_call_eth_getLogs_via_tags(self, from_block: Tag,\n                                           to_block: Tag):\n        \"\"\"Verify implemented rpc calls work eth_getLogs\"\"\"\n        # TODO: use contract instead of account\n        sender_account = self.create_account_with_balance()\n        params = [\n            GetLogsRequest(from_block=from_block,\n                           to_block=to_block,\n                           address=sender_account.address)\n        ]\n        model = RpcRequestFactory.get_logs(params=params)\n    \n        response = self.jsonrpc_requester.request_json_rpc(model)\n        actual_result = self.jsonrpc_requester.deserialize_response(response)\n    \n        assert actual_result.id == model.id, AssertMessage.WRONG_ID.value\n>       assert self.assert_no_error_object(\n            actual_result), AssertMessage.CONTAINS_ERROR\nE       AssertionError: <AssertMessage.CONTAINS_ERROR: 'Contains the error data'>\nE       assert False\nE        +  where False = <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7fcdbea7a130>>(JsonRpcErrorResponse(id=55, error={'code': -32000, 'message': 'connection already closed'}, jsonrpc='2.0'))\nE        +    where <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7fcdbea7a130>> = <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7fcdbea7a130>.assert_no_error_object\n\nintegration/tests/basic/test_rpc_calls.py:108: AssertionError",
  "flaky" : true,
  "newFailed" : true,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "web3_client",
    "time" : {
      "start" : 1649414915194,
      "stop" : 1649414915196,
      "duration" : 2
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "pytestconfig",
    "time" : {
      "start" : 1649414915194,
      "stop" : 1649414915194,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "allure_environment",
    "time" : {
      "start" : 1649414915196,
      "stop" : 1649414916180,
      "duration" : 984
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "jsonrpc_requester",
    "time" : {
      "start" : 1649414916180,
      "stop" : 1649414916180,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "faucet",
    "time" : {
      "start" : 1649414916180,
      "stop" : 1649414916180,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "sol_client",
    "time" : {
      "start" : 1649414916181,
      "stop" : 1649414916181,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "operator",
    "time" : {
      "start" : 1649414916181,
      "stop" : 1649414916181,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_account",
    "time" : {
      "start" : 1649414925787,
      "stop" : 1649414927286,
      "duration" : 1499
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Create account for tests",
      "time" : {
        "start" : 1649414925787,
        "stop" : 1649414925792,
        "duration" : 5
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Request 1000 NEON from faucet for 0x558DfCAF11ae740DAD3b2dF6aa7ab500Fb156173",
      "time" : {
        "start" : 1649414925792,
        "stop" : 1649414926629,
        "duration" : 837
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Operator initial balance: 973542710.0 NEON 4766.248459675 SOL",
      "time" : {
        "start" : 1649414927286,
        "stop" : 1649414927286,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 3,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "prepare",
    "time" : {
      "start" : 1649414931426,
      "stop" : 1649414931426,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_account",
    "time" : {
      "start" : 1649414931427,
      "stop" : 1649414931427,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_json_rpc_requester",
    "time" : {
      "start" : 1649414931427,
      "stop" : 1649414931427,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "Verify implemented rpc calls work eth_getLogs",
    "status" : "failed",
    "statusMessage" : "AssertionError: <AssertMessage.CONTAINS_ERROR: 'Contains the error data'>\nassert False\n +  where False = <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7fcdbea7a130>>(JsonRpcErrorResponse(id=55, error={'code': -32000, 'message': 'connection already closed'}, jsonrpc='2.0'))\n +    where <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7fcdbea7a130>> = <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7fcdbea7a130>.assert_no_error_object",
    "statusTrace" : "self = <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7fcdbea7a130>\nfrom_block = 'latest', to_block = 'latest'\n\n    @pytest.mark.parametrize(\"from_block,to_block\", GET_LOGS_TEST_DATA)\n    def test_rpc_call_eth_getLogs_via_tags(self, from_block: Tag,\n                                           to_block: Tag):\n        \"\"\"Verify implemented rpc calls work eth_getLogs\"\"\"\n        # TODO: use contract instead of account\n        sender_account = self.create_account_with_balance()\n        params = [\n            GetLogsRequest(from_block=from_block,\n                           to_block=to_block,\n                           address=sender_account.address)\n        ]\n        model = RpcRequestFactory.get_logs(params=params)\n    \n        response = self.jsonrpc_requester.request_json_rpc(model)\n        actual_result = self.jsonrpc_requester.deserialize_response(response)\n    \n        assert actual_result.id == model.id, AssertMessage.WRONG_ID.value\n>       assert self.assert_no_error_object(\n            actual_result), AssertMessage.CONTAINS_ERROR\nE       AssertionError: <AssertMessage.CONTAINS_ERROR: 'Contains the error data'>\nE       assert False\nE        +  where False = <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7fcdbea7a130>>(JsonRpcErrorResponse(id=55, error={'code': -32000, 'message': 'connection already closed'}, jsonrpc='2.0'))\nE        +    where <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7fcdbea7a130>> = <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7fcdbea7a130>.assert_no_error_object\n\nintegration/tests/basic/test_rpc_calls.py:108: AssertionError",
    "steps" : [ {
      "name" : "Request: JsonRpcRequest(id=55, method='eth_getLogs', params=[GetLogsRequest(from_block='latest', to_block='latest', address='0x2678761e1896ea5fa7De4844be8e7e22A042D4c7', topics=None, blockhash=None)], jsonrpc='2.0')",
      "time" : {
        "start" : 1649414932099,
        "stop" : 1649414932264,
        "duration" : 165
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Response: {'jsonrpc': '2.0', 'id': 55, 'error': {'code': -32000, 'message': 'connection already closed'}}",
      "time" : {
        "start" : 1649414932264,
        "stop" : 1649414932264,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "prepare_account::0",
    "time" : {
      "start" : 1649414938588,
      "stop" : 1649414939408,
      "duration" : 820
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Operator end balance: 973542650.0 NEON 4766.229691195 SOL",
      "time" : {
        "start" : 1649414939238,
        "stop" : 1649414939238,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Account end balance: 1000 NEON",
      "time" : {
        "start" : 1649414939408,
        "stop" : 1649414939408,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "allure_environment::0",
    "time" : {
      "start" : 1649415101881,
      "stop" : 1649415101882,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "Basic: Json-RPC call tests"
  }, {
    "name" : "parentSuite",
    "value" : "integration.tests.basic"
  }, {
    "name" : "suite",
    "value" : "test_rpc_calls"
  }, {
    "name" : "subSuite",
    "value" : "TestRpcCalls"
  }, {
    "name" : "host",
    "value" : "fv-az445-618"
  }, {
    "name" : "thread",
    "value" : "1817-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "integration.tests.basic.test_rpc_calls"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "from_block",
    "value" : "'latest'"
  }, {
    "name" : "to_block",
    "value" : "'latest'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 2,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 8,
        "unknown" : 0,
        "total" : 10
      },
      "items" : [ {
        "uid" : "1944eb7f54dfc660",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25a/760//#testresult/1944eb7f54dfc660",
        "status" : "passed",
        "time" : {
          "start" : 1649413680812,
          "stop" : 1649413681511,
          "duration" : 699
        }
      }, {
        "uid" : "62e9679938d2191d",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25a/758//#testresult/62e9679938d2191d",
        "status" : "failed",
        "statusDetails" : "AssertionError: <AssertMessage.CONTAINS_ERROR: 'Contains the error data'>\nassert False\n +  where False = <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7fc1e1a4c550>>(JsonRpcErrorResponse(id=33, error={'code': -32000, 'message': 'connection already closed'}, jsonrpc='2.0'))\n +    where <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7fc1e1a4c550>> = <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7fc1e1a4c550>.assert_no_error_object",
        "time" : {
          "start" : 1649413279916,
          "stop" : 1649413280752,
          "duration" : 836
        }
      }, {
        "uid" : "dfa2c149fdd466d7",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25a/756//#testresult/dfa2c149fdd466d7",
        "status" : "passed",
        "time" : {
          "start" : 1649412875254,
          "stop" : 1649412876088,
          "duration" : 834
        }
      }, {
        "uid" : "e89c4c19824b2d13",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25a/754//#testresult/e89c4c19824b2d13",
        "status" : "passed",
        "time" : {
          "start" : 1649411419537,
          "stop" : 1649411420371,
          "duration" : 834
        }
      }, {
        "uid" : "ad3557d14fc314bd",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25a/752//#testresult/ad3557d14fc314bd",
        "status" : "passed",
        "time" : {
          "start" : 1649408564070,
          "stop" : 1649408564829,
          "duration" : 759
        }
      }, {
        "uid" : "3eb2b056f7d06f1b",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25a/750//#testresult/3eb2b056f7d06f1b",
        "status" : "passed",
        "time" : {
          "start" : 1649408023573,
          "stop" : 1649408024270,
          "duration" : 697
        }
      }, {
        "uid" : "75798eb157b4b7c2",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25a/748//#testresult/75798eb157b4b7c2",
        "status" : "passed",
        "time" : {
          "start" : 1649407623497,
          "stop" : 1649407624257,
          "duration" : 760
        }
      }, {
        "uid" : "344ff041fc320454",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25a/746//#testresult/344ff041fc320454",
        "status" : "passed",
        "time" : {
          "start" : 1649405876513,
          "stop" : 1649405877350,
          "duration" : 837
        }
      }, {
        "uid" : "259bd6fb5bfcbfd8",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25a/744//#testresult/259bd6fb5bfcbfd8",
        "status" : "passed",
        "time" : {
          "start" : 1649405374335,
          "stop" : 1649405375096,
          "duration" : 761
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "24655cb340e4cfd0.json",
  "parameterValues" : [ "'latest'", "'latest'" ]
}