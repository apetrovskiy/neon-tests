{
  "uid" : "7029b7828d144a3e",
  "name" : "test_send_more_than_exist_on_account_spl",
  "fullName" : "integration.tests.basic.test_transfers.TestTransfer#test_send_more_than_exist_on_account_spl",
  "historyId" : "a7ba93e059d952a825d691cd4c9024ae",
  "time" : {
    "start" : 1651167655864,
    "stop" : 1651167655864,
    "duration" : 0
  },
  "description" : "Send more than exist on account: spl (with different precision)",
  "descriptionHtml" : "<p>Send more than exist on account: spl (with different precision)</p>\n",
  "status" : "broken",
  "statusMessage" : "solana.rpc.core.UnconfirmedTxError: Unable to confirm transaction CrRdvQ3HgYHQTD7hhP2MtosUBL6RED5EDhPHNx9jszSH6NxBrVrbAkXoDCXivTiLgqtfXeJF9V5DvykhUibXJVM",
  "statusTrace" : "sol_client = <solana.rpc.api.Client object at 0x7f0e90df56d0>\nweb3_client = <utils.web3client.NeonWeb3Client object at 0x7f0e90dfb340>\nfaucet = <utils.faucet.Faucet object at 0x7f0e90e0bf10>\npytestconfig = <_pytest.config.Config object at 0x7f0e974344c0>\n\n    @pytest.fixture(scope=\"session\")\n    def erc20wrapper(sol_client, web3_client: NeonWeb3Client, faucet, pytestconfig: Config):\n        wrapper = ERC20Wrapper(\n            web3_client, sol_client, pytestconfig.environment.evm_loader, pytestconfig.environment.spl_neon_mint\n        )\n        owner = Keypair.generate()\n    \n        sol_client.request_airdrop(owner.public_key, 10000000000)\n    \n        for _ in range(10):\n            if sol_client.get_balance(owner.public_key)[\"result\"][\"value\"] == 10000000000:\n                break\n            time.sleep(5)\n    \n>       token = wrapper.create_spl(owner)\n\nintegration/tests/conftest.py:146: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nutils/erc20wrapper.py:69: in create_spl\n    token_mint = spl.token.client.Token.create_mint(\n/opt/hostedtoolcache/Python/3.9.12/x64/lib/python3.9/site-packages/spl/token/client.py:123: in create_mint\n    conn.send_transaction(txn, payer, mint_account, opts=opts, recent_blockhash=recent_blockhash)\n/opt/hostedtoolcache/Python/3.9.12/x64/lib/python3.9/site-packages/solana/rpc/api.py:1185: in send_transaction\n    txn_resp = self.send_raw_transaction(txn.serialize(), opts=opts)\n/opt/hostedtoolcache/Python/3.9.12/x64/lib/python3.9/site-packages/solana/rpc/api.py:1141: in send_raw_transaction\n    return self.__post_send_with_confirm(*post_send_args)\n/opt/hostedtoolcache/Python/3.9.12/x64/lib/python3.9/site-packages/solana/rpc/api.py:1246: in __post_send_with_confirm\n    self.confirm_transaction(resp[\"result\"], conf_comm)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <solana.rpc.api.Client object at 0x7f0e90df56d0>\ntx_sig = 'CrRdvQ3HgYHQTD7hhP2MtosUBL6RED5EDhPHNx9jszSH6NxBrVrbAkXoDCXivTiLgqtfXeJF9V5DvykhUibXJVM'\ncommitment = 'finalized', sleep_seconds = 0.5\n\n    def confirm_transaction(\n        self, tx_sig: str, commitment: Commitment = Finalized, sleep_seconds: float = 0.5\n    ) -> types.RPCResponse:\n        \"\"\"Confirm the transaction identified by the specified signature.\n    \n        :param tx_sig: the transaction signature to confirm.\n        :param commitment: Bank state to query. It can be either \"finalized\", \"confirmed\" or \"processed\".\n        :param sleep_seconds: The number of seconds to sleep when polling the signature status.\n        \"\"\"\n        timeout = time() + 30\n        while time() < timeout:\n            resp = self.get_signature_statuses([tx_sig])\n            maybe_rpc_error = resp.get(\"error\")\n            if maybe_rpc_error is not None:\n                raise RPCException(maybe_rpc_error)\n            resp_value = resp[\"result\"][\"value\"][0]\n            if resp_value is not None:\n                confirmation_status = resp_value[\"confirmationStatus\"]\n                confirmation_rank = COMMITMENT_RANKS[confirmation_status]\n                commitment_rank = COMMITMENT_RANKS[commitment]\n                if confirmation_rank >= commitment_rank:\n                    break\n            sleep(sleep_seconds)\n        else:\n            maybe_rpc_error = resp.get(\"error\")\n            if maybe_rpc_error is not None:\n                raise RPCException(maybe_rpc_error)\n>           raise UnconfirmedTxError(f\"Unable to confirm transaction {tx_sig}\")\nE           solana.rpc.core.UnconfirmedTxError: Unable to confirm transaction CrRdvQ3HgYHQTD7hhP2MtosUBL6RED5EDhPHNx9jszSH6NxBrVrbAkXoDCXivTiLgqtfXeJF9V5DvykhUibXJVM\n\n/opt/hostedtoolcache/Python/3.9.12/x64/lib/python3.9/site-packages/solana/rpc/api.py:1276: UnconfirmedTxError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "pytestconfig",
    "time" : {
      "start" : 1651167568780,
      "stop" : 1651167568780,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "web3_client",
    "time" : {
      "start" : 1651167568780,
      "stop" : 1651167568782,
      "duration" : 2
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "allure_environment",
    "time" : {
      "start" : 1651167568782,
      "stop" : 1651167569798,
      "duration" : 1016
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "faucet",
    "time" : {
      "start" : 1651167569798,
      "stop" : 1651167569798,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "json_rpc_client",
    "time" : {
      "start" : 1651167569798,
      "stop" : 1651167569798,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "operator",
    "time" : {
      "start" : 1651167569798,
      "stop" : 1651167569799,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "sol_client",
    "time" : {
      "start" : 1651167569799,
      "stop" : 1651167569799,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "erc20wrapper",
    "time" : {
      "start" : 1651167571067,
      "stop" : 1651167655244,
      "duration" : 84177
    },
    "status" : "broken",
    "statusMessage" : "solana.rpc.core.UnconfirmedTxError: Unable to confirm transaction CrRdvQ3HgYHQTD7hhP2MtosUBL6RED5EDhPHNx9jszSH6NxBrVrbAkXoDCXivTiLgqtfXeJF9V5DvykhUibXJVM\n",
    "statusTrace" : "  File \"/opt/hostedtoolcache/Python/3.9.12/x64/lib/python3.9/site-packages/pluggy/_callers.py\", line 39, in _multicall\n    res = hook_impl.function(*args)\n  File \"/opt/hostedtoolcache/Python/3.9.12/x64/lib/python3.9/site-packages/_pytest/fixtures.py\", line 1126, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/opt/hostedtoolcache/Python/3.9.12/x64/lib/python3.9/site-packages/_pytest/fixtures.py\", line 925, in call_fixture_func\n    fixture_result = next(generator)\n  File \"/home/runner/work/neon-tests/neon-tests/integration/tests/conftest.py\", line 146, in erc20wrapper\n    token = wrapper.create_spl(owner)\n  File \"/home/runner/work/neon-tests/neon-tests/utils/erc20wrapper.py\", line 69, in create_spl\n    token_mint = spl.token.client.Token.create_mint(\n  File \"/opt/hostedtoolcache/Python/3.9.12/x64/lib/python3.9/site-packages/spl/token/client.py\", line 123, in create_mint\n    conn.send_transaction(txn, payer, mint_account, opts=opts, recent_blockhash=recent_blockhash)\n  File \"/opt/hostedtoolcache/Python/3.9.12/x64/lib/python3.9/site-packages/solana/rpc/api.py\", line 1185, in send_transaction\n    txn_resp = self.send_raw_transaction(txn.serialize(), opts=opts)\n  File \"/opt/hostedtoolcache/Python/3.9.12/x64/lib/python3.9/site-packages/solana/rpc/api.py\", line 1141, in send_raw_transaction\n    return self.__post_send_with_confirm(*post_send_args)\n  File \"/opt/hostedtoolcache/Python/3.9.12/x64/lib/python3.9/site-packages/solana/rpc/api.py\", line 1246, in __post_send_with_confirm\n    self.confirm_transaction(resp[\"result\"], conf_comm)\n  File \"/opt/hostedtoolcache/Python/3.9.12/x64/lib/python3.9/site-packages/solana/rpc/api.py\", line 1276, in confirm_transaction\n    raise UnconfirmedTxError(f\"Unable to confirm transaction {tx_sig}\")\n",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  }, {
    "name" : "prepare_account",
    "time" : {
      "start" : 1651167655370,
      "stop" : 1651167655642,
      "duration" : 272
    },
    "status" : "failed",
    "statusMessage" : "AssertionError: <html>\r\n<head><title>502 Bad Gateway</title></head>\r\n<body>\r\n<center><h1>502 Bad Gateway</h1></center>\r\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\r\n</body>\r\n</html>\r\n\n",
    "statusTrace" : "  File \"/opt/hostedtoolcache/Python/3.9.12/x64/lib/python3.9/site-packages/pluggy/_callers.py\", line 39, in _multicall\n    res = hook_impl.function(*args)\n  File \"/opt/hostedtoolcache/Python/3.9.12/x64/lib/python3.9/site-packages/_pytest/fixtures.py\", line 1126, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/opt/hostedtoolcache/Python/3.9.12/x64/lib/python3.9/site-packages/_pytest/fixtures.py\", line 925, in call_fixture_func\n    fixture_result = next(generator)\n  File \"/home/runner/work/neon-tests/neon-tests/integration/tests/conftest.py\", line 113, in prepare_account\n    faucet.request_neon(acc.address, 5000)\n  File \"/home/runner/work/neon-tests/neon-tests/utils/faucet.py\", line 16, in request_neon\n    assert resp.status_code == 200, resp.text\n",
    "steps" : [ {
      "name" : "Create account for tests",
      "time" : {
        "start" : 1651167655370,
        "stop" : 1651167655374,
        "duration" : 4
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Request 5000 NEON from faucet for 0xFb5fdc5B30B9B4A20b9ee57892f6AD9EA8dcB2Dd",
      "time" : {
        "start" : 1651167655374,
        "stop" : 1651167655642,
        "duration" : 268
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: <html>\r\n<head><title>502 Bad Gateway</title></head>\r\n<body>\r\n<center><h1>502 Bad Gateway</h1></center>\r\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\r\n</body>\r\n</html>\r\n\n",
      "statusTrace" : "  File \"/home/runner/work/neon-tests/neon-tests/integration/tests/conftest.py\", line 113, in prepare_account\n    faucet.request_neon(acc.address, 5000)\n  File \"/home/runner/work/neon-tests/neon-tests/utils/faucet.py\", line 16, in request_neon\n    assert resp.status_code == 200, resp.text\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "prepare",
    "time" : {
      "start" : 1651167655937,
      "stop" : 1651167655937,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ {
    "name" : "allure_environment::0",
    "time" : {
      "start" : 1651167656262,
      "stop" : 1651167656263,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "Basic: transfer tests"
  }, {
    "name" : "parentSuite",
    "value" : "integration.tests.basic"
  }, {
    "name" : "suite",
    "value" : "test_transfers"
  }, {
    "name" : "subSuite",
    "value" : "TestTransfer"
  }, {
    "name" : "host",
    "value" : "fv-az173-499"
  }, {
    "name" : "thread",
    "value" : "1921-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "integration.tests.basic.test_transfers"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 8,
        "skipped" : 0,
        "passed" : 0,
        "unknown" : 0,
        "total" : 8
      },
      "items" : [ {
        "uid" : "cc13ad1ff538ec82",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25l/1084//#testresult/cc13ad1ff538ec82",
        "status" : "broken",
        "statusDetails" : "solana.rpc.core.UnconfirmedTxError: Unable to confirm transaction 5arzNiKTrAgEiiyPpujsPWhMYaCnv54AQkiuKRJktPiEzt6BqZVBmEsMstDyFRh64RdqQaf9YNu2Z7gCSJQVVyXW",
        "time" : {
          "start" : 1651165660426,
          "stop" : 1651165660426,
          "duration" : 0
        }
      }, {
        "uid" : "f7d0096b92615068",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25l/1082//#testresult/f7d0096b92615068",
        "status" : "broken",
        "statusDetails" : "solana.rpc.core.UnconfirmedTxError: Unable to confirm transaction 2G3mdru6G5KiYeyGBxM5SeyXZTa329n3cNTBRaX8DbeJfvV8grM2vaEYbZJ5Z8JXZDCMvWaKy2nf5FdXT6piksYG",
        "time" : {
          "start" : 1651161811779,
          "stop" : 1651161811779,
          "duration" : 0
        }
      }, {
        "uid" : "111ff11e887097ea",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25l/1080//#testresult/111ff11e887097ea",
        "status" : "broken",
        "statusDetails" : "solana.rpc.core.UnconfirmedTxError: Unable to confirm transaction 2x7H6SuAka6AXU6kKwgxmuzQTRmy2zPRjKtqXksCF1qJmZFwgxAxDPzPS9BqYVSrD5yMx3XwQ9bxBJuXkqDEncB2",
        "time" : {
          "start" : 1651160934421,
          "stop" : 1651160934421,
          "duration" : 0
        }
      }, {
        "uid" : "2ce63ae457cb341",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25l/1078//#testresult/2ce63ae457cb341",
        "status" : "broken",
        "statusDetails" : "solana.rpc.core.UnconfirmedTxError: Unable to confirm transaction 3Ea7msmP87dXc8LozJ7ngssErgKaMRB9SfrCvShptonutXdHhyEoNFZXZyjYkoDZmYysmj2zeyiDq5gmTvdBA7id",
        "time" : {
          "start" : 1651159337679,
          "stop" : 1651159337679,
          "duration" : 0
        }
      }, {
        "uid" : "c864abdd600366d1",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25l/1076//#testresult/c864abdd600366d1",
        "status" : "broken",
        "statusDetails" : "solana.rpc.core.UnconfirmedTxError: Unable to confirm transaction 3YMszmp3uMBpph9j4wvx1jqS74pyxT7KfXu9J1gYzJWyfgRc2RyT3EZ58h5AYCpHVs7vs5NfvDt5ZvmyaPdg9DYe",
        "time" : {
          "start" : 1651157949373,
          "stop" : 1651157949373,
          "duration" : 0
        }
      }, {
        "uid" : "81b3cbfbd10f1f0",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25l/1074//#testresult/81b3cbfbd10f1f0",
        "status" : "broken",
        "statusDetails" : "solana.rpc.core.UnconfirmedTxError: Unable to confirm transaction 2KVzzfsmSjC7E3uchb8VooAVsLQNXmibPLBC8j6yxynLvy9zopm9kXfTWutVMyQ1QQuz86cGB3Gyor3ZgsNQvPzs",
        "time" : {
          "start" : 1651145482900,
          "stop" : 1651145482900,
          "duration" : 0
        }
      }, {
        "uid" : "b2dc310bba76bf6d",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/25l/1072//#testresult/b2dc310bba76bf6d",
        "status" : "broken",
        "statusDetails" : "solana.rpc.core.UnconfirmedTxError: Unable to confirm transaction 3NCHcYrknYb1Rb1TARcXso42G9jwrmmu7JLa49G21dWHXsiLzuR17AzkVz99cuX8hzSkzppLBtmNFUuh7YCiaZi",
        "time" : {
          "start" : 1651144538308,
          "stop" : 1651144538308,
          "duration" : 0
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "7029b7828d144a3e.json",
  "parameterValues" : [ ]
}