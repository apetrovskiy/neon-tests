{
  "uid" : "4b4757e66a1912dae1a509f688f20b0f",
  "children" : [ {
    "name" : "Test defects",
    "children" : [ {
      "name" : "TypeError: get_block_by_hash() got an unexpected keyword argument 'req_id'",
      "children" : [ {
        "name" : "test_rpc_call_eth_getBlockByHash",
        "uid" : "53d00041c1546c79",
        "parentUid" : "1c7616b7b1a579ecae9c31185965cdbf",
        "status" : "broken",
        "time" : {
          "start" : 1646757733469,
          "stop" : 1646757738623,
          "duration" : 5154
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ ]
      } ],
      "uid" : "1c7616b7b1a579ecae9c31185965cdbf"
    }, {
      "name" : "TypeError: fromhex() argument must be str, not HexBytes",
      "children" : [ {
        "name" : "test_rpc_call_eth_sendRawTransaction",
        "uid" : "45da353c60474ec7",
        "parentUid" : "e9bac02ca83e196007c7b2ebb952161b",
        "status" : "broken",
        "time" : {
          "start" : 1646757816578,
          "stop" : 1646757818807,
          "duration" : 2229
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ ]
      } ],
      "uid" : "e9bac02ca83e196007c7b2ebb952161b"
    } ],
    "uid" : "bdbf199525818fae7a8651db9eafe741"
  }, {
    "name" : "Product defects",
    "children" : [ {
      "name" : "AssertionError: <AssertMessage.CONTAINS_ERROR: 'Contains the error data'>\nassert False\n +  where False = <bound method BasicHelpers.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f818593d820>>(JsonRpcErrorResponse(id=44, error={'code': -32000, 'message': 'Missing data'}, jsonrpc='2.0'))\n +    where <bound method BasicHelpers.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f818593d820>> = <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f818593d820>.assert_no_error_object",
      "children" : [ {
        "name" : "test_rpc_call_eth_call",
        "uid" : "1d0e8da49cf46d2f",
        "parentUid" : "aa19ef400498d2e830b6dbf6230787de",
        "status" : "failed",
        "time" : {
          "start" : 1646757754821,
          "stop" : 1646757759020,
          "duration" : 4199
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ ]
      } ],
      "uid" : "aa19ef400498d2e830b6dbf6230787de"
    }, {
      "name" : "AssertionError: <AssertMessage.CONTAINS_ERROR: 'Contains the error data'>\nassert False\n +  where False = <bound method BasicHelpers.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f8185950c70>>(JsonRpcErrorResponse(id=25, error={'code': -32000, 'message': \"'NoneType' object is not subscriptable\"}, jsonrpc='2.0'))\n +    where <bound method BasicHelpers.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f8185950c70>> = <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f8185950c70>.assert_no_error_object",
      "children" : [ {
        "name" : "test_rpc_call_eth_estimateGas",
        "uid" : "597cfc265066d84f",
        "parentUid" : "f0aeef1a6e7f27cd68f0c88be79f65dd",
        "status" : "failed",
        "time" : {
          "start" : 1646757759030,
          "stop" : 1646757760551,
          "duration" : 1521
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ ]
      } ],
      "uid" : "f0aeef1a6e7f27cd68f0c88be79f65dd"
    } ],
    "uid" : "8fb3a91ba5aaf9de24cc8a92edc82b5d"
  } ],
  "name" : "categories"
}