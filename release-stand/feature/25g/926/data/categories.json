{
  "uid" : "4b4757e66a1912dae1a509f688f20b0f",
  "children" : [ {
    "name" : "Test defects",
    "children" : [ {
      "name" : "ValueError: {'code': -32000, 'message': 'relation \"neon_transactions\" does not exist\\nLINE 3:               FROM neon_transactions AS a\\n                           ^\\n'}",
      "children" : [ {
        "name" : "test_rpc_call_eth_getBlockByHash",
        "uid" : "15e28a4f124ac396",
        "parentUid" : "69453fb2bc7653d0a16f1bd046aaf65a",
        "status" : "broken",
        "time" : {
          "start" : 1650231062320,
          "stop" : 1650231062951,
          "duration" : 631
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : true,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ ]
      }, {
        "name" : "test_rpc_call_eth_getBlockByNumber_via_numbers",
        "uid" : "1acdf392e23aaa6f",
        "parentUid" : "69453fb2bc7653d0a16f1bd046aaf65a",
        "status" : "broken",
        "time" : {
          "start" : 1650231064975,
          "stop" : 1650231065586,
          "duration" : 611
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ ]
      }, {
        "name" : "test_rpc_call_eth_call",
        "uid" : "eb218d72aba10b69",
        "parentUid" : "69453fb2bc7653d0a16f1bd046aaf65a",
        "status" : "broken",
        "time" : {
          "start" : 1650231068462,
          "stop" : 1650231069117,
          "duration" : 655
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ ]
      }, {
        "name" : "test_send_neon_from_one_account_to_another[0.01]",
        "uid" : "8ad06c11a10e5427",
        "parentUid" : "69453fb2bc7653d0a16f1bd046aaf65a",
        "status" : "broken",
        "time" : {
          "start" : 1650231181455,
          "stop" : 1650231182082,
          "duration" : 627
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ "0.01" ]
      }, {
        "name" : "test_send_neon_from_one_account_to_another[1]",
        "uid" : "f6e878cdecb7b8d7",
        "parentUid" : "69453fb2bc7653d0a16f1bd046aaf65a",
        "status" : "broken",
        "time" : {
          "start" : 1650231183317,
          "stop" : 1650231183940,
          "duration" : 623
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ "1" ]
      }, {
        "name" : "test_zero_neon",
        "uid" : "69fbb9dbde50b6f7",
        "parentUid" : "69453fb2bc7653d0a16f1bd046aaf65a",
        "status" : "broken",
        "time" : {
          "start" : 1650231211214,
          "stop" : 1650231211845,
          "duration" : 631
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ ]
      }, {
        "name" : "test_rpc_call_eth_getTransactionByHash",
        "uid" : "af6704b45b856060",
        "parentUid" : "69453fb2bc7653d0a16f1bd046aaf65a",
        "status" : "broken",
        "time" : {
          "start" : 1650231224684,
          "stop" : 1650231225301,
          "duration" : 617
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ ]
      }, {
        "name" : "test_rpc_call_eth_getTransactionReceipt",
        "uid" : "26f575ffc03190dd",
        "parentUid" : "69453fb2bc7653d0a16f1bd046aaf65a",
        "status" : "broken",
        "time" : {
          "start" : 1650231226566,
          "stop" : 1650231227182,
          "duration" : 616
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ ]
      } ],
      "uid" : "69453fb2bc7653d0a16f1bd046aaf65a"
    } ],
    "uid" : "bdbf199525818fae7a8651db9eafe741"
  }, {
    "name" : "Product defects",
    "children" : [ {
      "name" : "AssertionError: <AssertMessage.CONTAINS_ERROR: 'Contains the error data'>\nassert False\n +  where False = <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f309fd02850>>(JsonRpcErrorResponse(id=85, error={'code': -32000, 'message': 'relation \"neon_transaction_logs\" does not exist\\nLINE 1: SELECT * FROM neon_transaction_logs WHERE address IN (\\'0x722...\\n                      ^\\n'}, jsonrpc='2.0'))\n +    where <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f309fd02850>> = <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f309fd02850>.assert_no_error_object",
      "children" : [ {
        "name" : "test_rpc_call_eth_getLogs_via_tags[earliest-latest]",
        "uid" : "1ab549c65e330274",
        "parentUid" : "5ef38ecfc025d9e73d8ced285adebf5c",
        "status" : "failed",
        "time" : {
          "start" : 1650231071332,
          "stop" : 1650231072030,
          "duration" : 698
        },
        "flaky" : true,
        "newFailed" : true,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ "'earliest'", "'latest'" ]
      } ],
      "uid" : "5ef38ecfc025d9e73d8ced285adebf5c"
    }, {
      "name" : "AssertionError: <AssertMessage.CONTAINS_ERROR: 'Contains the error data'>\nassert False\n +  where False = <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f309fc70220>>(JsonRpcErrorResponse(id=42, error={'code': -32000, 'message': 'relation \"neon_transaction_logs\" does not exist\\nLINE 1: SELECT * FROM neon_transaction_logs WHERE address IN (\\'0x2cf...\\n                      ^\\n'}, jsonrpc='2.0'))\n +    where <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f309fc70220>> = <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f309fc70220>.assert_no_error_object",
      "children" : [ {
        "name" : "test_rpc_call_eth_getLogs_via_tags[pending-latest]",
        "uid" : "39014e712ca99f",
        "parentUid" : "e11f4c60d030b1bc084203834def1e69",
        "status" : "failed",
        "time" : {
          "start" : 1650231072039,
          "stop" : 1650231072736,
          "duration" : 697
        },
        "flaky" : true,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ "'pending'", "'latest'" ]
      } ],
      "uid" : "e11f4c60d030b1bc084203834def1e69"
    }, {
      "name" : "AssertionError: <AssertMessage.CONTAINS_ERROR: 'Contains the error data'>\nassert False\n +  where False = <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f309fd5e910>>(JsonRpcErrorResponse(id=42, error={'code': -32000, 'message': 'relation \"neon_transaction_logs\" does not exist\\nLINE 1: SELECT * FROM neon_transaction_logs WHERE address IN (\\'0xb34...\\n                      ^\\n'}, jsonrpc='2.0'))\n +    where <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f309fd5e910>> = <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f309fd5e910>.assert_no_error_object",
      "children" : [ {
        "name" : "test_rpc_call_eth_getLogs_via_tags[latest-earliest]",
        "uid" : "a4ef413176e9eb5b",
        "parentUid" : "da4ac3540791e5f019f0c86435354e3b",
        "status" : "failed",
        "time" : {
          "start" : 1650231072746,
          "stop" : 1650231073442,
          "duration" : 696
        },
        "flaky" : true,
        "newFailed" : true,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ "'latest'", "'earliest'" ]
      } ],
      "uid" : "da4ac3540791e5f019f0c86435354e3b"
    }, {
      "name" : "AssertionError: <AssertMessage.CONTAINS_ERROR: 'Contains the error data'>\nassert False\n +  where False = <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f309fc703a0>>(JsonRpcErrorResponse(id=30, error={'code': -32000, 'message': 'relation \"neon_accounts\" does not exist\\nLINE 3:               FROM neon_accounts AS a\\n                           ^\\n'}, jsonrpc='2.0'))\n +    where <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f309fc703a0>> = <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f309fc703a0>.assert_no_error_object",
      "children" : [ {
        "name" : "test_rpc_call_eth_getCode",
        "uid" : "1526d1a18b75b78e",
        "parentUid" : "6b56137378796359059d1ceda5345e36",
        "status" : "failed",
        "time" : {
          "start" : 1650231075556,
          "stop" : 1650231076251,
          "duration" : 695
        },
        "flaky" : true,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ ]
      } ],
      "uid" : "6b56137378796359059d1ceda5345e36"
    }, {
      "name" : "AssertionError: Expected insufficient funds for transfer to be in <ExceptionInfo ValueError({'code': -32000, 'message': 'Expecting value: line 1 column 1 (char 0)'}) tblen=6>",
      "children" : [ {
        "name" : "test_send_more_than_exist_on_account_neon[1501]",
        "uid" : "4e84e2ce14eae4e3",
        "parentUid" : "66ffe80b25c474da23f9952dc467f9f8",
        "status" : "failed",
        "time" : {
          "start" : 1650231187552,
          "stop" : 1650231198175,
          "duration" : 10623
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ "1501" ]
      }, {
        "name" : "test_send_more_than_exist_on_account_neon[10000.1]",
        "uid" : "99d20d5a4f43d086",
        "parentUid" : "66ffe80b25c474da23f9952dc467f9f8",
        "status" : "failed",
        "time" : {
          "start" : 1650231199394,
          "stop" : 1650231209989,
          "duration" : 10595
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ "10000.1" ]
      }, {
        "name" : "test_there_are_not_enough_neons_for_transfer",
        "uid" : "b55f0f056defe00b",
        "parentUid" : "66ffe80b25c474da23f9952dc467f9f8",
        "status" : "failed",
        "time" : {
          "start" : 1650231216391,
          "stop" : 1650231217488,
          "duration" : 1097
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ ]
      } ],
      "uid" : "66ffe80b25c474da23f9952dc467f9f8"
    }, {
      "name" : "AssertionError: Expected insufficient funds for transfer to be in <ExceptionInfo ValueError({'code': -32000, 'message': 'The account balance is less than required: Account f74314e5a810234c4f80c14a6be...; gasLimit = 1579040; fee = 779256240000000000; value = 900000000000000000; required_balance = 1679256240000000000; '}) tblen=6>",
      "children" : [ {
        "name" : "test_there_are_not_enough_neons_for_gas_fee",
        "uid" : "eeb244ad37f93d48",
        "parentUid" : "5a5687af79ecb277d22ddbd829e9029d",
        "status" : "failed",
        "time" : {
          "start" : 1650231215176,
          "stop" : 1650231216376,
          "duration" : 1200
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ ]
      } ],
      "uid" : "5a5687af79ecb277d22ddbd829e9029d"
    }, {
      "name" : "AssertionError: The response type is error response\nassert False\n +  where False = <bound method BasicTests.assert_is_successful_response of <integration.tests.basic.test_transfers.TestRpcCallsTransactions object at 0x7f309fdeb8e0>>(JsonRpcErrorResponse(id=72, error={'code': -32000, 'message': 'relation \"neon_transactions\" does not exist\\nLINE 3:               FROM neon_transactions AS a\\n                           ^\\n'}, jsonrpc='2.0'))\n +    where <bound method BasicTests.assert_is_successful_response of <integration.tests.basic.test_transfers.TestRpcCallsTransactions object at 0x7f309fdeb8e0>> = <integration.tests.basic.test_transfers.TestRpcCallsTransactions object at 0x7f309fdeb8e0>.assert_is_successful_response",
      "children" : [ {
        "name" : "test_rpc_call_eth_sendRawTransaction",
        "uid" : "6067bc32b919a9e6",
        "parentUid" : "7a26b5908c14fd7c84b5b8cb08b3170d",
        "status" : "failed",
        "time" : {
          "start" : 1650231222847,
          "stop" : 1650231223472,
          "duration" : 625
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ ]
      } ],
      "uid" : "7a26b5908c14fd7c84b5b8cb08b3170d"
    }, {
      "name" : "AssertionError: The response type is error response\nassert False\n +  where False = <bound method BasicTests.assert_is_successful_response of <integration.tests.basic.test_transfers.TestRpcCallsTransactions object at 0x7f30a00d6250>>(JsonRpcErrorResponse(id=20, error='InvalidInstructionData', jsonrpc='2.0'))\n +    where <bound method BasicTests.assert_is_successful_response of <integration.tests.basic.test_transfers.TestRpcCallsTransactions object at 0x7f30a00d6250>> = <integration.tests.basic.test_transfers.TestRpcCallsTransactions object at 0x7f30a00d6250>.assert_is_successful_response",
      "children" : [ {
        "name" : "test_check_erc_1820_transaction",
        "uid" : "1f6498bf4b63384f",
        "parentUid" : "3a75c64d52aa594e9169fae33c69a2c0",
        "status" : "failed",
        "time" : {
          "start" : 1650231228419,
          "stop" : 1650231228887,
          "duration" : 468
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ ]
      } ],
      "uid" : "3a75c64d52aa594e9169fae33c69a2c0"
    }, {
      "name" : "AssertionError: Expected gas limit reached to be in <ExceptionInfo ValueError({'code': -32000, 'message': 'relation \"neon_transactions\" does not exist\\nLINE 3:               FROM neon_transactions AS a\\n                           ^\\n'}) tblen=6>",
      "children" : [ {
        "name" : "test_generate_bad_sign[1-None-gas limit reached]",
        "uid" : "cfa90fb7af4a6caf",
        "parentUid" : "f933bb163d0898884d5826b1a09e666c",
        "status" : "failed",
        "time" : {
          "start" : 1650231231734,
          "stop" : 1650231232058,
          "duration" : 324
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ "'gas limit reached'", "1", "None" ]
      } ],
      "uid" : "f933bb163d0898884d5826b1a09e666c"
    }, {
      "name" : "AssertionError: Expected insufficient funds for transfer to be in <ExceptionInfo ValueError({'code': -32000, 'message': 'The account balance is less than required: Account 8961b602bbb8299a2b2cf23a908...e = 9103468200375663722496000000000; value = 10000000000000000; required_balance = 9103468200375673722496000000000; '}) tblen=6>",
      "children" : [ {
        "name" : "test_generate_bad_sign[18446744073709551616-None-insufficient funds for transfer]",
        "uid" : "e993e0462eb011be",
        "parentUid" : "b65527441c0f21209f670ac19ed036b6",
        "status" : "failed",
        "time" : {
          "start" : 1650231233274,
          "stop" : 1650231243678,
          "duration" : 10404
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ "'insufficient funds for transfer'", "18446744073709551616", "None" ]
      } ],
      "uid" : "b65527441c0f21209f670ac19ed036b6"
    }, {
      "name" : "AssertionError: Expected insufficient funds for transfer to be in <ExceptionInfo ValueError({'code': -32000, 'message': 'The account balance is less than required: Account 9eeb1fa51cc566d44a7fd722ca3...it = 21000; fee = 387381625547900583936000; value = 10000000000000000; required_balance = 387381635547900583936000; '}) tblen=6>",
      "children" : [ {
        "name" : "test_generate_bad_sign[0-18446744073709551616-insufficient funds for transfer]",
        "uid" : "4c8289a219fb3642",
        "parentUid" : "d042f1c72fd0747c74739b9c817be22f",
        "status" : "failed",
        "time" : {
          "start" : 1650231244898,
          "stop" : 1650231255532,
          "duration" : 10634
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ "'insufficient funds for transfer'", "0", "18446744073709551616" ]
      } ],
      "uid" : "d042f1c72fd0747c74739b9c817be22f"
    }, {
      "name" : "AssertionError: Expected insufficient funds for transfer to be in <ExceptionInfo ValueError({'code': -32000, 'message': 'The account balance is less than required: Account 824a441fa8102ede0343e272952...1616; gasLimit = 1; fee = 18446744073709551616; value = 10000000000000000; required_balance = 18456744073709551616; '}) tblen=6>",
      "children" : [ {
        "name" : "test_generate_bad_sign[1-18446744073709551616-insufficient funds for transfer]",
        "uid" : "7a839f786f123521",
        "parentUid" : "2265cb34a5c736a5e6fc5f15b6fcb84c",
        "status" : "failed",
        "time" : {
          "start" : 1650231256752,
          "stop" : 1650231267064,
          "duration" : 10312
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ "'insufficient funds for transfer'", "1", "18446744073709551616" ]
      } ],
      "uid" : "2265cb34a5c736a5e6fc5f15b6fcb84c"
    }, {
      "name" : "AssertionError: Expected insufficient funds for transfer to be in <ExceptionInfo ValueError({'code': -32000, 'message': 'The account balance is less than required: Account 85c01df017183c85845ee46ed8f...2; gasLimit = 1000; fee = 18446744073709552000; value = 10000000000000000; required_balance = 18456744073709552000; '}) tblen=6>",
      "children" : [ {
        "name" : "test_generate_bad_sign[1000-18446744073709552-insufficient funds for transfer]",
        "uid" : "fa0c179f0c94375",
        "parentUid" : "acc09aed6a6be1b344706b1966c1fb53",
        "status" : "failed",
        "time" : {
          "start" : 1650231268285,
          "stop" : 1650231278601,
          "duration" : 10316
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ "'insufficient funds for transfer'", "1000", "18446744073709552" ]
      } ],
      "uid" : "acc09aed6a6be1b344706b1966c1fb53"
    }, {
      "name" : "AssertionError: Message does not contain 'nonce too high'\nassert 'nonce too high' in 'relation \"neon_transactions\" does not exist\\nLINE 3:               FROM neon_transactions AS a\\n                           ^\\n'\n +  where 'nonce too high' = <ErrorMessage.NONCE_TOO_HIGH: 'nonce too high'>.value\n +    where <ErrorMessage.NONCE_TOO_HIGH: 'nonce too high'> = ErrorMessage.NONCE_TOO_HIGH",
      "children" : [ {
        "name" : "test_send_with_big_nonce",
        "uid" : "77043660014e10d9",
        "parentUid" : "2e53620636a63ff99be19f820da40d1b",
        "status" : "failed",
        "time" : {
          "start" : 1650231279820,
          "stop" : 1650231280173,
          "duration" : 353
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ ]
      } ],
      "uid" : "2e53620636a63ff99be19f820da40d1b"
    }, {
      "name" : "AssertionError: Message does not contain 'nonce too low'\nassert 'nonce too low' in 'relation \"neon_transactions\" does not exist\\nLINE 3:               FROM neon_transactions AS a\\n                           ^\\n'\n +  where 'nonce too low' = <ErrorMessage.NONCE_TOO_LOW: 'nonce too low'>.value\n +    where <ErrorMessage.NONCE_TOO_LOW: 'nonce too low'> = ErrorMessage.NONCE_TOO_LOW",
      "children" : [ {
        "name" : "test_send_with_old_nonce",
        "uid" : "65146513b3dee711",
        "parentUid" : "784f03071b21cdc14cf3e08ecf5bd645",
        "status" : "failed",
        "time" : {
          "start" : 1650231281387,
          "stop" : 1650231282142,
          "duration" : 755
        },
        "flaky" : false,
        "newFailed" : true,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ ]
      } ],
      "uid" : "784f03071b21cdc14cf3e08ecf5bd645"
    } ],
    "uid" : "8fb3a91ba5aaf9de24cc8a92edc82b5d"
  } ],
  "name" : "categories"
}