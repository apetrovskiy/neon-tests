{
  "uid" : "26694e4ee03cb91",
  "name" : "test_verify_faucet_work_multiple_requests[1]",
  "fullName" : "integration.tests.basic.test_single_client_activity.TestSingleClient#test_verify_faucet_work_multiple_requests",
  "historyId" : "d9f6086fa9f7d0f338cce50b5b9013e9",
  "time" : {
    "start" : 1647629302944,
    "stop" : 1647629303050,
    "duration" : 106
  },
  "description" : "Verify faucet work (request drop for several accounts): double request",
  "descriptionHtml" : "<p>Verify faucet work (request drop for several accounts): double request</p>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError",
  "statusTrace" : "self = <integration.tests.basic.test_single_client_activity.TestSingleClient object at 0x7f4842bbb910>\namount = 1\n\n    @pytest.mark.parametrize(\"amount\", FAUCET_TEST_DATA)\n    def test_verify_faucet_work_multiple_requests(self, amount: int):\n        \"\"\"Verify faucet work (request drop for several accounts): double request\"\"\"\n        for _ in range(10):\n            account = self.create_account()\n            with allure.step(FAUCET_REQUEST_MESSAGE):\n>               self.request_faucet_neon(account.address, amount)\n\nintegration/tests/basic/test_single_client_activity.py:103: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nintegration/tests/basic/helpers/basic.py:52: in request_faucet_neon\n    self.faucet.request_neon(wallet, amount=amount)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <utils.faucet.Faucet object at 0x7f4842cb2a30>\naddress = '0x12f34398e60672b655bdD4b53Bdf20aB57419213', amount = 1\n\n    def request_neon(self, address: str, amount: int = 100):\n        assert address.startswith(\"0x\")\n        url = urllib.parse.urljoin(self._url, \"request_neon\")\n        resp = self._session.post(url, json={\"amount\": amount, \"wallet\": address})\n>       assert resp.status_code == 200\nE       AssertionError\n\nutils/faucet.py:14: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "pytestconfig",
    "time" : {
      "start" : 1647629301348,
      "stop" : 1647629301348,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "web3_client",
    "time" : {
      "start" : 1647629301348,
      "stop" : 1647629301350,
      "duration" : 2
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "allure_environment",
    "time" : {
      "start" : 1647629301350,
      "stop" : 1647629301715,
      "duration" : 365
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "jsonrpc_requester",
    "time" : {
      "start" : 1647629301715,
      "stop" : 1647629301715,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "operator",
    "time" : {
      "start" : 1647629301715,
      "stop" : 1647629301716,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "faucet",
    "time" : {
      "start" : 1647629301715,
      "stop" : 1647629301715,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "sol_client",
    "time" : {
      "start" : 1647629301716,
      "stop" : 1647629301716,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_json_rpc_requester",
    "time" : {
      "start" : 1647629302943,
      "stop" : 1647629302943,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare",
    "time" : {
      "start" : 1647629302943,
      "stop" : 1647629302943,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "Verify faucet work (request drop for several accounts): double request",
    "status" : "failed",
    "statusMessage" : "AssertionError",
    "statusTrace" : "self = <integration.tests.basic.test_single_client_activity.TestSingleClient object at 0x7f4842bbb910>\namount = 1\n\n    @pytest.mark.parametrize(\"amount\", FAUCET_TEST_DATA)\n    def test_verify_faucet_work_multiple_requests(self, amount: int):\n        \"\"\"Verify faucet work (request drop for several accounts): double request\"\"\"\n        for _ in range(10):\n            account = self.create_account()\n            with allure.step(FAUCET_REQUEST_MESSAGE):\n>               self.request_faucet_neon(account.address, amount)\n\nintegration/tests/basic/test_single_client_activity.py:103: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nintegration/tests/basic/helpers/basic.py:52: in request_faucet_neon\n    self.faucet.request_neon(wallet, amount=amount)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <utils.faucet.Faucet object at 0x7f4842cb2a30>\naddress = '0x12f34398e60672b655bdD4b53Bdf20aB57419213', amount = 1\n\n    def request_neon(self, address: str, amount: int = 100):\n        assert address.startswith(\"0x\")\n        url = urllib.parse.urljoin(self._url, \"request_neon\")\n        resp = self._session.post(url, json={\"amount\": amount, \"wallet\": address})\n>       assert resp.status_code == 200\nE       AssertionError\n\nutils/faucet.py:14: AssertionError",
    "steps" : [ {
      "name" : "requesting faucet for Neon",
      "time" : {
        "start" : 1647629302948,
        "stop" : 1647629303049,
        "duration" : 101
      },
      "status" : "failed",
      "statusMessage" : "AssertionError\n",
      "statusTrace" : "  File \"/home/runner/work/neon-tests/neon-tests/integration/tests/basic/test_single_client_activity.py\", line 103, in test_verify_faucet_work_multiple_requests\n    self.request_faucet_neon(account.address, amount)\n  File \"/home/runner/work/neon-tests/neon-tests/integration/tests/basic/helpers/basic.py\", line 52, in request_faucet_neon\n    self.faucet.request_neon(wallet, amount=amount)\n  File \"/home/runner/work/neon-tests/neon-tests/utils/faucet.py\", line 14, in request_neon\n    assert resp.status_code == 200\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "allure_environment::0",
    "time" : {
      "start" : 1647629303375,
      "stop" : 1647629303375,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "Basic: single user tests"
  }, {
    "name" : "parentSuite",
    "value" : "integration.tests.basic"
  }, {
    "name" : "suite",
    "value" : "test_single_client_activity"
  }, {
    "name" : "subSuite",
    "value" : "TestSingleClient"
  }, {
    "name" : "host",
    "value" : "fv-az193-883"
  }, {
    "name" : "thread",
    "value" : "1748-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "integration.tests.basic.test_single_client_activity"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "amount",
    "value" : "1"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 5,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 2,
        "unknown" : 0,
        "total" : 7
      },
      "items" : [ {
        "uid" : "aa0a52163c1a85d",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/254t/644//#testresult/aa0a52163c1a85d",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1647627405542,
          "stop" : 1647627405679,
          "duration" : 137
        }
      }, {
        "uid" : "d58b63c631526f19",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/254t/641//#testresult/d58b63c631526f19",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1647624114156,
          "stop" : 1647624114333,
          "duration" : 177
        }
      }, {
        "uid" : "bcadd6fa34d05777",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/254t/635//#testresult/bcadd6fa34d05777",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1647623113544,
          "stop" : 1647623113544,
          "duration" : 0
        }
      }, {
        "uid" : "485a8ef2854aa7c2",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/254t/632//#testresult/485a8ef2854aa7c2",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1647622864936,
          "stop" : 1647622864936,
          "duration" : 0
        }
      }, {
        "uid" : "8d79379923d6b5a0",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/254t/629//#testresult/8d79379923d6b5a0",
        "status" : "passed",
        "time" : {
          "start" : 1647622785095,
          "stop" : 1647622798378,
          "duration" : 13283
        }
      }, {
        "uid" : "cfc4e2f58d926112",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/254t/624//#testresult/cfc4e2f58d926112",
        "status" : "passed",
        "time" : {
          "start" : 1647622120338,
          "stop" : 1647622134702,
          "duration" : 14364
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "26694e4ee03cb91.json",
  "parameterValues" : [ "1" ]
}