{
  "uid" : "a75244f24b23de75",
  "name" : "test_send_more_than_exist_on_account_neon[100]",
  "fullName" : "integration.tests.basic.test_transfers.TestTransfer#test_send_more_than_exist_on_account_neon",
  "historyId" : "0e6e23bd246b8dd85c9c8f54b814f02b",
  "time" : {
    "start" : 1647634705949,
    "stop" : 1647634708583,
    "duration" : 2634
  },
  "description" : "Send more than exist on account: neon",
  "descriptionHtml" : "<p>Send more than exist on account: neon</p>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError",
  "statusTrace" : "self = <integration.tests.basic.test_transfers.TestTransfer object at 0x7f295637b220>\namount = 100, prepare_accounts = None\n\n    @pytest.mark.parametrize(\"amount\", WRONG_TRANSFER_AMOUNT_DATA)\n    def test_send_more_than_exist_on_account_neon(self, amount: Union[int,\n                                                                      float],\n                                                  prepare_accounts):\n        \"\"\"Send more than exist on account: neon\"\"\"\n    \n>       self.check_value_error_if_less_than_required(self.sender_account,\n                                                     self.recipient_account,\n                                                     amount)\n\nintegration/tests/basic/test_transfers.py:46: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nintegration/tests/basic/helpers/basic.py:126: in check_value_error_if_less_than_required\n    return self.process_transaction_with_failure(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <integration.tests.basic.test_transfers.TestTransfer object at 0x7f295637b220>\nsender_account = AccountData(address='0x10bA76E88cd03842eb45875e66a0CfD995Ab4D4A', key='f50167b6cb6680c3c230a1fb1831521d9e1e1a65796c170f7162bda48135d292')\nrecipient_account = <eth_account.signers.local.LocalAccount object at 0x7f2956178760>\namount = 100, error_message = 'Expecting value: line 1 column 1 (char 0)'\n\n    def process_transaction_with_failure(\n            self,\n            sender_account: Account,\n            recipient_account: Union[Account, AccountData],\n            amount: int,\n            error_message: str = \"\") -> Union[web3.types.TxReceipt, None]:\n        '''Processes transaction, expects a failure'''\n    \n        tx: Union[web3.types.TxReceipt, None] = None\n        with allure.step(\n                f\"Sending {amount} from {sender_account.address} to {recipient_account.address}\"\n        ):\n            with pytest.raises(Exception) as error_info:\n                tx = self.web3_client.send_neon(sender_account,\n                                                recipient_account, amount)\n    \n            if error_info != None:\n    \n                if error_message:\n>                   assert error_message in str(error_info)\nE                   AssertionError\n\nintegration/tests/basic/helpers/basic.py:110: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "pytestconfig",
    "time" : {
      "start" : 1647634676047,
      "stop" : 1647634676048,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "web3_client",
    "time" : {
      "start" : 1647634676048,
      "stop" : 1647634676049,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "allure_environment",
    "time" : {
      "start" : 1647634676050,
      "stop" : 1647634676939,
      "duration" : 889
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "operator",
    "time" : {
      "start" : 1647634676940,
      "stop" : 1647634676940,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "jsonrpc_requester",
    "time" : {
      "start" : 1647634676940,
      "stop" : 1647634676940,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "faucet",
    "time" : {
      "start" : 1647634676940,
      "stop" : 1647634676940,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "sol_client",
    "time" : {
      "start" : 1647634676941,
      "stop" : 1647634676941,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_accounts",
    "time" : {
      "start" : 1647634705943,
      "stop" : 1647634705948,
      "duration" : 5
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_json_rpc_requester",
    "time" : {
      "start" : 1647634705943,
      "stop" : 1647634705943,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare",
    "time" : {
      "start" : 1647634705943,
      "stop" : 1647634705943,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "Send more than exist on account: neon",
    "status" : "failed",
    "statusMessage" : "AssertionError",
    "statusTrace" : "self = <integration.tests.basic.test_transfers.TestTransfer object at 0x7f295637b220>\namount = 100, prepare_accounts = None\n\n    @pytest.mark.parametrize(\"amount\", WRONG_TRANSFER_AMOUNT_DATA)\n    def test_send_more_than_exist_on_account_neon(self, amount: Union[int,\n                                                                      float],\n                                                  prepare_accounts):\n        \"\"\"Send more than exist on account: neon\"\"\"\n    \n>       self.check_value_error_if_less_than_required(self.sender_account,\n                                                     self.recipient_account,\n                                                     amount)\n\nintegration/tests/basic/test_transfers.py:46: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nintegration/tests/basic/helpers/basic.py:126: in check_value_error_if_less_than_required\n    return self.process_transaction_with_failure(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <integration.tests.basic.test_transfers.TestTransfer object at 0x7f295637b220>\nsender_account = AccountData(address='0x10bA76E88cd03842eb45875e66a0CfD995Ab4D4A', key='f50167b6cb6680c3c230a1fb1831521d9e1e1a65796c170f7162bda48135d292')\nrecipient_account = <eth_account.signers.local.LocalAccount object at 0x7f2956178760>\namount = 100, error_message = 'Expecting value: line 1 column 1 (char 0)'\n\n    def process_transaction_with_failure(\n            self,\n            sender_account: Account,\n            recipient_account: Union[Account, AccountData],\n            amount: int,\n            error_message: str = \"\") -> Union[web3.types.TxReceipt, None]:\n        '''Processes transaction, expects a failure'''\n    \n        tx: Union[web3.types.TxReceipt, None] = None\n        with allure.step(\n                f\"Sending {amount} from {sender_account.address} to {recipient_account.address}\"\n        ):\n            with pytest.raises(Exception) as error_info:\n                tx = self.web3_client.send_neon(sender_account,\n                                                recipient_account, amount)\n    \n            if error_info != None:\n    \n                if error_message:\n>                   assert error_message in str(error_info)\nE                   AssertionError\n\nintegration/tests/basic/helpers/basic.py:110: AssertionError",
    "steps" : [ {
      "name" : "Sending 100 from 0x10bA76E88cd03842eb45875e66a0CfD995Ab4D4A to 0x032EB7543b4fE969E83ACF52Ee927914D5FACe6E",
      "time" : {
        "start" : 1647634705949,
        "stop" : 1647634708583,
        "duration" : 2634
      },
      "status" : "failed",
      "statusMessage" : "AssertionError\n",
      "statusTrace" : "  File \"/home/runner/work/neon-tests/neon-tests/integration/tests/basic/helpers/basic.py\", line 110, in process_transaction_with_failure\n    assert error_message in str(error_info)\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "prepare_accounts::0",
    "time" : {
      "start" : 1647634708593,
      "stop" : 1647634708594,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "allure_environment::0",
    "time" : {
      "start" : 1647634714629,
      "stop" : 1647634714629,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "Basic: transfer tests"
  }, {
    "name" : "parentSuite",
    "value" : "integration.tests.basic"
  }, {
    "name" : "suite",
    "value" : "test_transfers"
  }, {
    "name" : "subSuite",
    "value" : "TestTransfer"
  }, {
    "name" : "host",
    "value" : "fv-az445-625"
  }, {
    "name" : "thread",
    "value" : "1748-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "integration.tests.basic.test_transfers"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "amount",
    "value" : "100"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 6,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 2,
        "unknown" : 0,
        "total" : 9
      },
      "items" : [ {
        "uid" : "da093394abf4036a",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/254t/650//#testresult/da093394abf4036a",
        "status" : "failed",
        "statusDetails" : "Failed: DID NOT RAISE <class 'Exception'>",
        "time" : {
          "start" : 1647632744322,
          "stop" : 1647632748285,
          "duration" : 3963
        }
      }, {
        "uid" : "fdad5229b9ed26d6",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/254t/647//#testresult/fdad5229b9ed26d6",
        "status" : "broken",
        "statusDetails" : "AttributeError: 'JsonRpcRequester' object has no attribute 'get_proxy_url'",
        "time" : {
          "start" : 1647629303256,
          "stop" : 1647629303256,
          "duration" : 0
        }
      }, {
        "uid" : "1ae55c1c943171ba",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/254t/644//#testresult/1ae55c1c943171ba",
        "status" : "failed",
        "statusDetails" : "Failed: DID NOT RAISE <class 'Exception'>",
        "time" : {
          "start" : 1647627424517,
          "stop" : 1647627426864,
          "duration" : 2347
        }
      }, {
        "uid" : "ba2edd4ac90d1dd7",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/254t/641//#testresult/ba2edd4ac90d1dd7",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1647624116069,
          "stop" : 1647624116069,
          "duration" : 0
        }
      }, {
        "uid" : "4ec4c05d6918a5a1",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/254t/635//#testresult/4ec4c05d6918a5a1",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1647623113989,
          "stop" : 1647623113989,
          "duration" : 0
        }
      }, {
        "uid" : "78d5bdf035678c",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/254t/632//#testresult/78d5bdf035678c",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1647622865383,
          "stop" : 1647622865383,
          "duration" : 0
        }
      }, {
        "uid" : "ba7ab6e30abd903b",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/254t/629//#testresult/ba7ab6e30abd903b",
        "status" : "passed",
        "time" : {
          "start" : 1647622833813,
          "stop" : 1647622834564,
          "duration" : 751
        }
      }, {
        "uid" : "e98df4866e2e6462",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/254t/624//#testresult/e98df4866e2e6462",
        "status" : "passed",
        "time" : {
          "start" : 1647622199927,
          "stop" : 1647622200925,
          "duration" : 998
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "a75244f24b23de75.json",
  "parameterValues" : [ "100" ]
}