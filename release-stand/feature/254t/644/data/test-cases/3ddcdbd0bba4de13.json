{
  "uid" : "3ddcdbd0bba4de13",
  "name" : "test_zero_neon",
  "fullName" : "integration.tests.basic.test_transfers.TestTransfer#test_zero_neon",
  "historyId" : "0cee9969988246b6eef0ce962920c407",
  "time" : {
    "start" : 1647627429490,
    "stop" : 1647627432131,
    "duration" : 2641
  },
  "description" : "Send zero: neon",
  "descriptionHtml" : "<p>Send zero: neon</p>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: expected balance = 4.993, actual balance = 831.847",
  "statusTrace" : "self = <integration.tests.basic.test_transfers.TestTransfer object at 0x7fadd7cd8d30>\nprepare_accounts = None\n\n    def test_zero_neon(self, prepare_accounts):\n        \"\"\"Send zero: neon\"\"\"\n    \n        tx_receipt = self.process_transaction(self.sender_account,\n                                              self.recipient_account)\n    \n>       self.assert_balance(\n            self.sender_account.address,\n            InputData.FAUCET_1ST_REQUEST_AMOUNT.value -\n            self.calculate_trx_gas(tx_receipt=tx_receipt))\n\nintegration/tests/basic/test_transfers.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nintegration/tests/basic/helpers/basic.py:145: in assert_balance\n    self.check_balance(expected_amount, balance)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <integration.tests.basic.test_transfers.TestTransfer object at 0x7fadd7cd8d30>\nexpected = 4.993, actual = Decimal('831.846552995472')\n\n    def check_balance(self, expected: float, actual: Decimal):\n        '''Compares the balance with expectation'''\n        expected_dec = round(expected, InputData.ROUND_DIGITS.value)\n        actual_dec = float(round(actual, InputData.ROUND_DIGITS.value))\n    \n>       assert actual_dec == expected_dec, f\"expected balance = {expected_dec}, actual balance = {actual_dec}\"\nE       AssertionError: expected balance = 4.993, actual balance = 831.847\n\nintegration/tests/basic/helpers/basic.py:140: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "pytestconfig",
    "time" : {
      "start" : 1647627394584,
      "stop" : 1647627394585,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "web3_client",
    "time" : {
      "start" : 1647627394585,
      "stop" : 1647627394586,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "allure_environment",
    "time" : {
      "start" : 1647627394586,
      "stop" : 1647627395424,
      "duration" : 838
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "faucet",
    "time" : {
      "start" : 1647627395424,
      "stop" : 1647627395424,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "operator",
    "time" : {
      "start" : 1647627395424,
      "stop" : 1647627395424,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "sol_client",
    "time" : {
      "start" : 1647627395424,
      "stop" : 1647627395424,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "jsonrpc_requester",
    "time" : {
      "start" : 1647627395424,
      "stop" : 1647627395424,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare",
    "time" : {
      "start" : 1647627429486,
      "stop" : 1647627429486,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_accounts",
    "time" : {
      "start" : 1647627429486,
      "stop" : 1647627429490,
      "duration" : 4
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_json_rpc_requester",
    "time" : {
      "start" : 1647627429486,
      "stop" : 1647627429486,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "Send zero: neon",
    "status" : "failed",
    "statusMessage" : "AssertionError: expected balance = 4.993, actual balance = 831.847",
    "statusTrace" : "self = <integration.tests.basic.test_transfers.TestTransfer object at 0x7fadd7cd8d30>\nprepare_accounts = None\n\n    def test_zero_neon(self, prepare_accounts):\n        \"\"\"Send zero: neon\"\"\"\n    \n        tx_receipt = self.process_transaction(self.sender_account,\n                                              self.recipient_account)\n    \n>       self.assert_balance(\n            self.sender_account.address,\n            InputData.FAUCET_1ST_REQUEST_AMOUNT.value -\n            self.calculate_trx_gas(tx_receipt=tx_receipt))\n\nintegration/tests/basic/test_transfers.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nintegration/tests/basic/helpers/basic.py:145: in assert_balance\n    self.check_balance(expected_amount, balance)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <integration.tests.basic.test_transfers.TestTransfer object at 0x7fadd7cd8d30>\nexpected = 4.993, actual = Decimal('831.846552995472')\n\n    def check_balance(self, expected: float, actual: Decimal):\n        '''Compares the balance with expectation'''\n        expected_dec = round(expected, InputData.ROUND_DIGITS.value)\n        actual_dec = float(round(actual, InputData.ROUND_DIGITS.value))\n    \n>       assert actual_dec == expected_dec, f\"expected balance = {expected_dec}, actual balance = {actual_dec}\"\nE       AssertionError: expected balance = 4.993, actual balance = 831.847\n\nintegration/tests/basic/helpers/basic.py:140: AssertionError",
    "steps" : [ {
      "name" : "Sending 0.0 from 0x10bA76E88cd03842eb45875e66a0CfD995Ab4D4A to 0xd8f9ebB293cB2411d414173747100E618432F353",
      "time" : {
        "start" : 1647627429490,
        "stop" : 1647627432030,
        "duration" : 2540
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "calculating gas",
      "time" : {
        "start" : 1647627432030,
        "stop" : 1647627432069,
        "duration" : 39
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "tx_receipt",
        "value" : "AttributeDict({'transactionHash': HexBytes('0x4a84a73f5132daca43bedacff6926d65862b101ae22d10fceb6f863a6c56440b'), 'transactionIndex': 0, 'blockHash': HexBytes('0x5559b62b3f160e571c93360bcaf378d0a5a1c1f00db3ac6842c36168fd000a4d'), 'blockNumber': 121892868, 'from': '0x10bA76E88cd03842eb45875e66a0CfD995Ab4D4A', 'to': '0xd8f9ebB293cB2411d414173747100E618432F353', 'gasUsed': 15000, 'cumulativeGasUsed': 15000, 'contractAddress': None, 'logs': [], 'status': 1, 'logsBloom': HexBytes('0x})"
      } ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "8c32d2063c90cde",
      "name" : "stdout",
      "source" : "8c32d2063c90cde.txt",
      "type" : "text/plain",
      "size" : 122
    } ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "prepare_accounts::0",
    "time" : {
      "start" : 1647627432139,
      "stop" : 1647627432139,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "allure_environment::0",
    "time" : {
      "start" : 1647627432616,
      "stop" : 1647627432617,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "Basic: transfer tests"
  }, {
    "name" : "parentSuite",
    "value" : "integration.tests.basic"
  }, {
    "name" : "suite",
    "value" : "test_transfers"
  }, {
    "name" : "subSuite",
    "value" : "TestTransfer"
  }, {
    "name" : "host",
    "value" : "fv-az129-271"
  }, {
    "name" : "thread",
    "value" : "1742-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "integration.tests.basic.test_transfers"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 4,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 1,
        "unknown" : 0,
        "total" : 6
      },
      "items" : [ {
        "uid" : "dab0c978f04b9925",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/254t/641//#testresult/dab0c978f04b9925",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1647624116462,
          "stop" : 1647624116462,
          "duration" : 0
        }
      }, {
        "uid" : "5aa0d61b312a7dbf",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/254t/635//#testresult/5aa0d61b312a7dbf",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1647623114045,
          "stop" : 1647623114045,
          "duration" : 0
        }
      }, {
        "uid" : "2f9b2a75528168f8",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/254t/632//#testresult/2f9b2a75528168f8",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1647622865440,
          "stop" : 1647622865440,
          "duration" : 0
        }
      }, {
        "uid" : "8c7bccde5bc48656",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/254t/629//#testresult/8c7bccde5bc48656",
        "status" : "broken",
        "statusDetails" : "ValueError: {'code': -32000, 'message': 'connection already closed'}",
        "time" : {
          "start" : 1647622837870,
          "stop" : 1647622838548,
          "duration" : 678
        }
      }, {
        "uid" : "5b54b39bfb01a09b",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/254t/624//#testresult/5b54b39bfb01a09b",
        "status" : "passed",
        "time" : {
          "start" : 1647622204663,
          "stop" : 1647622206511,
          "duration" : 1848
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "3ddcdbd0bba4de13.json",
  "parameterValues" : [ ]
}