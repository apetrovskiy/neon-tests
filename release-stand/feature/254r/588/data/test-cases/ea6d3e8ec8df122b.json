{
  "uid" : "ea6d3e8ec8df122b",
  "name" : "test_rpc_call_eth_getBlockByHash",
  "fullName" : "integration.tests.basic.test_blocks.TestRpcCallsBlocks#test_rpc_call_eth_getBlockByHash",
  "historyId" : "67dd2f24ec2162eee765b2dd1d070a59",
  "time" : {
    "start" : 1647274526652,
    "stop" : 1647274527931,
    "duration" : 1279
  },
  "description" : "Verify implemented rpc calls work eth_getBlockByHash",
  "descriptionHtml" : "<p>Verify implemented rpc calls work eth_getBlockByHash</p>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: <AssertMessage.CONTAINS_ERROR: 'Contains the error data'>\nassert False\n +  where False = <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_blocks.TestRpcCallsBlocks object at 0x7fc7c0f158e0>>(JsonRpcResponse(id=49, result=BlockResponse(number='0x225172', hash='0xf453802fa526bf8a59a1411e4b1ccb7c29b31ed973e7b6b...0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000'}), jsonrpc='2.0'))\n +    where <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_blocks.TestRpcCallsBlocks object at 0x7fc7c0f158e0>> = <integration.tests.basic.test_blocks.TestRpcCallsBlocks object at 0x7fc7c0f158e0>.assert_no_error_object",
  "statusTrace" : "self = <integration.tests.basic.test_blocks.TestRpcCallsBlocks object at 0x7fc7c0f158e0>\nprepare_accounts = None\n\n    def test_rpc_call_eth_getBlockByHash(self, prepare_accounts):\n        \"\"\"Verify implemented rpc calls work eth_getBlockByHash\"\"\"\n    \n        tx_receipt = self.transfer_neon(self.sender_account,\n                                        self.recipient_account,\n                                        InputData.SAMPLE_AMOUNT.value)\n    \n        params = [tx_receipt.blockHash.hex(), True]\n        model = RpcRequestFactory.get_block_by_hash(params=params)\n    \n        response = self.jsonrpc_requester.request_json_rpc(model)\n        actual_result = self.jsonrpc_requester.deserialize_response(\n            response, BlockResponse)\n    \n        assert actual_result.id == model.id, AssertMessage.WRONG_ID.value\n>       assert self.assert_no_error_object(\n            actual_result), AssertMessage.CONTAINS_ERROR\nE       AssertionError: <AssertMessage.CONTAINS_ERROR: 'Contains the error data'>\nE       assert False\nE        +  where False = <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_blocks.TestRpcCallsBlocks object at 0x7fc7c0f158e0>>(JsonRpcResponse(id=49, result=BlockResponse(number='0x225172', hash='0xf453802fa526bf8a59a1411e4b1ccb7c29b31ed973e7b6b...0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000'}), jsonrpc='2.0'))\nE        +    where <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_blocks.TestRpcCallsBlocks object at 0x7fc7c0f158e0>> = <integration.tests.basic.test_blocks.TestRpcCallsBlocks object at 0x7fc7c0f158e0>.assert_no_error_object\n\nintegration/tests/basic/test_blocks.py:57: AssertionError",
  "flaky" : false,
  "newFailed" : true,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "pytestconfig",
    "time" : {
      "start" : 1647274518699,
      "stop" : 1647274518699,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "web3_client",
    "time" : {
      "start" : 1647274518699,
      "stop" : 1647274518700,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "allure_environment",
    "time" : {
      "start" : 1647274518700,
      "stop" : 1647274519273,
      "duration" : 573
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "faucet",
    "time" : {
      "start" : 1647274519273,
      "stop" : 1647274519273,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "jsonrpc_requester",
    "time" : {
      "start" : 1647274519273,
      "stop" : 1647274519274,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare",
    "time" : {
      "start" : 1647274519274,
      "stop" : 1647274519274,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "operator",
    "time" : {
      "start" : 1647274519274,
      "stop" : 1647274519274,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "sol_client",
    "time" : {
      "start" : 1647274519274,
      "stop" : 1647274519274,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_account",
    "time" : {
      "start" : 1647274519274,
      "stop" : 1647274524931,
      "duration" : 5657
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Create account for tests",
      "time" : {
        "start" : 1647274519274,
        "stop" : 1647274519285,
        "duration" : 11
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Request 1000 NEON from faucet for 0x4B716E637190C921fa85c85115eb0894865F2a2b",
      "time" : {
        "start" : 1647274519285,
        "stop" : 1647274520680,
        "duration" : 1395
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Operator initial balance: 0.0022076904736906734958272 NEON 74064643.89941983 SOL",
      "time" : {
        "start" : 1647274524931,
        "stop" : 1647274524931,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 3,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "prepare_json_rpc_requester",
    "time" : {
      "start" : 1647274524932,
      "stop" : 1647274524932,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_accounts",
    "time" : {
      "start" : 1647274524932,
      "stop" : 1647274526651,
      "duration" : 1719
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_account",
    "time" : {
      "start" : 1647274524932,
      "stop" : 1647274524932,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "Verify implemented rpc calls work eth_getBlockByHash",
    "status" : "failed",
    "statusMessage" : "AssertionError: <AssertMessage.CONTAINS_ERROR: 'Contains the error data'>\nassert False\n +  where False = <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_blocks.TestRpcCallsBlocks object at 0x7fc7c0f158e0>>(JsonRpcResponse(id=49, result=BlockResponse(number='0x225172', hash='0xf453802fa526bf8a59a1411e4b1ccb7c29b31ed973e7b6b...0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000'}), jsonrpc='2.0'))\n +    where <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_blocks.TestRpcCallsBlocks object at 0x7fc7c0f158e0>> = <integration.tests.basic.test_blocks.TestRpcCallsBlocks object at 0x7fc7c0f158e0>.assert_no_error_object",
    "statusTrace" : "self = <integration.tests.basic.test_blocks.TestRpcCallsBlocks object at 0x7fc7c0f158e0>\nprepare_accounts = None\n\n    def test_rpc_call_eth_getBlockByHash(self, prepare_accounts):\n        \"\"\"Verify implemented rpc calls work eth_getBlockByHash\"\"\"\n    \n        tx_receipt = self.transfer_neon(self.sender_account,\n                                        self.recipient_account,\n                                        InputData.SAMPLE_AMOUNT.value)\n    \n        params = [tx_receipt.blockHash.hex(), True]\n        model = RpcRequestFactory.get_block_by_hash(params=params)\n    \n        response = self.jsonrpc_requester.request_json_rpc(model)\n        actual_result = self.jsonrpc_requester.deserialize_response(\n            response, BlockResponse)\n    \n        assert actual_result.id == model.id, AssertMessage.WRONG_ID.value\n>       assert self.assert_no_error_object(\n            actual_result), AssertMessage.CONTAINS_ERROR\nE       AssertionError: <AssertMessage.CONTAINS_ERROR: 'Contains the error data'>\nE       assert False\nE        +  where False = <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_blocks.TestRpcCallsBlocks object at 0x7fc7c0f158e0>>(JsonRpcResponse(id=49, result=BlockResponse(number='0x225172', hash='0xf453802fa526bf8a59a1411e4b1ccb7c29b31ed973e7b6b...0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000'}), jsonrpc='2.0'))\nE        +    where <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_blocks.TestRpcCallsBlocks object at 0x7fc7c0f158e0>> = <integration.tests.basic.test_blocks.TestRpcCallsBlocks object at 0x7fc7c0f158e0>.assert_no_error_object\n\nintegration/tests/basic/test_blocks.py:57: AssertionError",
    "steps" : [ {
      "name" : "Sending 4 from 0xc9e28E875EE6057cdE357d2c84E13dfaa301B12e to 0xFaD79bAB375891b2d99e3B76fF42ffAe11680075",
      "time" : {
        "start" : 1647274526652,
        "stop" : 1647274527726,
        "duration" : 1074
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Request: JsonRpcRequest(id=49, method='eth_getBlockByHash', params=['0xf453802fa526bf8a59a1411e4b1ccb7c29b31ed973e7b6b55470fd05d37c5128', True], jsonrpc='2.0')",
      "time" : {
        "start" : 1647274527726,
        "stop" : 1647274527930,
        "duration" : 204
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Response: {'jsonrpc': '2.0', 'id': 49, 'result': {'gasUsed': '0x3a98', 'hash': '0xf453802fa526bf8a59a1411e4b1ccb7c29b31ed973e7b6b55470fd05d37c5128', 'number': '0x225172', 'parentHash': '0xb2dd8006983748f2e8cfc5787319a3b264fb54bd584ea4d9ddc472118bfb00a9', 'timestamp': '0x622f6a1e', 'transactions': [{'blockHash': '0xf453802fa526bf8a59a1411e4b1ccb7c29b31ed973e7b6b55470fd05d37c5128', 'blockNumber': '0x225172', 'hash': '0x2dd845ed19ed6fc6dae79a0aead80b6f3d87cceadb7eae513c0702d3f1e42802', 'transactionIndex': '0x0', 'from': '0xc9e28e875ee6057cde357d2c84e13dfaa301b12e', 'nonce': '0x0', 'gasPrice': '0x5a068a8d00', 'gas': '0x5208', 'to': '0xfad79bab375891b2d99e3b76ff42ffae11680075', 'value': '0x3782dace9d900000', 'input': '0x', 'v': '0x102', 'r': '0x89b723fd75e2076bb7c7be56e7dfad9ec3b20d7ea3244fc5048de74f34e4c74', 's': '0x14632bca6ce6f511e8e472aeb5a2562434fff76311305ff792823151cd17e267'}], 'logsBloom': '0xgasLimit': '0x6691b7'}}",
      "time" : {
        "start" : 1647274527930,
        "stop" : 1647274527931,
        "duration" : 1
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 3,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "prepare_accounts::0",
    "time" : {
      "start" : 1647274528003,
      "stop" : 1647274528004,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_account::0",
    "time" : {
      "start" : 1647274531675,
      "stop" : 1647274536041,
      "duration" : 4366
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Operator end balance: 0.0022076904910902294958272 NEON 74064643.88841155 SOL",
      "time" : {
        "start" : 1647274535943,
        "stop" : 1647274535943,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Account end balance: 1000 NEON",
      "time" : {
        "start" : 1647274536041,
        "stop" : 1647274536041,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "allure_environment::0",
    "time" : {
      "start" : 1647274718767,
      "stop" : 1647274718767,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "Basic: Json-RPC call tests - blocks"
  }, {
    "name" : "parentSuite",
    "value" : "integration.tests.basic"
  }, {
    "name" : "suite",
    "value" : "test_blocks"
  }, {
    "name" : "subSuite",
    "value" : "TestRpcCallsBlocks"
  }, {
    "name" : "host",
    "value" : "fv-az190-764"
  }, {
    "name" : "thread",
    "value" : "1725-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "integration.tests.basic.test_blocks"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 1,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 3,
        "unknown" : 0,
        "total" : 4
      },
      "items" : [ {
        "uid" : "9fb5e071b1a7e626",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/254r/586//#testresult/9fb5e071b1a7e626",
        "status" : "passed",
        "time" : {
          "start" : 1647274183400,
          "stop" : 1647274185112,
          "duration" : 1712
        }
      }, {
        "uid" : "134e6f7f9f6afa43",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/254r/584//#testresult/134e6f7f9f6afa43",
        "status" : "passed",
        "time" : {
          "start" : 1647266529972,
          "stop" : 1647266531408,
          "duration" : 1436
        }
      }, {
        "uid" : "326a9cb14053a404",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/254r/582//#testresult/326a9cb14053a404",
        "status" : "passed",
        "time" : {
          "start" : 1647265420643,
          "stop" : 1647265422614,
          "duration" : 1971
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "ea6d3e8ec8df122b.json",
  "parameterValues" : [ ]
}