{
  "uid" : "7cc2cb5fe3f1de8f",
  "name" : "test_rpc_call_eth_gasPrice",
  "fullName" : "integration.tests.basic.test_rpc_calls.TestRpcCalls#test_rpc_call_eth_gasPrice",
  "historyId" : "246c3ce56fc1eb1466b1de3bf794aa08",
  "time" : {
    "start" : 1646260631512,
    "stop" : 1646260633778,
    "duration" : 2266
  },
  "description" : "Verify implemented rpc calls work eth_gasPrice",
  "descriptionHtml" : "<p>Verify implemented rpc calls work eth_gasPrice</p>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: The response type is error response\nassert False\n +  where False = isinstance(JsonRpcErrorResponse(id=99, error={'code': -32000, 'message': 'Failed to estimate gas price. Try again later'}, jsonrpc='2.0'), JsonRpcResponse)",
  "statusTrace" : "self = <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f41dd7cb310>\n\n    @allure.step(\"test: verify implemented rpc calls work eth_gasPrice\")\n    def test_rpc_call_eth_gasPrice(self):\n        \"\"\"Verify implemented rpc calls work eth_gasPrice\"\"\"\n        model = RpcRequestFactory.get_gas_price(params=[])\n        response = self.jsonrpc_requester.request_json_rpc(model)\n        actual_result = self.jsonrpc_requester.deserialize_response(response)\n    \n        assert actual_result.id == model.id, AssertMessage.WRONG_ID.value\n>       assert isinstance(actual_result,\n                          JsonRpcResponse), AssertMessage.WRONG_TYPE.value\nE       AssertionError: The response type is error response\nE       assert False\nE        +  where False = isinstance(JsonRpcErrorResponse(id=99, error={'code': -32000, 'message': 'Failed to estimate gas price. Try again later'}, jsonrpc='2.0'), JsonRpcResponse)\n\nintegration/tests/basic/test_rpc_calls.py:73: AssertionError",
  "flaky" : false,
  "newFailed" : true,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "web3_client",
    "time" : {
      "start" : 1646260583443,
      "stop" : 1646260583445,
      "duration" : 2
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "pytestconfig",
    "time" : {
      "start" : 1646260583443,
      "stop" : 1646260583443,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "allure_environment",
    "time" : {
      "start" : 1646260583445,
      "stop" : 1646260584338,
      "duration" : 893
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "operator",
    "time" : {
      "start" : 1646260584338,
      "stop" : 1646260584338,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "jsonrpc_requester",
    "time" : {
      "start" : 1646260584338,
      "stop" : 1646260584338,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "sol_client",
    "time" : {
      "start" : 1646260584338,
      "stop" : 1646260584338,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "faucet",
    "time" : {
      "start" : 1646260584338,
      "stop" : 1646260584338,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_account",
    "time" : {
      "start" : 1646260623307,
      "stop" : 1646260631511,
      "duration" : 8204
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Create account for tests",
      "time" : {
        "start" : 1646260623307,
        "stop" : 1646260623311,
        "duration" : 4
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Request 1000 NEON from faucet for 0x1998e3f650ce0Dc4E39EE03661218a6B157FDd52",
      "time" : {
        "start" : 1646260623311,
        "stop" : 1646260624071,
        "duration" : 760
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Operator initial balance: 1046347470.8821913 NEON 13226.08349444 SOL",
      "time" : {
        "start" : 1646260631511,
        "stop" : 1646260631511,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 3,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "prepare",
    "time" : {
      "start" : 1646260623307,
      "stop" : 1646260623307,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_json_rpc_requester",
    "time" : {
      "start" : 1646260631511,
      "stop" : 1646260631511,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_account",
    "time" : {
      "start" : 1646260631511,
      "stop" : 1646260631511,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "Verify implemented rpc calls work eth_gasPrice",
    "status" : "failed",
    "statusMessage" : "AssertionError: The response type is error response\nassert False\n +  where False = isinstance(JsonRpcErrorResponse(id=99, error={'code': -32000, 'message': 'Failed to estimate gas price. Try again later'}, jsonrpc='2.0'), JsonRpcResponse)",
    "statusTrace" : "self = <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f41dd7cb310>\n\n    @allure.step(\"test: verify implemented rpc calls work eth_gasPrice\")\n    def test_rpc_call_eth_gasPrice(self):\n        \"\"\"Verify implemented rpc calls work eth_gasPrice\"\"\"\n        model = RpcRequestFactory.get_gas_price(params=[])\n        response = self.jsonrpc_requester.request_json_rpc(model)\n        actual_result = self.jsonrpc_requester.deserialize_response(response)\n    \n        assert actual_result.id == model.id, AssertMessage.WRONG_ID.value\n>       assert isinstance(actual_result,\n                          JsonRpcResponse), AssertMessage.WRONG_TYPE.value\nE       AssertionError: The response type is error response\nE       assert False\nE        +  where False = isinstance(JsonRpcErrorResponse(id=99, error={'code': -32000, 'message': 'Failed to estimate gas price. Try again later'}, jsonrpc='2.0'), JsonRpcResponse)\n\nintegration/tests/basic/test_rpc_calls.py:73: AssertionError",
    "steps" : [ {
      "name" : "test: verify implemented rpc calls work eth_gasPrice",
      "time" : {
        "start" : 1646260631512,
        "stop" : 1646260633777,
        "duration" : 2265
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: The response type is error response\nassert False\n +  where False = isinstance(JsonRpcErrorResponse(id=99, error={'code': -32000, 'message': 'Failed to estimate gas price. Try again later'}, jsonrpc='2.0'), JsonRpcResponse)\n",
      "statusTrace" : "  File \"/opt/hostedtoolcache/Python/3.9.10/x64/lib/python3.9/site-packages/allure_commons/_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"/home/runner/work/neon-tests/neon-tests/integration/tests/basic/test_rpc_calls.py\", line 73, in test_rpc_call_eth_gasPrice\n    assert isinstance(actual_result,\n",
      "steps" : [ {
        "name" : "the model built",
        "time" : {
          "start" : 1646260631512,
          "stop" : 1646260631512,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "requesting Json-RPC",
        "time" : {
          "start" : 1646260631512,
          "stop" : 1646260633777,
          "duration" : 2265
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "getting response",
          "time" : {
            "start" : 1646260631512,
            "stop" : 1646260633777,
            "duration" : 2265
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "data",
          "value" : "JsonRpcRequest(id=99, method='eth_gasPrice', params=[], jsonrpc='2.0')"
        } ],
        "stepsCount" : 1,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "deserializing response from JSON",
        "time" : {
          "start" : 1646260633777,
          "stop" : 1646260633777,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "showing as JSON",
          "time" : {
            "start" : 1646260633777,
            "stop" : 1646260633777,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ {
            "name" : "data",
            "value" : "{'jsonrpc': '2.0', 'id': 99, 'error': {'code': -32000, 'message': 'Failed to estimate gas price. Try again later'}}"
          } ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : true
        }, {
          "name" : "deserialized",
          "time" : {
            "start" : 1646260633777,
            "stop" : 1646260633777,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "response",
          "value" : "<Response [200]>"
        } ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 6,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 7,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "prepare_account::0",
    "time" : {
      "start" : 1646260634106,
      "stop" : 1646260641649,
      "duration" : 7543
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Operator end balance: 1046346470.8821913 NEON 13226.08349444 SOL",
      "time" : {
        "start" : 1646260641522,
        "stop" : 1646260641522,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Account end balance: 1000 NEON",
      "time" : {
        "start" : 1646260641649,
        "stop" : 1646260641649,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "allure_environment::0",
    "time" : {
      "start" : 1646260739435,
      "stop" : 1646260739435,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "Basic: Json-RPC call tests"
  }, {
    "name" : "parentSuite",
    "value" : "integration.tests.basic"
  }, {
    "name" : "suite",
    "value" : "test_rpc_calls"
  }, {
    "name" : "subSuite",
    "value" : "TestRpcCalls"
  }, {
    "name" : "host",
    "value" : "fv-az173-992"
  }, {
    "name" : "thread",
    "value" : "1729-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "integration.tests.basic.test_rpc_calls"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 1,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 16,
        "unknown" : 0,
        "total" : 17
      },
      "items" : [ {
        "uid" : "8d7974623e361d74",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/254d/264//#testresult/8d7974623e361d74",
        "status" : "passed",
        "time" : {
          "start" : 1646259676594,
          "stop" : 1646259676805,
          "duration" : 211
        }
      }, {
        "uid" : "dd51bfc9b7da9322",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/254d/262//#testresult/dd51bfc9b7da9322",
        "status" : "passed",
        "time" : {
          "start" : 1646258315457,
          "stop" : 1646258315704,
          "duration" : 247
        }
      }, {
        "uid" : "cb907f87a27f23f1",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/254d/260//#testresult/cb907f87a27f23f1",
        "status" : "passed",
        "time" : {
          "start" : 1646257636485,
          "stop" : 1646257637152,
          "duration" : 667
        }
      }, {
        "uid" : "1fd83686ff07389a",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/254d/258//#testresult/1fd83686ff07389a",
        "status" : "passed",
        "time" : {
          "start" : 1646257116269,
          "stop" : 1646257116517,
          "duration" : 248
        }
      }, {
        "uid" : "845820e7c231fff",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/254d/256//#testresult/845820e7c231fff",
        "status" : "passed",
        "time" : {
          "start" : 1646255965375,
          "stop" : 1646255965588,
          "duration" : 213
        }
      }, {
        "uid" : "386a5d2c3fc23c57",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/254d/254//#testresult/386a5d2c3fc23c57",
        "status" : "passed",
        "time" : {
          "start" : 1646255150988,
          "stop" : 1646255151556,
          "duration" : 568
        }
      }, {
        "uid" : "529274622b5131f7",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/254d/252//#testresult/529274622b5131f7",
        "status" : "passed",
        "time" : {
          "start" : 1646254449316,
          "stop" : 1646254449480,
          "duration" : 164
        }
      }, {
        "uid" : "b54af4c44805889b",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/254d/250//#testresult/b54af4c44805889b",
        "status" : "passed",
        "time" : {
          "start" : 1646253865147,
          "stop" : 1646253865796,
          "duration" : 649
        }
      }, {
        "uid" : "48881b9a8c520292",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/254d/248//#testresult/48881b9a8c520292",
        "status" : "passed",
        "time" : {
          "start" : 1646246397071,
          "stop" : 1646246397326,
          "duration" : 255
        }
      }, {
        "uid" : "82630d9f0c419f68",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/254d/246//#testresult/82630d9f0c419f68",
        "status" : "passed",
        "time" : {
          "start" : 1646244992452,
          "stop" : 1646244993159,
          "duration" : 707
        }
      }, {
        "uid" : "ea031b89232a0fcc",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/254d/244//#testresult/ea031b89232a0fcc",
        "status" : "passed",
        "time" : {
          "start" : 1646243795860,
          "stop" : 1646243796105,
          "duration" : 245
        }
      }, {
        "uid" : "4864acf68f28af6a",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/254d/242//#testresult/4864acf68f28af6a",
        "status" : "passed",
        "time" : {
          "start" : 1646243166786,
          "stop" : 1646243166965,
          "duration" : 179
        }
      }, {
        "uid" : "776ad24e488a95ff",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/254d/240//#testresult/776ad24e488a95ff",
        "status" : "passed",
        "time" : {
          "start" : 1646241058127,
          "stop" : 1646241058371,
          "duration" : 244
        }
      }, {
        "uid" : "92e9a133fa1de13f",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/254d/238//#testresult/92e9a133fa1de13f",
        "status" : "passed",
        "time" : {
          "start" : 1646240430475,
          "stop" : 1646240430664,
          "duration" : 189
        }
      }, {
        "uid" : "b066072d8f9a1b16",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/254d/236//#testresult/b066072d8f9a1b16",
        "status" : "passed",
        "time" : {
          "start" : 1646235559123,
          "stop" : 1646235559316,
          "duration" : 193
        }
      }, {
        "uid" : "76e3f91a86587fb2",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/254d/234//#testresult/76e3f91a86587fb2",
        "status" : "passed",
        "time" : {
          "start" : 1646219378210,
          "stop" : 1646219378458,
          "duration" : 248
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "7cc2cb5fe3f1de8f.json",
  "parameterValues" : [ ]
}