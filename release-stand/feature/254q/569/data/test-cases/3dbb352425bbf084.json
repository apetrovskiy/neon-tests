{
  "uid" : "3dbb352425bbf084",
  "name" : "test_send_token_to_an_invalid_address",
  "fullName" : "integration.tests.basic.test_transfers.TestTransfer#test_send_token_to_an_invalid_address",
  "historyId" : "7414a102f68be6a72f24569f8e6cae78",
  "time" : {
    "start" : 1647258546014,
    "stop" : 1647258547017,
    "duration" : 1003
  },
  "description" : "Send token to an invalid address",
  "descriptionHtml" : "<p>Send token to an invalid address</p>\n",
  "status" : "broken",
  "statusMessage" : "AttributeError: 'str' object has no attribute 'address'",
  "statusTrace" : "self = <integration.tests.basic.test_transfers.TestTransfer object at 0x7f58e708e100>\n\n    @allure.step(\"test: send token to an invalid address\")\n    def test_send_token_to_an_invalid_address(self):\n        \"\"\"Send token to an invalid address\"\"\"\n        sender_account = self.create_account_with_balance()\n    \n    \n    \n>       self.process_transaction_with_failure(sender_account,INVALID_ADDRESS, InputData.DEFAULT_TRANSFER_AMOUNT.value, ENS_NAME_ERROR)\n\nintegration/tests/basic/test_transfers.py:132: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <integration.tests.basic.test_transfers.TestTransfer object at 0x7f58e708e100>\nsender_account = <eth_account.signers.local.LocalAccount object at 0x7f58e708ecd0>\nrecipient_account = '0x12345', amount = 3\nerror_message = \"ENS name: '0x12345' is invalid.\"\n\n    def process_transaction_with_failure(\n            self,\n            sender_account: Account,\n            recipient_account: Account,\n            amount: int,\n            error_message: str = \"\") -> Union[web3.types.TxReceipt, None]:\n        '''Processes transaction, expects a failure'''\n    \n        tx: Union[web3.types.TxReceipt, None] = None\n>       with allure.step( f\"Sending {amount} from {sender_account.address} to {recipient_account.address}\"):\nE       AttributeError: 'str' object has no attribute 'address'\n\nintegration/tests/basic/helpers/basic.py:93: AttributeError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : true,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "pytestconfig",
    "time" : {
      "start" : 1647258356374,
      "stop" : 1647258356374,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "web3_client",
    "time" : {
      "start" : 1647258356374,
      "stop" : 1647258356376,
      "duration" : 2
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "allure_environment",
    "time" : {
      "start" : 1647258356376,
      "stop" : 1647258356987,
      "duration" : 611
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "faucet",
    "time" : {
      "start" : 1647258356987,
      "stop" : 1647258356988,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "operator",
    "time" : {
      "start" : 1647258356988,
      "stop" : 1647258356988,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "jsonrpc_requester",
    "time" : {
      "start" : 1647258356988,
      "stop" : 1647258356988,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "sol_client",
    "time" : {
      "start" : 1647258356988,
      "stop" : 1647258356988,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_account",
    "time" : {
      "start" : 1647258523250,
      "stop" : 1647258528246,
      "duration" : 4996
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Create account for tests",
      "time" : {
        "start" : 1647258523250,
        "stop" : 1647258523254,
        "duration" : 4
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Request 1000 NEON from faucet for 0x62D71fE205C095dAa4A96df969d7E66E8fc776ed",
      "time" : {
        "start" : 1647258523254,
        "stop" : 1647258523957,
        "duration" : 703
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Operator initial balance: 0.0022059890164854828958272 NEON 74064652.6853946 SOL",
      "time" : {
        "start" : 1647258528246,
        "stop" : 1647258528246,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 3,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "prepare",
    "time" : {
      "start" : 1647258546014,
      "stop" : 1647258546014,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_json_rpc_requester",
    "time" : {
      "start" : 1647258546014,
      "stop" : 1647258546014,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_account",
    "time" : {
      "start" : 1647258546014,
      "stop" : 1647258546014,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "Send token to an invalid address",
    "status" : "broken",
    "statusMessage" : "AttributeError: 'str' object has no attribute 'address'",
    "statusTrace" : "self = <integration.tests.basic.test_transfers.TestTransfer object at 0x7f58e708e100>\n\n    @allure.step(\"test: send token to an invalid address\")\n    def test_send_token_to_an_invalid_address(self):\n        \"\"\"Send token to an invalid address\"\"\"\n        sender_account = self.create_account_with_balance()\n    \n    \n    \n>       self.process_transaction_with_failure(sender_account,INVALID_ADDRESS, InputData.DEFAULT_TRANSFER_AMOUNT.value, ENS_NAME_ERROR)\n\nintegration/tests/basic/test_transfers.py:132: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <integration.tests.basic.test_transfers.TestTransfer object at 0x7f58e708e100>\nsender_account = <eth_account.signers.local.LocalAccount object at 0x7f58e708ecd0>\nrecipient_account = '0x12345', amount = 3\nerror_message = \"ENS name: '0x12345' is invalid.\"\n\n    def process_transaction_with_failure(\n            self,\n            sender_account: Account,\n            recipient_account: Account,\n            amount: int,\n            error_message: str = \"\") -> Union[web3.types.TxReceipt, None]:\n        '''Processes transaction, expects a failure'''\n    \n        tx: Union[web3.types.TxReceipt, None] = None\n>       with allure.step( f\"Sending {amount} from {sender_account.address} to {recipient_account.address}\"):\nE       AttributeError: 'str' object has no attribute 'address'\n\nintegration/tests/basic/helpers/basic.py:93: AttributeError",
    "steps" : [ {
      "name" : "test: send token to an invalid address",
      "time" : {
        "start" : 1647258546014,
        "stop" : 1647258547016,
        "duration" : 1002
      },
      "status" : "broken",
      "statusMessage" : "AttributeError: 'str' object has no attribute 'address'\n",
      "statusTrace" : "  File \"/opt/hostedtoolcache/Python/3.9.10/x64/lib/python3.9/site-packages/allure_commons/_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"/home/runner/work/neon-tests/neon-tests/integration/tests/basic/test_transfers.py\", line 132, in test_send_token_to_an_invalid_address\n    self.process_transaction_with_failure(sender_account,INVALID_ADDRESS, InputData.DEFAULT_TRANSFER_AMOUNT.value, ENS_NAME_ERROR)\n  File \"/home/runner/work/neon-tests/neon-tests/integration/tests/basic/helpers/basic.py\", line 93, in process_transaction_with_failure\n    with allure.step( f\"Sending {amount} from {sender_account.address} to {recipient_account.address}\"):\n",
      "steps" : [ {
        "name" : "requesting faucet for Neon",
        "time" : {
          "start" : 1647258546019,
          "stop" : 1647258547016,
          "duration" : 997
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "wallet",
          "value" : "'0x4C3aBAE6934E9128acc2bf15F1F5c40ee007BB30'"
        }, {
          "name" : "amount",
          "value" : "5"
        } ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 1,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "prepare_account::0",
    "time" : {
      "start" : 1647258547709,
      "stop" : 1647258552079,
      "duration" : 4370
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Operator end balance: 0.0022059890397945938398272 NEON 74064652.57402276 SOL",
      "time" : {
        "start" : 1647258551981,
        "stop" : 1647258551981,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Account end balance: 1000 NEON",
      "time" : {
        "start" : 1647258552079,
        "stop" : 1647258552079,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "allure_environment::0",
    "time" : {
      "start" : 1647258552085,
      "stop" : 1647258552085,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "Basic: transfer tests"
  }, {
    "name" : "parentSuite",
    "value" : "integration.tests.basic"
  }, {
    "name" : "suite",
    "value" : "test_transfers"
  }, {
    "name" : "subSuite",
    "value" : "TestTransfer"
  }, {
    "name" : "host",
    "value" : "fv-az193-234"
  }, {
    "name" : "thread",
    "value" : "1737-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "integration.tests.basic.test_transfers"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 2,
        "unknown" : 0,
        "total" : 3
      },
      "items" : [ {
        "uid" : "42164fd4568945bd",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/254q/567//#testresult/42164fd4568945bd",
        "status" : "passed",
        "time" : {
          "start" : 1647257784486,
          "stop" : 1647257785389,
          "duration" : 903
        }
      }, {
        "uid" : "191ec8cb2f1722f",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/release-stand/feature/254q/565//#testresult/191ec8cb2f1722f",
        "status" : "passed",
        "time" : {
          "start" : 1647256952415,
          "stop" : 1647256953448,
          "duration" : 1033
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "3dbb352425bbf084.json",
  "parameterValues" : [ ]
}