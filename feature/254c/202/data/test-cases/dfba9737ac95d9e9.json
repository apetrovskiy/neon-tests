{
  "uid" : "dfba9737ac95d9e9",
  "name" : "test_rpc_call_eth_gasPrice",
  "fullName" : "integration.tests.basic.test_rpc_calls.TestRpcCalls#test_rpc_call_eth_gasPrice",
  "historyId" : "246c3ce56fc1eb1466b1de3bf794aa08",
  "time" : {
    "start" : 1645683240577,
    "stop" : 1645683242709,
    "duration" : 2132
  },
  "description" : "Verify implemented rpc calls work eth_gasPrice",
  "descriptionHtml" : "<p>Verify implemented rpc calls work eth_gasPrice</p>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: The response type is error response\nassert False\n +  where False = isinstance(JsonRpcErrorResponse(id=48, error={'code': -32000, 'message': 'Failed to estimate gas price. Try again later'}, jsonrpc='2.0'), JsonRpcResponse)",
  "statusTrace" : "self = <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f2a5412bd00>\n\n    @allure.step(\"test: verify implemented rpc calls work eth_gasPrice\")\n    def test_rpc_call_eth_gasPrice(self):\n        \"\"\"Verify implemented rpc calls work eth_gasPrice\"\"\"\n        model = RpcRequestFactory.get_gas_price(params=[])\n        response = self.jsonrpc_requester.request_json_rpc(model)\n        actual_result = self.jsonrpc_requester.deserialize_response(response)\n    \n        assert actual_result.id == model.id, AssertMessage.WRONG_ID.value\n>       assert isinstance(actual_result,\n                          JsonRpcResponse), AssertMessage.WRONG_TYPE.value\nE       AssertionError: The response type is error response\nE       assert False\nE        +  where False = isinstance(JsonRpcErrorResponse(id=48, error={'code': -32000, 'message': 'Failed to estimate gas price. Try again later'}, jsonrpc='2.0'), JsonRpcResponse)\n\nintegration/tests/basic/test_rpc_calls.py:73: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "web3_client",
    "time" : {
      "start" : 1645683234561,
      "stop" : 1645683234563,
      "duration" : 2
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "pytestconfig",
    "time" : {
      "start" : 1645683234561,
      "stop" : 1645683234561,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "allure_environment",
    "time" : {
      "start" : 1645683234563,
      "stop" : 1645683235414,
      "duration" : 851
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "operator",
    "time" : {
      "start" : 1645683235415,
      "stop" : 1645683235416,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "jsonrpc_requester",
    "time" : {
      "start" : 1645683235415,
      "stop" : 1645683235415,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "faucet",
    "time" : {
      "start" : 1645683235415,
      "stop" : 1645683235415,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "sol_client",
    "time" : {
      "start" : 1645683235416,
      "stop" : 1645683235416,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "sol_price",
    "time" : {
      "start" : 1645683235417,
      "stop" : 1645683235855,
      "duration" : 438
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "SOL price 81.625159$",
      "time" : {
        "start" : 1645683235855,
        "stop" : 1645683235855,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "prepare_account",
    "time" : {
      "start" : 1645683239297,
      "stop" : 1645683240576,
      "duration" : 1279
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Create account for tests",
      "time" : {
        "start" : 1645683239297,
        "stop" : 1645683239301,
        "duration" : 4
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Request 1000 NEON from faucet for 0xa69ee28dF42721b6c875a745090d3E7fA9C0aB50",
      "time" : {
        "start" : 1645683239301,
        "stop" : 1645683240061,
        "duration" : 760
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Operator initial balance: 942629571.9722102 NEON 2120.99262984 SOL",
      "time" : {
        "start" : 1645683240576,
        "stop" : 1645683240576,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 3,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "prepare",
    "time" : {
      "start" : 1645683239297,
      "stop" : 1645683239297,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_json_rpc_requester",
    "time" : {
      "start" : 1645683240576,
      "stop" : 1645683240576,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_account",
    "time" : {
      "start" : 1645683240576,
      "stop" : 1645683240576,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "Verify implemented rpc calls work eth_gasPrice",
    "status" : "failed",
    "statusMessage" : "AssertionError: The response type is error response\nassert False\n +  where False = isinstance(JsonRpcErrorResponse(id=48, error={'code': -32000, 'message': 'Failed to estimate gas price. Try again later'}, jsonrpc='2.0'), JsonRpcResponse)",
    "statusTrace" : "self = <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f2a5412bd00>\n\n    @allure.step(\"test: verify implemented rpc calls work eth_gasPrice\")\n    def test_rpc_call_eth_gasPrice(self):\n        \"\"\"Verify implemented rpc calls work eth_gasPrice\"\"\"\n        model = RpcRequestFactory.get_gas_price(params=[])\n        response = self.jsonrpc_requester.request_json_rpc(model)\n        actual_result = self.jsonrpc_requester.deserialize_response(response)\n    \n        assert actual_result.id == model.id, AssertMessage.WRONG_ID.value\n>       assert isinstance(actual_result,\n                          JsonRpcResponse), AssertMessage.WRONG_TYPE.value\nE       AssertionError: The response type is error response\nE       assert False\nE        +  where False = isinstance(JsonRpcErrorResponse(id=48, error={'code': -32000, 'message': 'Failed to estimate gas price. Try again later'}, jsonrpc='2.0'), JsonRpcResponse)\n\nintegration/tests/basic/test_rpc_calls.py:73: AssertionError",
    "steps" : [ {
      "name" : "test: verify implemented rpc calls work eth_gasPrice",
      "time" : {
        "start" : 1645683240577,
        "stop" : 1645683242708,
        "duration" : 2131
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: The response type is error response\nassert False\n +  where False = isinstance(JsonRpcErrorResponse(id=48, error={'code': -32000, 'message': 'Failed to estimate gas price. Try again later'}, jsonrpc='2.0'), JsonRpcResponse)\n",
      "statusTrace" : "  File \"/opt/hostedtoolcache/Python/3.9.10/x64/lib/python3.9/site-packages/allure_commons/_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"/home/runner/work/neon-tests/neon-tests/integration/tests/basic/test_rpc_calls.py\", line 73, in test_rpc_call_eth_gasPrice\n    assert isinstance(actual_result,\n",
      "steps" : [ {
        "name" : "the model built",
        "time" : {
          "start" : 1645683240577,
          "stop" : 1645683240578,
          "duration" : 1
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "requesting Json-RPC",
        "time" : {
          "start" : 1645683240578,
          "stop" : 1645683242708,
          "duration" : 2130
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "getting response",
          "time" : {
            "start" : 1645683240578,
            "stop" : 1645683242708,
            "duration" : 2130
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "data",
          "value" : "JsonRpcRequest(id=48, method='eth_gasPrice', params=[], jsonrpc='2.0')"
        } ],
        "stepsCount" : 1,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "deserializing response from JSON",
        "time" : {
          "start" : 1645683242708,
          "stop" : 1645683242708,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "showing as JSON",
          "time" : {
            "start" : 1645683242708,
            "stop" : 1645683242708,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ {
            "name" : "data",
            "value" : "{'jsonrpc': '2.0', 'id': 48, 'error': {'code': -32000, 'message': 'Failed to estimate gas price. Try again later'}}"
          } ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : true
        }, {
          "name" : "deserialized",
          "time" : {
            "start" : 1645683242708,
            "stop" : 1645683242708,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "response",
          "value" : "<Response [200]>"
        } ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 6,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 7,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "prepare_account::0",
    "time" : {
      "start" : 1645683243127,
      "stop" : 1645683243755,
      "duration" : 628
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Operator end balance: 942629571.9722102 NEON 2120.99262984 SOL",
      "time" : {
        "start" : 1645683243628,
        "stop" : 1645683243628,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Account end balance: 1000 NEON",
      "time" : {
        "start" : 1645683243755,
        "stop" : 1645683243755,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "allure_environment::0",
    "time" : {
      "start" : 1645683295919,
      "stop" : 1645683295920,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "Basic: Json-RPC call tests"
  }, {
    "name" : "parentSuite",
    "value" : "integration.tests.basic"
  }, {
    "name" : "suite",
    "value" : "test_rpc_calls"
  }, {
    "name" : "subSuite",
    "value" : "TestRpcCalls"
  }, {
    "name" : "host",
    "value" : "fv-az173-681"
  }, {
    "name" : "thread",
    "value" : "1776-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "integration.tests.basic.test_rpc_calls"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 3,
        "broken" : 2,
        "skipped" : 6,
        "passed" : 0,
        "unknown" : 0,
        "total" : 11
      },
      "items" : [ {
        "uid" : "1e6bb3f999fd2e94",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/feature/254c/200//#testresult/1e6bb3f999fd2e94",
        "status" : "failed",
        "statusDetails" : "AssertionError: The response type is error response\nassert False\n +  where False = isinstance(JsonRpcErrorResponse(id=19, error={'code': -32000, 'message': 'Failed to estimate gas price. Try again later'}, jsonrpc='2.0'), JsonRpcResponse)",
        "time" : {
          "start" : 1645643248840,
          "stop" : 1645643250940,
          "duration" : 2100
        }
      }, {
        "uid" : "4365321f534452de",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/feature/254c/198//#testresult/4365321f534452de",
        "status" : "failed",
        "statusDetails" : "AssertionError: The response type is error response\nassert <class 'integ...rrorResponse'> == <class 'type'>\n  (pytest_assertion plugin: representation of details failed: /opt/hostedtoolcache/Python/3.9.10/x64/lib/python3.9/site-packages/_pytest/assertion/util.py:430: AttributeError: type object 'JsonRpcErrorResponse' has no attribute 'id'.\n   Probably an object has a faulty __repr__.)",
        "time" : {
          "start" : 1645642198719,
          "stop" : 1645642200819,
          "duration" : 2100
        }
      }, {
        "uid" : "86876ca49f76cf8e",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/feature/254c/196//#testresult/86876ca49f76cf8e",
        "status" : "broken",
        "statusDetails" : "TypeError: __init__() missing 1 required positional argument: 'result'",
        "time" : {
          "start" : 1645640628832,
          "stop" : 1645640630962,
          "duration" : 2130
        }
      }, {
        "uid" : "42b4d9e9083ffc85",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/feature/254c/194//#testresult/42b4d9e9083ffc85",
        "status" : "broken",
        "statusDetails" : "TypeError: __init__() got an unexpected keyword argument 'error'",
        "time" : {
          "start" : 1645640218080,
          "stop" : 1645640220179,
          "duration" : 2099
        }
      }, {
        "uid" : "82ac06ac8b3f8760",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/feature/254c/192//#testresult/82ac06ac8b3f8760",
        "status" : "skipped",
        "statusDetails" : "Skipped: not yet done",
        "time" : {
          "start" : 1645639702896,
          "stop" : 1645639702896,
          "duration" : 0
        }
      }, {
        "uid" : "a3f020f780c21851",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/feature/254c/188//#testresult/a3f020f780c21851",
        "status" : "skipped",
        "statusDetails" : "Skipped: not yet done",
        "time" : {
          "start" : 1645638503280,
          "stop" : 1645638503280,
          "duration" : 0
        }
      }, {
        "uid" : "c10162df9d56725e",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/feature/254c/186//#testresult/c10162df9d56725e",
        "status" : "skipped",
        "statusDetails" : "Skipped: not yet done",
        "time" : {
          "start" : 1645635975723,
          "stop" : 1645635975723,
          "duration" : 0
        }
      }, {
        "uid" : "bdef2b4b82f3bacd",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/feature/254c/184//#testresult/bdef2b4b82f3bacd",
        "status" : "skipped",
        "statusDetails" : "Skipped: not yet done",
        "time" : {
          "start" : 1645608088815,
          "stop" : 1645608088815,
          "duration" : 0
        }
      }, {
        "uid" : "71633581799a5c70",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/feature/254c/182//#testresult/71633581799a5c70",
        "status" : "skipped",
        "statusDetails" : "Skipped: not yet done",
        "time" : {
          "start" : 1645607702731,
          "stop" : 1645607702731,
          "duration" : 0
        }
      }, {
        "uid" : "52df4b57cb44790a",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/feature/254c/181//#testresult/52df4b57cb44790a",
        "status" : "skipped",
        "statusDetails" : "Skipped: not yet done",
        "time" : {
          "start" : 1645607067956,
          "stop" : 1645607067956,
          "duration" : 0
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "dfba9737ac95d9e9.json",
  "parameterValues" : [ ]
}