{
  "uid" : "4cd91d89f2b28163",
  "name" : "test_send_neon_from_one_account_to_another[0.01]",
  "fullName" : "integration.tests.basic.test_transfers.TestTransfer#test_send_neon_from_one_account_to_another",
  "historyId" : "468859a02cbbf36eb35dac8ca17be612",
  "time" : {
    "start" : 1650631797554,
    "stop" : 1650631800969,
    "duration" : 3415
  },
  "description" : "Send neon from one account to another",
  "descriptionHtml" : "<p>Send neon from one account to another</p>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: expected balance = 9999.056, actual balance = 9999.055",
  "statusTrace" : "self = <integration.tests.basic.test_transfers.TestTransfer object at 0x7f2bcbc30430>\namount = 0.01\n\n        @pytest.mark.parametrize(\"amount\", TRANSFER_AMOUNT_DATA)\n    # <<<<<<< HEAD\n    #     def test_send_neon_from_one_account_to_another(self, amount: Union[int, float]):\n    #         \"\"\"Send neon from one account to another\"\"\"\n    \n    #         tx_receipt = self.process_transaction(self.sender_account, self.recipient_account, amount)\n    \n    #         self.assert_balance(\n    #             self.sender_account.address,\n    #             InputData.FAUCET_1ST_REQUEST_AMOUNT.value - amount - self.calculate_trx_gas(tx_receipt=tx_receipt),\n    #         )\n    #         self.assert_balance(self.recipient_account.address, InputData.FAUCET_1ST_REQUEST_AMOUNT.value + amount)\n    # =======\n        def test_send_neon_from_one_account_to_another(self, amount: Union[int, float]):\n            \"\"\"Send neon from one account to another\"\"\"\n            sender_balance = float(self.web3_client.fromWei(self.get_balance(self.sender_account.address), \"ether\"))\n            recipient_balance = float(self.web3_client.fromWei(self.get_balance(self.recipient_account.address), \"ether\"))\n            tx_receipt = self.transfer_neon(self.sender_account, self.recipient_account, amount)\n>           self.assert_balance(\n                self.sender_account.address,\n                sender_balance - amount - self.calculate_trx_gas(tx_receipt=tx_receipt),\n                rnd_dig=3,\n            )\n\nintegration/tests/basic/test_transfers.py:65: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nintegration/tests/basic/helpers/basic.py:193: in assert_balance\n    self.check_balance(expected_amount, balance, rnd_dig=rnd_dig)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nexpected = 9999.05558368208, actual = 9999.05526092208, rnd_dig = 3\n\n    @staticmethod\n    def check_balance(expected: float, actual: Decimal, rnd_dig: int = InputData.ROUND_DIGITS.value):\n        \"\"\"Compares the balance with expectation\"\"\"\n        expected_dec = round(expected, rnd_dig)\n        # TODO: added float()\n        actual_dec =float( round(actual, rnd_dig))\n    \n>       assert actual_dec == expected_dec, f\"expected balance = {expected_dec}, actual balance = {actual_dec}\"\nE       AssertionError: expected balance = 9999.056, actual balance = 9999.055\n\nintegration/tests/basic/helpers/basic.py:249: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "pytestconfig",
    "time" : {
      "start" : 1650631598209,
      "stop" : 1650631598209,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "web3_client",
    "time" : {
      "start" : 1650631598209,
      "stop" : 1650631598211,
      "duration" : 2
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "allure_environment",
    "time" : {
      "start" : 1650631598211,
      "stop" : 1650631599286,
      "duration" : 1075
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "faucet",
    "time" : {
      "start" : 1650631599286,
      "stop" : 1650631599287,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "operator",
    "time" : {
      "start" : 1650631599287,
      "stop" : 1650631599287,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "sol_client",
    "time" : {
      "start" : 1650631599287,
      "stop" : 1650631599287,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "json_rpc_client",
    "time" : {
      "start" : 1650631599287,
      "stop" : 1650631599287,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_account",
    "time" : {
      "start" : 1650631789254,
      "stop" : 1650631797552,
      "duration" : 8298
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Create account for tests",
      "time" : {
        "start" : 1650631789254,
        "stop" : 1650631789261,
        "duration" : 7
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Request 1000 NEON from faucet for 0xBe5E36B1fa3e887EA51946045243e42c0356C9c8",
      "time" : {
        "start" : 1650631789261,
        "stop" : 1650631790112,
        "duration" : 851
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Operator initial balance: 0.007822300933604775660288 NEON 60725.92826724 SOL",
      "time" : {
        "start" : 1650631797552,
        "stop" : 1650631797552,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 3,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "prepare",
    "time" : {
      "start" : 1650631789254,
      "stop" : 1650631789254,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_env",
    "time" : {
      "start" : 1650631797553,
      "stop" : 1650631797553,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_account",
    "time" : {
      "start" : 1650631797553,
      "stop" : 1650631797553,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "Send neon from one account to another",
    "status" : "failed",
    "statusMessage" : "AssertionError: expected balance = 9999.056, actual balance = 9999.055",
    "statusTrace" : "self = <integration.tests.basic.test_transfers.TestTransfer object at 0x7f2bcbc30430>\namount = 0.01\n\n        @pytest.mark.parametrize(\"amount\", TRANSFER_AMOUNT_DATA)\n    # <<<<<<< HEAD\n    #     def test_send_neon_from_one_account_to_another(self, amount: Union[int, float]):\n    #         \"\"\"Send neon from one account to another\"\"\"\n    \n    #         tx_receipt = self.process_transaction(self.sender_account, self.recipient_account, amount)\n    \n    #         self.assert_balance(\n    #             self.sender_account.address,\n    #             InputData.FAUCET_1ST_REQUEST_AMOUNT.value - amount - self.calculate_trx_gas(tx_receipt=tx_receipt),\n    #         )\n    #         self.assert_balance(self.recipient_account.address, InputData.FAUCET_1ST_REQUEST_AMOUNT.value + amount)\n    # =======\n        def test_send_neon_from_one_account_to_another(self, amount: Union[int, float]):\n            \"\"\"Send neon from one account to another\"\"\"\n            sender_balance = float(self.web3_client.fromWei(self.get_balance(self.sender_account.address), \"ether\"))\n            recipient_balance = float(self.web3_client.fromWei(self.get_balance(self.recipient_account.address), \"ether\"))\n            tx_receipt = self.transfer_neon(self.sender_account, self.recipient_account, amount)\n>           self.assert_balance(\n                self.sender_account.address,\n                sender_balance - amount - self.calculate_trx_gas(tx_receipt=tx_receipt),\n                rnd_dig=3,\n            )\n\nintegration/tests/basic/test_transfers.py:65: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nintegration/tests/basic/helpers/basic.py:193: in assert_balance\n    self.check_balance(expected_amount, balance, rnd_dig=rnd_dig)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nexpected = 9999.05558368208, actual = 9999.05526092208, rnd_dig = 3\n\n    @staticmethod\n    def check_balance(expected: float, actual: Decimal, rnd_dig: int = InputData.ROUND_DIGITS.value):\n        \"\"\"Compares the balance with expectation\"\"\"\n        expected_dec = round(expected, rnd_dig)\n        # TODO: added float()\n        actual_dec =float( round(actual, rnd_dig))\n    \n>       assert actual_dec == expected_dec, f\"expected balance = {expected_dec}, actual balance = {actual_dec}\"\nE       AssertionError: expected balance = 9999.056, actual balance = 9999.055\n\nintegration/tests/basic/helpers/basic.py:249: AssertionError",
    "steps" : [ {
      "name" : "Sending 0.01 from 0x25f6Eff26c24DBbe051236C6f33c7Fd1e29d440B to 0x13aF2C6De2860a21AB31BD59d3857259352F7DbB",
      "time" : {
        "start" : 1650631797900,
        "stop" : 1650631800636,
        "duration" : 2736
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "calculating gas",
      "time" : {
        "start" : 1650631800637,
        "stop" : 1650631800801,
        "duration" : 164
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "tx_receipt",
        "value" : "AttributeDict({'transactionHash': HexBytes('0x690462a621fb29a7bff41bad859d98c7c0931916c1fa285174c2f3f26fa19ed5'), 'transactionIndex': 0, 'blockHash': HexBytes('0x2c09295f90aa51ece507d44631453f2009fa6ce5ea92dd6ad9f9fb353aa5c8a8'), 'blockNumber': 4981046, 'from': '0x25f6Eff26c24DBbe051236C6f33c7Fd1e29d440B', 'to': '0x13aF2C6De2860a21AB31BD59d3857259352F7DbB', 'gasUsed': 15000, 'cumulativeGasUsed': 15000, 'contractAddress': None, 'logs': [], 'status': 1, 'logsBloom': HexBytes('0x})"
      } ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "prepare_account::0",
    "time" : {
      "start" : 1650631816790,
      "stop" : 1650631824415,
      "duration" : 7625
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Operator end balance: 0.007822300955573055660288 NEON 60725.92509416 SOL",
      "time" : {
        "start" : 1650631824245,
        "stop" : 1650631824245,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Account end balance: 1000 NEON",
      "time" : {
        "start" : 1650631824415,
        "stop" : 1650631824415,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "allure_environment::0",
    "time" : {
      "start" : 1650631859635,
      "stop" : 1650631859635,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "Basic: transfer tests"
  }, {
    "name" : "parentSuite",
    "value" : "integration.tests.basic"
  }, {
    "name" : "suite",
    "value" : "test_transfers"
  }, {
    "name" : "subSuite",
    "value" : "TestTransfer"
  }, {
    "name" : "host",
    "value" : "fv-az447-602"
  }, {
    "name" : "thread",
    "value" : "1820-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "integration.tests.basic.test_transfers"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "amount",
    "value" : "0.01"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 2,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 1,
        "unknown" : 0,
        "total" : 3
      },
      "items" : [ {
        "uid" : "1c4456272a09967",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/feature/25-add-cases-for-basic-operations/967//#testresult/1c4456272a09967",
        "status" : "failed",
        "statusDetails" : "AssertionError: expected balance = 9999.054, actual balance = 9999.053",
        "time" : {
          "start" : 1650631285765,
          "stop" : 1650631288464,
          "duration" : 2699
        }
      }, {
        "uid" : "916feb47c225b160",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/feature/25-add-cases-for-basic-operations/963//#testresult/916feb47c225b160",
        "status" : "passed",
        "time" : {
          "start" : 1650623841295,
          "stop" : 1650623843623,
          "duration" : 2328
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "4cd91d89f2b28163.json",
  "parameterValues" : [ "0.01" ]
}