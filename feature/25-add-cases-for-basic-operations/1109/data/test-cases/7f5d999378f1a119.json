{
  "uid" : "7f5d999378f1a119",
  "name" : "test_eth_get_transaction_by_block_hash_and_index[params0-False]",
  "fullName" : "integration.tests.basic.test_rpc_calls.TestRpcCalls#test_eth_get_transaction_by_block_hash_and_index",
  "historyId" : "8c3f736fc761b49410ecf5a4262a095f",
  "time" : {
    "start" : 1651258011297,
    "stop" : 1651258011421,
    "duration" : 124
  },
  "description" : "Verify implemented rpc calls work eth_getTransactionByBlockHashAndIndex",
  "descriptionHtml" : "<p>Verify implemented rpc calls work eth_getTransactionByBlockHashAndIndex</p>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: rpc call is failed: bad block hash 0xf3f093caf10ddd6212d02dd37b1d33ec6dd668b477ad877e2e85685db80789\nassert False\n +  where False = isinstance(JsonRpcErrorResponse(id=23, error={'code': -32602, 'message': 'bad block hash 0xf3f093caf10ddd6212d02dd37b1d33ec6dd668b477ad877e2e85685db80789'}, jsonrpc='2.0'), <class 'integration.tests.basic.model.model.JsonRpcResponse'>)\n +    where <class 'integration.tests.basic.model.model.JsonRpcResponse'> = request_models.JsonRpcResponse",
  "statusTrace" : "self = <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7fed39d1f490>\nparams = ['0xf3f093caf10ddd6212d02dd37b1d33ec6dd668b477ad877e2e85685db80789', 1]\nraises = False\n\n    @pytest.mark.parametrize(\n        \"params, raises\",\n        [([32, 1], False), ([32, \"earliest\"], False), ([16, 1], True), ([], True)],\n    )\n    def test_eth_get_transaction_by_block_hash_and_index(self, params, raises):\n        \"\"\"Verify implemented rpc calls work eth_getTransactionByBlockHashAndIndex\"\"\"\n        if params:\n            params[0] = input_data.gen_hash_of_block(params[0])\n>       response = self.assert_rpc_response(\n            method=\"eth_getTransactionByBlockHashAndIndex\", params=params, raises=raises\n        )\n\nintegration/tests/basic/test_rpc_calls.py:426: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7fed39d1f490>\nmethod = 'eth_getTransactionByBlockHashAndIndex'\nparams = ['0xf3f093caf10ddd6212d02dd37b1d33ec6dd668b477ad877e2e85685db80789', 1]\nerr_message = '', raises = False\n\n    def assert_rpc_response(\n        self,\n        method: str,\n        params: tp.Optional[tp.Any] = None,\n        err_message: str = \"\",\n        raises: bool = False,\n    ) -> tp.Union[request_models.JsonRpcResponse, request_models.JsonRpcErrorResponse]:\n        \"\"\"Verify eth endpoints responses\"\"\"\n        if not isinstance(params, tp.List):\n            params = [params]\n        payloads = getattr(RpcRequestFactory(), method)(*params)\n        response = self.json_rpc_client.do_call(payloads)\n        if raises:\n            if err_message and not isinstance(err_message, str):\n                err_message = err_message.value\n            self.assert_expected_raises(response, err_message)\n        else:\n>           assert isinstance(\n                response, request_models.JsonRpcResponse\n            ), f\"rpc call is failed: {response.error.get('message')}\"\nE           AssertionError: rpc call is failed: bad block hash 0xf3f093caf10ddd6212d02dd37b1d33ec6dd668b477ad877e2e85685db80789\nE           assert False\nE            +  where False = isinstance(JsonRpcErrorResponse(id=23, error={'code': -32602, 'message': 'bad block hash 0xf3f093caf10ddd6212d02dd37b1d33ec6dd668b477ad877e2e85685db80789'}, jsonrpc='2.0'), <class 'integration.tests.basic.model.model.JsonRpcResponse'>)\nE            +    where <class 'integration.tests.basic.model.model.JsonRpcResponse'> = request_models.JsonRpcResponse\n\nintegration/tests/basic/test_rpc_calls.py:119: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "web3_client",
    "time" : {
      "start" : 1651257980952,
      "stop" : 1651257980953,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "pytestconfig",
    "time" : {
      "start" : 1651257980952,
      "stop" : 1651257980952,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "allure_environment",
    "time" : {
      "start" : 1651257980953,
      "stop" : 1651257981925,
      "duration" : 972
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "faucet",
    "time" : {
      "start" : 1651257981926,
      "stop" : 1651257981926,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "json_rpc_client",
    "time" : {
      "start" : 1651257981926,
      "stop" : 1651257981926,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "operator",
    "time" : {
      "start" : 1651257981926,
      "stop" : 1651257981926,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_account",
    "time" : {
      "start" : 1651257981926,
      "stop" : 1651257989304,
      "duration" : 7378
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Create account for tests",
      "time" : {
        "start" : 1651257981926,
        "stop" : 1651257981937,
        "duration" : 11
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Request 5000 NEON from faucet for 0x47c04305E6B17c52912cB27D2e5025E327C95AD8",
      "time" : {
        "start" : 1651257981937,
        "stop" : 1651257982969,
        "duration" : 1032
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Operator initial balance: 0.008636913244270533360624 NEON 59056.31822164 SOL",
      "time" : {
        "start" : 1651257989304,
        "stop" : 1651257989304,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 3,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "sol_client",
    "time" : {
      "start" : 1651257981926,
      "stop" : 1651257981926,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_account",
    "time" : {
      "start" : 1651258011296,
      "stop" : 1651258011296,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare",
    "time" : {
      "start" : 1651258011296,
      "stop" : 1651258011296,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_env",
    "time" : {
      "start" : 1651258011296,
      "stop" : 1651258011296,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "Verify implemented rpc calls work eth_getTransactionByBlockHashAndIndex",
    "status" : "failed",
    "statusMessage" : "AssertionError: rpc call is failed: bad block hash 0xf3f093caf10ddd6212d02dd37b1d33ec6dd668b477ad877e2e85685db80789\nassert False\n +  where False = isinstance(JsonRpcErrorResponse(id=23, error={'code': -32602, 'message': 'bad block hash 0xf3f093caf10ddd6212d02dd37b1d33ec6dd668b477ad877e2e85685db80789'}, jsonrpc='2.0'), <class 'integration.tests.basic.model.model.JsonRpcResponse'>)\n +    where <class 'integration.tests.basic.model.model.JsonRpcResponse'> = request_models.JsonRpcResponse",
    "statusTrace" : "self = <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7fed39d1f490>\nparams = ['0xf3f093caf10ddd6212d02dd37b1d33ec6dd668b477ad877e2e85685db80789', 1]\nraises = False\n\n    @pytest.mark.parametrize(\n        \"params, raises\",\n        [([32, 1], False), ([32, \"earliest\"], False), ([16, 1], True), ([], True)],\n    )\n    def test_eth_get_transaction_by_block_hash_and_index(self, params, raises):\n        \"\"\"Verify implemented rpc calls work eth_getTransactionByBlockHashAndIndex\"\"\"\n        if params:\n            params[0] = input_data.gen_hash_of_block(params[0])\n>       response = self.assert_rpc_response(\n            method=\"eth_getTransactionByBlockHashAndIndex\", params=params, raises=raises\n        )\n\nintegration/tests/basic/test_rpc_calls.py:426: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7fed39d1f490>\nmethod = 'eth_getTransactionByBlockHashAndIndex'\nparams = ['0xf3f093caf10ddd6212d02dd37b1d33ec6dd668b477ad877e2e85685db80789', 1]\nerr_message = '', raises = False\n\n    def assert_rpc_response(\n        self,\n        method: str,\n        params: tp.Optional[tp.Any] = None,\n        err_message: str = \"\",\n        raises: bool = False,\n    ) -> tp.Union[request_models.JsonRpcResponse, request_models.JsonRpcErrorResponse]:\n        \"\"\"Verify eth endpoints responses\"\"\"\n        if not isinstance(params, tp.List):\n            params = [params]\n        payloads = getattr(RpcRequestFactory(), method)(*params)\n        response = self.json_rpc_client.do_call(payloads)\n        if raises:\n            if err_message and not isinstance(err_message, str):\n                err_message = err_message.value\n            self.assert_expected_raises(response, err_message)\n        else:\n>           assert isinstance(\n                response, request_models.JsonRpcResponse\n            ), f\"rpc call is failed: {response.error.get('message')}\"\nE           AssertionError: rpc call is failed: bad block hash 0xf3f093caf10ddd6212d02dd37b1d33ec6dd668b477ad877e2e85685db80789\nE           assert False\nE            +  where False = isinstance(JsonRpcErrorResponse(id=23, error={'code': -32602, 'message': 'bad block hash 0xf3f093caf10ddd6212d02dd37b1d33ec6dd668b477ad877e2e85685db80789'}, jsonrpc='2.0'), <class 'integration.tests.basic.model.model.JsonRpcResponse'>)\nE            +    where <class 'integration.tests.basic.model.model.JsonRpcResponse'> = request_models.JsonRpcResponse\n\nintegration/tests/basic/test_rpc_calls.py:119: AssertionError",
    "steps" : [ {
      "name" : "Request params: {'id': 23, 'method': 'eth_getTransactionByBlockHashAndIndex', 'params': ['0xf3f093caf10ddd6212d02dd37b1d33ec6dd668b477ad877e2e85685db80789', 1], 'jsonrpc': '2.0'}",
      "time" : {
        "start" : 1651258011297,
        "stop" : 1651258011421,
        "duration" : 124
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Response data: {'jsonrpc': '2.0', 'id': 23, 'error': {'code': -32602, 'message': 'bad block hash 0xf3f093caf10ddd6212d02dd37b1d33ec6dd668b477ad877e2e85685db80789'}}",
        "time" : {
          "start" : 1651258011421,
          "stop" : 1651258011421,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 1,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "prepare_account::0",
    "time" : {
      "start" : 1651258017027,
      "stop" : 1651258022934,
      "duration" : 5907
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Operator end balance: 0.008636913278194704960624 NEON 59056.30250624 SOL",
      "time" : {
        "start" : 1651258022779,
        "stop" : 1651258022779,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Account end balance: 5000 NEON",
      "time" : {
        "start" : 1651258022934,
        "stop" : 1651258022934,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "allure_environment::0",
    "time" : {
      "start" : 1651258329031,
      "stop" : 1651258329032,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "Basic: Json-RPC call tests"
  }, {
    "name" : "parentSuite",
    "value" : "integration.tests.basic"
  }, {
    "name" : "suite",
    "value" : "test_rpc_calls"
  }, {
    "name" : "subSuite",
    "value" : "TestRpcCalls"
  }, {
    "name" : "host",
    "value" : "fv-az173-499"
  }, {
    "name" : "thread",
    "value" : "1834-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "integration.tests.basic.test_rpc_calls"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "params",
    "value" : "[32, 1]"
  }, {
    "name" : "raises",
    "value" : "False"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "7f5d999378f1a119.json",
  "parameterValues" : [ "[32, 1]", "False" ]
}