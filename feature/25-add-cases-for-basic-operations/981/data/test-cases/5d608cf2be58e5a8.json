{
  "uid" : "5d608cf2be58e5a8",
  "name" : "test_check_erc_1820_transaction",
  "fullName" : "integration.tests.basic.test_transfers.TestTransfer#test_check_erc_1820_transaction",
  "historyId" : "a697185e63a792ee3e6aecd2c4303cab",
  "time" : {
    "start" : 1650645636352,
    "stop" : 1650645637725,
    "duration" : 1373
  },
  "description" : "Check ERC-1820 transaction (without chain_id in sign)",
  "descriptionHtml" : "<p>Check ERC-1820 transaction (without chain_id in sign)</p>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: expected balance = 10002, actual balance = 10004",
  "statusTrace" : "self = <integration.tests.basic.test_transfers.TestTransfer object at 0x7f6b647fdbb0>\n\n    def test_check_erc_1820_transaction(self):\n        \"\"\"Check ERC-1820 transaction (without chain_id in sign)\"\"\"\n        amount = 2\n        transaction = {\n            \"from\": self.sender_account.address,\n            \"to\": self.recipient_account.address,\n            \"value\": self.web3_client.toWei(amount, \"ether\"),\n            \"gasPrice\": self.web3_client.gas_price(),\n            \"gas\": 0,\n            \"nonce\": self.web3_client.eth.get_transaction_count(self.sender_account.address),\n        }\n        transaction[\"gas\"] = self.web3_client.eth.estimate_gas(transaction)\n    \n        signed_tx = self.web3_client.eth.account.sign_transaction(transaction, self.sender_account.key)\n    \n        params = [signed_tx.rawTransaction.hex()]\n    \n        model = RpcRequestFactory.get_send_raw_trx(params=params)\n        actual_result = self.json_rpc_client.do_call(model)\n        # actual_result = self.json_rpc_client.deserialize_response(response)\n    \n        assert actual_result.id == model.id, AssertMessage.WRONG_ID.value\n        assert self.assert_is_successful_response(actual_result), AssertMessage.WRONG_TYPE.value\n        assert \"0x\" in actual_result.result, AssertMessage.DOES_NOT_START_WITH_0X.value\n    \n        # self.assert_balance(self.sender_account.address, InputData.FAUCET_1ST_REQUEST_AMOUNT.value - amount)\n>       self.assert_balance(self.recipient_account.address, InputData.FAUCET_1ST_REQUEST_AMOUNT.value + amount)\n\nintegration/tests/basic/test_transfers.py:246: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nintegration/tests/basic/helpers/basic.py:144: in assert_balance\n    self.check_balance(expected_amount, balance, rnd_dig=rnd_dig)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nexpected = 10002, actual = 10004.23, rnd_dig = None\n\n    @staticmethod\n    def check_balance(expected: float, actual: float, rnd_dig: int = InputData.ROUND_DIGITS.value):\n        \"\"\"Compares the balance with expectation\"\"\"\n        expected_dec = round(expected, rnd_dig)\n        # TODO: added float()\n        # actual_dec = float(round(actual, rnd_dig))\n        actual_dec = round(actual, rnd_dig)\n    \n>       assert actual_dec == expected_dec, f\"expected balance = {expected_dec}, actual balance = {actual_dec}\"\nE       AssertionError: expected balance = 10002, actual balance = 10004\n\nintegration/tests/basic/helpers/basic.py:200: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "pytestconfig",
    "time" : {
      "start" : 1650645421865,
      "stop" : 1650645421866,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "web3_client",
    "time" : {
      "start" : 1650645421866,
      "stop" : 1650645421868,
      "duration" : 2
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "allure_environment",
    "time" : {
      "start" : 1650645421868,
      "stop" : 1650645422948,
      "duration" : 1080
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "faucet",
    "time" : {
      "start" : 1650645422948,
      "stop" : 1650645422948,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "json_rpc_client",
    "time" : {
      "start" : 1650645422948,
      "stop" : 1650645422949,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "operator",
    "time" : {
      "start" : 1650645422949,
      "stop" : 1650645422949,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "sol_client",
    "time" : {
      "start" : 1650645422949,
      "stop" : 1650645422949,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_account",
    "time" : {
      "start" : 1650645611655,
      "stop" : 1650645619902,
      "duration" : 8247
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Create account for tests",
      "time" : {
        "start" : 1650645611655,
        "stop" : 1650645611659,
        "duration" : 4
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Request 1000 NEON from faucet for 0x684d09102a8dcF53091DCA03d6179aBC2605E304",
      "time" : {
        "start" : 1650645611659,
        "stop" : 1650645612510,
        "duration" : 851
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Operator initial balance: 0.007822384626122713223808 NEON 60722.35020296 SOL",
      "time" : {
        "start" : 1650645619902,
        "stop" : 1650645619902,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 3,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "prepare_env",
    "time" : {
      "start" : 1650645636352,
      "stop" : 1650645636352,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_account",
    "time" : {
      "start" : 1650645636352,
      "stop" : 1650645636352,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare",
    "time" : {
      "start" : 1650645636352,
      "stop" : 1650645636352,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "Check ERC-1820 transaction (without chain_id in sign)",
    "status" : "failed",
    "statusMessage" : "AssertionError: expected balance = 10002, actual balance = 10004",
    "statusTrace" : "self = <integration.tests.basic.test_transfers.TestTransfer object at 0x7f6b647fdbb0>\n\n    def test_check_erc_1820_transaction(self):\n        \"\"\"Check ERC-1820 transaction (without chain_id in sign)\"\"\"\n        amount = 2\n        transaction = {\n            \"from\": self.sender_account.address,\n            \"to\": self.recipient_account.address,\n            \"value\": self.web3_client.toWei(amount, \"ether\"),\n            \"gasPrice\": self.web3_client.gas_price(),\n            \"gas\": 0,\n            \"nonce\": self.web3_client.eth.get_transaction_count(self.sender_account.address),\n        }\n        transaction[\"gas\"] = self.web3_client.eth.estimate_gas(transaction)\n    \n        signed_tx = self.web3_client.eth.account.sign_transaction(transaction, self.sender_account.key)\n    \n        params = [signed_tx.rawTransaction.hex()]\n    \n        model = RpcRequestFactory.get_send_raw_trx(params=params)\n        actual_result = self.json_rpc_client.do_call(model)\n        # actual_result = self.json_rpc_client.deserialize_response(response)\n    \n        assert actual_result.id == model.id, AssertMessage.WRONG_ID.value\n        assert self.assert_is_successful_response(actual_result), AssertMessage.WRONG_TYPE.value\n        assert \"0x\" in actual_result.result, AssertMessage.DOES_NOT_START_WITH_0X.value\n    \n        # self.assert_balance(self.sender_account.address, InputData.FAUCET_1ST_REQUEST_AMOUNT.value - amount)\n>       self.assert_balance(self.recipient_account.address, InputData.FAUCET_1ST_REQUEST_AMOUNT.value + amount)\n\nintegration/tests/basic/test_transfers.py:246: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nintegration/tests/basic/helpers/basic.py:144: in assert_balance\n    self.check_balance(expected_amount, balance, rnd_dig=rnd_dig)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nexpected = 10002, actual = 10004.23, rnd_dig = None\n\n    @staticmethod\n    def check_balance(expected: float, actual: float, rnd_dig: int = InputData.ROUND_DIGITS.value):\n        \"\"\"Compares the balance with expectation\"\"\"\n        expected_dec = round(expected, rnd_dig)\n        # TODO: added float()\n        # actual_dec = float(round(actual, rnd_dig))\n        actual_dec = round(actual, rnd_dig)\n    \n>       assert actual_dec == expected_dec, f\"expected balance = {expected_dec}, actual balance = {actual_dec}\"\nE       AssertionError: expected balance = 10002, actual balance = 10004\n\nintegration/tests/basic/helpers/basic.py:200: AssertionError",
    "steps" : [ {
      "name" : "Request params: {'id': 93, 'method': 'eth_sendRawTransaction', 'params': ['0xf86c0a8570654cf74082520894d72b9fbfbe014388ae712062e77812d54bedaead881bc16d674ec80000801ca0edb16f78a13aff829a5929421ea770f82101eb3d02587fbef627e32298cadd93a04eaace98da9976920c03cf5142deca5607b81858f472decb4c0bb4941ee20695'], 'jsonrpc': '2.0'}",
      "time" : {
        "start" : 1650645636884,
        "stop" : 1650645637555,
        "duration" : 671
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Response data: {'jsonrpc': '2.0', 'id': 93, 'result': '0x83c3a12d323083a3d9e183a78be5dcadb8d32440e9d0d5e477351741e25205b2'}",
        "time" : {
          "start" : 1650645637555,
          "stop" : 1650645637555,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 1,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "prepare_account::0",
    "time" : {
      "start" : 1650645637819,
      "stop" : 1650645645394,
      "duration" : 7575
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Operator end balance: 0.007822384662327904223808 NEON 60722.33761564 SOL",
      "time" : {
        "start" : 1650645645224,
        "stop" : 1650645645224,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Account end balance: 1000 NEON",
      "time" : {
        "start" : 1650645645394,
        "stop" : 1650645645394,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "allure_environment::0",
    "time" : {
      "start" : 1650645681258,
      "stop" : 1650645681259,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "Basic: transfer tests"
  }, {
    "name" : "parentSuite",
    "value" : "integration.tests.basic"
  }, {
    "name" : "suite",
    "value" : "test_transfers"
  }, {
    "name" : "subSuite",
    "value" : "TestTransfer"
  }, {
    "name" : "host",
    "value" : "fv-az449-876"
  }, {
    "name" : "thread",
    "value" : "1824-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "integration.tests.basic.test_transfers"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 7,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 0,
        "unknown" : 0,
        "total" : 7
      },
      "items" : [ {
        "uid" : "fd589a5474f76b56",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/feature/25-add-cases-for-basic-operations/979//#testresult/fd589a5474f76b56",
        "status" : "failed",
        "statusDetails" : "AssertionError: expected balance = 10002, actual balance = 10004",
        "time" : {
          "start" : 1650645627275,
          "stop" : 1650645628546,
          "duration" : 1271
        }
      }, {
        "uid" : "2d8c657ef69999d3",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/feature/25-add-cases-for-basic-operations/980//#testresult/2d8c657ef69999d3",
        "status" : "failed",
        "statusDetails" : "AssertionError: expected balance = 10002, actual balance = 10004",
        "time" : {
          "start" : 1650645631018,
          "stop" : 1650645632283,
          "duration" : 1265
        }
      }, {
        "uid" : "8162ac53fdd5dd58",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/feature/25-add-cases-for-basic-operations/975//#testresult/8162ac53fdd5dd58",
        "status" : "failed",
        "statusDetails" : "AssertionError: expected balance = 10002, actual balance = 10004",
        "time" : {
          "start" : 1650644393510,
          "stop" : 1650644394551,
          "duration" : 1041
        }
      }, {
        "uid" : "2e1522422e5e18b0",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/feature/25-add-cases-for-basic-operations/971//#testresult/2e1522422e5e18b0",
        "status" : "failed",
        "statusDetails" : "AssertionError: expected balance = 10000, actual balance = 10002",
        "time" : {
          "start" : 1650632968951,
          "stop" : 1650632970238,
          "duration" : 1287
        }
      }, {
        "uid" : "e7fbcce6d153b1bd",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/feature/25-add-cases-for-basic-operations/969//#testresult/e7fbcce6d153b1bd",
        "status" : "failed",
        "statusDetails" : "AssertionError: expected balance = 10000, actual balance = 2.0",
        "time" : {
          "start" : 1650631815487,
          "stop" : 1650631816774,
          "duration" : 1287
        }
      }, {
        "uid" : "3ecef4a05ffbf8d",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/feature/25-add-cases-for-basic-operations/967//#testresult/3ecef4a05ffbf8d",
        "status" : "failed",
        "statusDetails" : "AssertionError: expected balance = 10000, actual balance = 2.0",
        "time" : {
          "start" : 1650631302696,
          "stop" : 1650631303970,
          "duration" : 1274
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "5d608cf2be58e5a8.json",
  "parameterValues" : [ ]
}