{
  "uid" : "4b4757e66a1912dae1a509f688f20b0f",
  "children" : [ {
    "name" : "Test defects",
    "children" : [ {
      "name" : "TypeError: get_block_by_hash() got an unexpected keyword argument 'req_id'",
      "children" : [ {
        "name" : "test_rpc_call_eth_getBlockByHash",
        "uid" : "d0028d0d480a07cf",
        "parentUid" : "1c7616b7b1a579ecae9c31185965cdbf",
        "status" : "broken",
        "time" : {
          "start" : 1646757714736,
          "stop" : 1646757719899,
          "duration" : 5163
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ ]
      } ],
      "uid" : "1c7616b7b1a579ecae9c31185965cdbf"
    }, {
      "name" : "TypeError: fromhex() argument must be str, not HexBytes",
      "children" : [ {
        "name" : "test_rpc_call_eth_sendRawTransaction",
        "uid" : "f5a10e3390ca95eb",
        "parentUid" : "e9bac02ca83e196007c7b2ebb952161b",
        "status" : "broken",
        "time" : {
          "start" : 1646757804947,
          "stop" : 1646757807159,
          "duration" : 2212
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ ]
      } ],
      "uid" : "e9bac02ca83e196007c7b2ebb952161b"
    } ],
    "uid" : "bdbf199525818fae7a8651db9eafe741"
  }, {
    "name" : "Product defects",
    "children" : [ {
      "name" : "AssertionError: <AssertMessage.CONTAINS_ERROR: 'Contains the error data'>\nassert False\n +  where False = <bound method BasicHelpers.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7fd44a4e07c0>>(JsonRpcErrorResponse(id=44, error={'code': -32000, 'message': 'Missing data'}, jsonrpc='2.0'))\n +    where <bound method BasicHelpers.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7fd44a4e07c0>> = <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7fd44a4e07c0>.assert_no_error_object",
      "children" : [ {
        "name" : "test_rpc_call_eth_call",
        "uid" : "3017d36e8de23781",
        "parentUid" : "bea43d5ced2ac7b3c4f6b691746ca488",
        "status" : "failed",
        "time" : {
          "start" : 1646757736378,
          "stop" : 1646757744478,
          "duration" : 8100
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ ]
      } ],
      "uid" : "bea43d5ced2ac7b3c4f6b691746ca488"
    }, {
      "name" : "AssertionError: <AssertMessage.CONTAINS_ERROR: 'Contains the error data'>\nassert False\n +  where False = <bound method BasicHelpers.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7fd44a1b4640>>(JsonRpcErrorResponse(id=30, error={'code': -32000, 'message': \"'NoneType' object is not subscriptable\"}, jsonrpc='2.0'))\n +    where <bound method BasicHelpers.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7fd44a1b4640>> = <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7fd44a1b4640>.assert_no_error_object",
      "children" : [ {
        "name" : "test_rpc_call_eth_estimateGas",
        "uid" : "f12f9362f9e25498",
        "parentUid" : "c0495e72024ec2945e5d0a8dbd0c0a89",
        "status" : "failed",
        "time" : {
          "start" : 1646757744486,
          "stop" : 1646757746004,
          "duration" : 1518
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ ]
      } ],
      "uid" : "c0495e72024ec2945e5d0a8dbd0c0a89"
    } ],
    "uid" : "8fb3a91ba5aaf9de24cc8a92edc82b5d"
  } ],
  "name" : "categories"
}