{
  "uid" : "99dd856e0670f3e5",
  "name" : "test_rpc_call_eth_sendRawTransaction",
  "fullName" : "integration.tests.basic.test_transactions.TestRpcCallsTransactions#test_rpc_call_eth_sendRawTransaction",
  "historyId" : "f2266f2fcf46a3382764047e40d95c33",
  "time" : {
    "start" : 1646729759903,
    "stop" : 1646729762038,
    "duration" : 2135
  },
  "description" : "Verify implemented rpc calls work eth_sendRawTransaction",
  "descriptionHtml" : "<p>Verify implemented rpc calls work eth_sendRawTransaction</p>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: The response type is error response\nassert False\n +  where False = isinstance(JsonRpcErrorResponse(id=61, error={'code': -32000, 'message': 'non-hexadecimal number found in fromhex() arg at position 0'}, jsonrpc='2.0'), JsonRpcResponse)",
  "statusTrace" : "self = <integration.tests.basic.test_transactions.TestRpcCallsTransactions object at 0x7f1d31359250>\n\n    @allure.step(\n        \"test: verify implemented rpc calls work eth_sendRawTransaction\")\n    def test_rpc_call_eth_sendRawTransaction(self):\n        \"\"\"Verify implemented rpc calls work eth_sendRawTransaction\"\"\"\n        sender_account = self.create_account_with_balance(GREAT_AMOUNT)\n        recipient_account = self.create_account_with_balance(\n            FIRST_FAUCET_REQUEST_AMOUNT)\n    \n        # TODO: chain id\n        transaction = {\n            \"from\":\n            sender_account.address,\n            \"to\":\n            recipient_account.address,\n            \"value\":\n            self.web3_client.toWei(SAMPLE_AMOUNT, \"ether\"),\n            \"chainId\":\n            111,\n            \"gasPrice\":\n            self.web3_client.gas_price(),\n            \"gas\":\n            0,\n            \"nonce\":\n            self.web3_client.eth.get_transaction_count(sender_account.address),\n        }\n        transaction[\"gas\"] = self.web3_client.eth.estimate_gas(transaction)\n    \n        #\n        print(transaction)\n        print(sender_account.key)\n        #\n    \n        signed_tx = self.web3_client.eth.account.sign_transaction(\n            transaction, sender_account.key)\n        params = [str(signed_tx.rawTransaction)]\n    \n        #\n        print(signed_tx)\n        #\n    \n        model = RpcRequestFactory.get_send_raw_trx(params=params)\n        response = self.jsonrpc_requester.request_json_rpc(model)\n        actual_result = self.jsonrpc_requester.deserialize_response(response)\n    \n        assert actual_result.id == model.id, AssertMessage.WRONG_ID.value\n>       assert isinstance(actual_result,\n                          JsonRpcResponse), AssertMessage.WRONG_TYPE.value\nE       AssertionError: The response type is error response\nE       assert False\nE        +  where False = isinstance(JsonRpcErrorResponse(id=61, error={'code': -32000, 'message': 'non-hexadecimal number found in fromhex() arg at position 0'}, jsonrpc='2.0'), JsonRpcResponse)\n\nintegration/tests/basic/test_transactions.py:100: AssertionError",
  "flaky" : false,
  "newFailed" : true,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "web3_client",
    "time" : {
      "start" : 1646729692977,
      "stop" : 1646729692978,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "pytestconfig",
    "time" : {
      "start" : 1646729692977,
      "stop" : 1646729692977,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "allure_environment",
    "time" : {
      "start" : 1646729692978,
      "stop" : 1646729693919,
      "duration" : 941
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "jsonrpc_requester",
    "time" : {
      "start" : 1646729693919,
      "stop" : 1646729693919,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "faucet",
    "time" : {
      "start" : 1646729693919,
      "stop" : 1646729693919,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "operator",
    "time" : {
      "start" : 1646729693919,
      "stop" : 1646729693920,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "sol_client",
    "time" : {
      "start" : 1646729693920,
      "stop" : 1646729693920,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_account",
    "time" : {
      "start" : 1646729752365,
      "stop" : 1646729757100,
      "duration" : 4735
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Create account for tests",
      "time" : {
        "start" : 1646729752365,
        "stop" : 1646729752370,
        "duration" : 5
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Request 1000 NEON from faucet for 0x7049a127d6191243c7e4A415488E863bF6a28B44",
      "time" : {
        "start" : 1646729752370,
        "stop" : 1646729753139,
        "duration" : 769
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Operator initial balance: 0.0024780828806100246726 NEON 74070764.29336864 SOL",
      "time" : {
        "start" : 1646729757100,
        "stop" : 1646729757100,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 3,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "prepare_json_rpc_requester",
    "time" : {
      "start" : 1646729759902,
      "stop" : 1646729759902,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_account",
    "time" : {
      "start" : 1646729759902,
      "stop" : 1646729759902,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare",
    "time" : {
      "start" : 1646729759902,
      "stop" : 1646729759902,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "Verify implemented rpc calls work eth_sendRawTransaction",
    "status" : "failed",
    "statusMessage" : "AssertionError: The response type is error response\nassert False\n +  where False = isinstance(JsonRpcErrorResponse(id=61, error={'code': -32000, 'message': 'non-hexadecimal number found in fromhex() arg at position 0'}, jsonrpc='2.0'), JsonRpcResponse)",
    "statusTrace" : "self = <integration.tests.basic.test_transactions.TestRpcCallsTransactions object at 0x7f1d31359250>\n\n    @allure.step(\n        \"test: verify implemented rpc calls work eth_sendRawTransaction\")\n    def test_rpc_call_eth_sendRawTransaction(self):\n        \"\"\"Verify implemented rpc calls work eth_sendRawTransaction\"\"\"\n        sender_account = self.create_account_with_balance(GREAT_AMOUNT)\n        recipient_account = self.create_account_with_balance(\n            FIRST_FAUCET_REQUEST_AMOUNT)\n    \n        # TODO: chain id\n        transaction = {\n            \"from\":\n            sender_account.address,\n            \"to\":\n            recipient_account.address,\n            \"value\":\n            self.web3_client.toWei(SAMPLE_AMOUNT, \"ether\"),\n            \"chainId\":\n            111,\n            \"gasPrice\":\n            self.web3_client.gas_price(),\n            \"gas\":\n            0,\n            \"nonce\":\n            self.web3_client.eth.get_transaction_count(sender_account.address),\n        }\n        transaction[\"gas\"] = self.web3_client.eth.estimate_gas(transaction)\n    \n        #\n        print(transaction)\n        print(sender_account.key)\n        #\n    \n        signed_tx = self.web3_client.eth.account.sign_transaction(\n            transaction, sender_account.key)\n        params = [str(signed_tx.rawTransaction)]\n    \n        #\n        print(signed_tx)\n        #\n    \n        model = RpcRequestFactory.get_send_raw_trx(params=params)\n        response = self.jsonrpc_requester.request_json_rpc(model)\n        actual_result = self.jsonrpc_requester.deserialize_response(response)\n    \n        assert actual_result.id == model.id, AssertMessage.WRONG_ID.value\n>       assert isinstance(actual_result,\n                          JsonRpcResponse), AssertMessage.WRONG_TYPE.value\nE       AssertionError: The response type is error response\nE       assert False\nE        +  where False = isinstance(JsonRpcErrorResponse(id=61, error={'code': -32000, 'message': 'non-hexadecimal number found in fromhex() arg at position 0'}, jsonrpc='2.0'), JsonRpcResponse)\n\nintegration/tests/basic/test_transactions.py:100: AssertionError",
    "steps" : [ {
      "name" : "test: verify implemented rpc calls work eth_sendRawTransaction",
      "time" : {
        "start" : 1646729759903,
        "stop" : 1646729762037,
        "duration" : 2134
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: The response type is error response\nassert False\n +  where False = isinstance(JsonRpcErrorResponse(id=61, error={'code': -32000, 'message': 'non-hexadecimal number found in fromhex() arg at position 0'}, jsonrpc='2.0'), JsonRpcResponse)\n",
      "statusTrace" : "  File \"/opt/hostedtoolcache/Python/3.9.10/x64/lib/python3.9/site-packages/allure_commons/_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"/home/runner/work/neon-tests/neon-tests/integration/tests/basic/test_transactions.py\", line 100, in test_rpc_call_eth_sendRawTransaction\n    assert isinstance(actual_result,\n",
      "steps" : [ {
        "name" : "creating a new account with balance",
        "time" : {
          "start" : 1646729759903,
          "stop" : 1646729760541,
          "duration" : 638
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "creating a new account",
          "time" : {
            "start" : 1646729759903,
            "stop" : 1646729759906,
            "duration" : 3
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "requesting faucet for Neon",
          "time" : {
            "start" : 1646729759906,
            "stop" : 1646729760541,
            "duration" : 635
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ {
            "name" : "wallet",
            "value" : "'0x3fb42863B4Ac5fD1F7a24850cA75eA6864C0ced7'"
          }, {
            "name" : "amount",
            "value" : "1000"
          } ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : true
        } ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "amount",
          "value" : "1000"
        } ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "creating a new account with balance",
        "time" : {
          "start" : 1646729760541,
          "stop" : 1646729761182,
          "duration" : 641
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "creating a new account",
          "time" : {
            "start" : 1646729760541,
            "stop" : 1646729760546,
            "duration" : 5
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "requesting faucet for Neon",
          "time" : {
            "start" : 1646729760546,
            "stop" : 1646729761182,
            "duration" : 636
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ {
            "name" : "wallet",
            "value" : "'0x967e729B6ffC6Dc44a6d243cAf6fb2578f1b9dEa'"
          }, {
            "name" : "amount",
            "value" : "5"
          } ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : true
        } ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "amount",
          "value" : "5"
        } ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "the model built",
        "time" : {
          "start" : 1646729761914,
          "stop" : 1646729761914,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "requesting Json-RPC",
        "time" : {
          "start" : 1646729761914,
          "stop" : 1646729762037,
          "duration" : 123
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "getting response",
          "time" : {
            "start" : 1646729761914,
            "stop" : 1646729762037,
            "duration" : 123
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "data",
          "value" : "JsonRpcRequest(id=61, method='eth_sendRawTransaction', params=['b\\'\\\\xf8n\\\\x80\\\\x85^\\\\x90\\\\xa1\\\\xab\\\\x00\\\\x82:\\\\x98\\\\x94\\\\x96~r\\\\x9bo\\\\xfcm\\\\xc4Jm$<\\\\xafo\\\\xb2W\\\\x8f\\\\x1b\\\\x9d\\\\xea\\\\x88Ec\\\\x91\\\\x82D\\\\xf4\\\\x00\\\\x00\\\\x80\\\\x82\\\\x01\\\\x02\\\\xa0\\\\x14\\\\x08Z\\\\x94p\\\\xff\\\\xe7I\\\\r\\\\xd9\\\\x0b\\\\xc9\\\\xd2\\\\xc8C\\\\x0e\\\\xb7\\\\xf3K\\\\xdd\\\\xae\\\\xf2\\\\x00@\\\\xf8\\\\xdc\\\\xab\\\\x8c|\\\\x87\\\\x07]\\\\xa0\\\\\\\\\\\\xf9\\\\x1a]\\\\xf5\\\\xa7X\\\\x97\\\\xbf\\\\xe6\\\\xe3i\\\\x99\\\\xb4\\\\xc6V\\\\x7fL\\\\xab\\\\xa2 \\\\x82r\\\\x9c\\\\x19\\\\x13\\\\x1c\\\\x8a:\\\\x90\"[\\''], jsonrpc='2.0')"
        } ],
        "stepsCount" : 1,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "deserializing response from JSON",
        "time" : {
          "start" : 1646729762037,
          "stop" : 1646729762037,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "showing as JSON",
          "time" : {
            "start" : 1646729762037,
            "stop" : 1646729762037,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ {
            "name" : "data",
            "value" : "{'jsonrpc': '2.0', 'id': 61, 'error': {'code': -32000, 'message': 'non-hexadecimal number found in fromhex() arg at position 0'}}"
          } ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : true
        }, {
          "name" : "deserialized",
          "time" : {
            "start" : 1646729762037,
            "stop" : 1646729762037,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "response",
          "value" : "<Response [200]>"
        } ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 12,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "937d3544b2aa68c5",
      "name" : "stdout",
      "source" : "937d3544b2aa68c5.txt",
      "type" : "text/plain",
      "size" : 830
    } ],
    "parameters" : [ ],
    "stepsCount" : 13,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "prepare_account::0",
    "time" : {
      "start" : 1646729762047,
      "stop" : 1646729766159,
      "duration" : 4112
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Operator end balance: 0.0024780828867050487726 NEON 74070764.28240535 SOL",
      "time" : {
        "start" : 1646729766025,
        "stop" : 1646729766025,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Account end balance: 1000 NEON",
      "time" : {
        "start" : 1646729766159,
        "stop" : 1646729766159,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "allure_environment::0",
    "time" : {
      "start" : 1646729796310,
      "stop" : 1646729796310,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "Basic: Json-RPC call tests - transactions"
  }, {
    "name" : "parentSuite",
    "value" : "integration.tests.basic"
  }, {
    "name" : "suite",
    "value" : "test_transactions"
  }, {
    "name" : "subSuite",
    "value" : "TestRpcCallsTransactions"
  }, {
    "name" : "host",
    "value" : "fv-az129-921"
  }, {
    "name" : "thread",
    "value" : "1782-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "integration.tests.basic.test_transactions"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 2,
        "broken" : 3,
        "skipped" : 0,
        "passed" : 0,
        "unknown" : 0,
        "total" : 5
      },
      "items" : [ {
        "uid" : "f0b090ca9b63b221",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/feature/254i/350//#testresult/f0b090ca9b63b221",
        "status" : "broken",
        "statusDetails" : "TypeError: Object of type HexBytes is not JSON serializable",
        "time" : {
          "start" : 1646727998807,
          "stop" : 1646728001566,
          "duration" : 2759
        }
      }, {
        "uid" : "fc99d938ebd7b279",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/feature/254i/348//#testresult/fc99d938ebd7b279",
        "status" : "failed",
        "statusDetails" : "AssertionError: The response type is error response\nassert False\n +  where False = isinstance(JsonRpcErrorResponse(id=23, error={'code': -32000, 'message': 'non-hexadecimal number found in fromhex() arg at position 0'}, jsonrpc='2.0'), JsonRpcResponse)",
        "time" : {
          "start" : 1646726060267,
          "stop" : 1646726062243,
          "duration" : 1976
        }
      }, {
        "uid" : "5ffadf30d2d7cdfa",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/feature/254i/346//#testresult/5ffadf30d2d7cdfa",
        "status" : "broken",
        "statusDetails" : "TypeError: Object of type HexBytes is not JSON serializable",
        "time" : {
          "start" : 1646724154720,
          "stop" : 1646724156673,
          "duration" : 1953
        }
      }, {
        "uid" : "d201aafbcc685cf",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/feature/254i/344//#testresult/d201aafbcc685cf",
        "status" : "broken",
        "statusDetails" : "TypeError: Object of type HexBytes is not JSON serializable",
        "time" : {
          "start" : 1646723533766,
          "stop" : 1646723535716,
          "duration" : 1950
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "99dd856e0670f3e5.json",
  "parameterValues" : [ ]
}