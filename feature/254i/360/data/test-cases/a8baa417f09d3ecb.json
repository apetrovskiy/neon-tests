{
  "uid" : "a8baa417f09d3ecb",
  "name" : "test_send_neon_from_one_account_to_another[1]",
  "fullName" : "integration.tests.basic.test_transfers.TestTransfer#test_send_neon_from_one_account_to_another",
  "historyId" : "e0fb2960146feb86d2510769aeee9644",
  "time" : {
    "start" : 1646747176592,
    "stop" : 1646747180457,
    "duration" : 3865
  },
  "description" : "Send neon from one account to another",
  "descriptionHtml" : "<p>Send neon from one account to another</p>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: Sender: expected balance = 984.0, actual balance = 998.993894703",
  "statusTrace" : "self = <integration.tests.basic.test_transfers.TestTransfer object at 0x7f6b2287f550>\namount = 1\n\n        @allure.step(\"test: send neon from one account to another\")\n        @pytest.mark.parametrize(\"amount\", TRANSFER_AMOUNT_DATA)\n        def test_send_neon_from_one_account_to_another(self, amount: Union[int,\n                                                                           float]):\n            \"\"\"Send neon from one account to another\"\"\"\n            sender_account = self.create_account_with_balance(GREAT_AMOUNT)\n            recipient_account = self.create_account_with_balance(\n                FIRST_FAUCET_REQUEST_AMOUNT)\n    \n            tx_receipt = self.transfer_neon(sender_account, recipient_account,\n                                            amount)\n    \n            #\n            print(\"----------------------------------------------------\")\n            print(tx_receipt)\n            '''\n    ----------------------------------------------------\n    AttributeDict({'transactionHash': HexBytes('0xdb17af3d719ba9c32ed98741eb4b3fb568aadc7f0ba4a981fd494aef9a723345'), 'transactionIndex': 0, 'blockHash': HexBytes('0x33f9147e12a0d264ccc31cf12e4c90010c3c6fd2b370211f337616ba3de87430'), 'blockNumber': 1010220, 'from': '0x98CeE1c921D16ed20B58C8f9d8A3A128492A5f7B', 'to': '0x3E14f865E7332913F1de50d7B5Bb0fA6Cc335359', 'gasUsed': 15000, 'cumulativeGasUsed': 15000, 'contractAddress': None, 'logs': [], 'status': 1, 'logsBloom': HexBytes('0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000')})\n    :::::::::::::::::::::::::::::::::::::::::::\n            '''\n            print(self.web3_client.gas_price())\n            print(self.web3_client.gas_price() * 15000)\n            print(\":::::::::::::::::::::::::::::::::::::::::::\")\n            #\n    \n>           self.assert_sender_amount(\n                sender_account.address, GREAT_AMOUNT - amount -\n                self.calculate_trx_gas(tx_receipt=tx_receipt))\n\nintegration/tests/basic/test_transfers.py:45: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nintegration/tests/basic/helpers/basic_helpers.py:151: in assert_sender_amount\n    self.compare_balance(expected_amount, balance, \"Sender: \")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <integration.tests.basic.test_transfers.TestTransfer object at 0x7f6b2287f550>\nexpected = 984.0, actual = Decimal('998.993894703'), message = 'Sender: '\n\n    @allure.step(\"comparing the balance with expectation\")\n    def compare_balance(self, expected: int, actual: int, message: str):\n        '''Compares the balance with expectation'''\n>       assert actual == expected, message + f\"expected balance = {expected}, actual balance = {actual}\"\nE       AssertionError: Sender: expected balance = 984.0, actual balance = 998.993894703\n\nintegration/tests/basic/helpers/basic_helpers.py:136: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "web3_client",
    "time" : {
      "start" : 1646747072413,
      "stop" : 1646747072415,
      "duration" : 2
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "pytestconfig",
    "time" : {
      "start" : 1646747072413,
      "stop" : 1646747072413,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "allure_environment",
    "time" : {
      "start" : 1646747072415,
      "stop" : 1646747073609,
      "duration" : 1194
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "faucet",
    "time" : {
      "start" : 1646747073609,
      "stop" : 1646747073610,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "operator",
    "time" : {
      "start" : 1646747073610,
      "stop" : 1646747073610,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "jsonrpc_requester",
    "time" : {
      "start" : 1646747073610,
      "stop" : 1646747073610,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "sol_client",
    "time" : {
      "start" : 1646747073610,
      "stop" : 1646747073610,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_account",
    "time" : {
      "start" : 1646747166698,
      "stop" : 1646747172741,
      "duration" : 6043
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Create account for tests",
      "time" : {
        "start" : 1646747166698,
        "stop" : 1646747166702,
        "duration" : 4
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Request 1000 NEON from faucet for 0x49aE611B94Dcd0A1F07808182661004B471b872B",
      "time" : {
        "start" : 1646747166702,
        "stop" : 1646747167543,
        "duration" : 841
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Operator initial balance: 0.0025988726560102369008 NEON 74070475.42876251 SOL",
      "time" : {
        "start" : 1646747172741,
        "stop" : 1646747172741,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 3,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "prepare_account",
    "time" : {
      "start" : 1646747176591,
      "stop" : 1646747176591,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_json_rpc_requester",
    "time" : {
      "start" : 1646747176591,
      "stop" : 1646747176591,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare",
    "time" : {
      "start" : 1646747176591,
      "stop" : 1646747176591,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "Send neon from one account to another",
    "status" : "failed",
    "statusMessage" : "AssertionError: Sender: expected balance = 984.0, actual balance = 998.993894703",
    "statusTrace" : "self = <integration.tests.basic.test_transfers.TestTransfer object at 0x7f6b2287f550>\namount = 1\n\n        @allure.step(\"test: send neon from one account to another\")\n        @pytest.mark.parametrize(\"amount\", TRANSFER_AMOUNT_DATA)\n        def test_send_neon_from_one_account_to_another(self, amount: Union[int,\n                                                                           float]):\n            \"\"\"Send neon from one account to another\"\"\"\n            sender_account = self.create_account_with_balance(GREAT_AMOUNT)\n            recipient_account = self.create_account_with_balance(\n                FIRST_FAUCET_REQUEST_AMOUNT)\n    \n            tx_receipt = self.transfer_neon(sender_account, recipient_account,\n                                            amount)\n    \n            #\n            print(\"----------------------------------------------------\")\n            print(tx_receipt)\n            '''\n    ----------------------------------------------------\n    AttributeDict({'transactionHash': HexBytes('0xdb17af3d719ba9c32ed98741eb4b3fb568aadc7f0ba4a981fd494aef9a723345'), 'transactionIndex': 0, 'blockHash': HexBytes('0x33f9147e12a0d264ccc31cf12e4c90010c3c6fd2b370211f337616ba3de87430'), 'blockNumber': 1010220, 'from': '0x98CeE1c921D16ed20B58C8f9d8A3A128492A5f7B', 'to': '0x3E14f865E7332913F1de50d7B5Bb0fA6Cc335359', 'gasUsed': 15000, 'cumulativeGasUsed': 15000, 'contractAddress': None, 'logs': [], 'status': 1, 'logsBloom': HexBytes('0x})\n    :::::::::::::::::::::::::::::::::::::::::::\n            '''\n            print(self.web3_client.gas_price())\n            print(self.web3_client.gas_price() * 15000)\n            print(\":::::::::::::::::::::::::::::::::::::::::::\")\n            #\n    \n>           self.assert_sender_amount(\n                sender_account.address, GREAT_AMOUNT - amount -\n                self.calculate_trx_gas(tx_receipt=tx_receipt))\n\nintegration/tests/basic/test_transfers.py:45: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nintegration/tests/basic/helpers/basic_helpers.py:151: in assert_sender_amount\n    self.compare_balance(expected_amount, balance, \"Sender: \")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <integration.tests.basic.test_transfers.TestTransfer object at 0x7f6b2287f550>\nexpected = 984.0, actual = Decimal('998.993894703'), message = 'Sender: '\n\n    @allure.step(\"comparing the balance with expectation\")\n    def compare_balance(self, expected: int, actual: int, message: str):\n        '''Compares the balance with expectation'''\n>       assert actual == expected, message + f\"expected balance = {expected}, actual balance = {actual}\"\nE       AssertionError: Sender: expected balance = 984.0, actual balance = 998.993894703\n\nintegration/tests/basic/helpers/basic_helpers.py:136: AssertionError",
    "steps" : [ {
      "name" : "test: send neon from one account to another",
      "time" : {
        "start" : 1646747176592,
        "stop" : 1646747180456,
        "duration" : 3864
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Sender: expected balance = 984.0, actual balance = 998.993894703\n",
      "statusTrace" : "  File \"/opt/hostedtoolcache/Python/3.9.10/x64/lib/python3.9/site-packages/allure_commons/_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"/home/runner/work/neon-tests/neon-tests/integration/tests/basic/test_transfers.py\", line 45, in test_send_neon_from_one_account_to_another\n    self.assert_sender_amount(\n  File \"/opt/hostedtoolcache/Python/3.9.10/x64/lib/python3.9/site-packages/allure_commons/_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"/home/runner/work/neon-tests/neon-tests/integration/tests/basic/helpers/basic_helpers.py\", line 151, in assert_sender_amount\n    self.compare_balance(expected_amount, balance, \"Sender: \")\n  File \"/opt/hostedtoolcache/Python/3.9.10/x64/lib/python3.9/site-packages/allure_commons/_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"/home/runner/work/neon-tests/neon-tests/integration/tests/basic/helpers/basic_helpers.py\", line 136, in compare_balance\n    assert actual == expected, message + f\"expected balance = {expected}, actual balance = {actual}\"\n",
      "steps" : [ {
        "name" : "creating a new account with balance",
        "time" : {
          "start" : 1646747176592,
          "stop" : 1646747177268,
          "duration" : 676
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "creating a new account",
          "time" : {
            "start" : 1646747176592,
            "stop" : 1646747176596,
            "duration" : 4
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "requesting faucet for Neon",
          "time" : {
            "start" : 1646747176596,
            "stop" : 1646747177268,
            "duration" : 672
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ {
            "name" : "wallet",
            "value" : "'0x65f8061B13ad629A1079048e4d38f163f6465AaE'"
          }, {
            "name" : "amount",
            "value" : "1000"
          } ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : true
        } ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "amount",
          "value" : "1000"
        } ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "creating a new account with balance",
        "time" : {
          "start" : 1646747177269,
          "stop" : 1646747177944,
          "duration" : 675
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "creating a new account",
          "time" : {
            "start" : 1646747177269,
            "stop" : 1646747177273,
            "duration" : 4
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "requesting faucet for Neon",
          "time" : {
            "start" : 1646747177274,
            "stop" : 1646747177944,
            "duration" : 670
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ {
            "name" : "wallet",
            "value" : "'0x4c97F6932DaFC62223Aa5EB3455a4Af3012AC4EA'"
          }, {
            "name" : "amount",
            "value" : "5"
          } ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : true
        } ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "amount",
          "value" : "5"
        } ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "transferring tokens",
        "time" : {
          "start" : 1646747177945,
          "stop" : 1646747179961,
          "duration" : 2016
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "processing transaction",
          "time" : {
            "start" : 1646747177945,
            "stop" : 1646747179961,
            "duration" : 2016
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ {
            "name" : "sender_account",
            "value" : "<eth_account.signers.local.LocalAccount object at 0x7f6b228fb3a0>"
          }, {
            "name" : "recipient_account",
            "value" : "<eth_account.signers.local.LocalAccount object at 0x7f6b22915b20>"
          }, {
            "name" : "amount",
            "value" : "1"
          }, {
            "name" : "message",
            "value" : "'InvalidInstructionData'"
          } ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : true
        } ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "sender_account",
          "value" : "<eth_account.signers.local.LocalAccount object at 0x7f6b228fb3a0>"
        }, {
          "name" : "recipient_account",
          "value" : "<eth_account.signers.local.LocalAccount object at 0x7f6b22915b20>"
        }, {
          "name" : "amount",
          "value" : "1"
        } ],
        "stepsCount" : 1,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "calculating gas",
        "time" : {
          "start" : 1646747180288,
          "stop" : 1646747180288,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "tx_receipt",
          "value" : "AttributeDict({'transactionHash': HexBytes('0x55faec5046d4c5cbb8c4215e0f222c7c9af0bca4345e72c6f504d9b951f50955'), 'transactionIndex': 0, 'blockHash': HexBytes('0xe2b1955569b828058df11a40b73d3959ba9e4a80b967ae92efbf354a3c034805'), 'blockNumber': 1027779, 'from': '0x65f8061B13ad629A1079048e4d38f163f6465AaE', 'to': '0x4c97F6932DaFC62223Aa5EB3455a4Af3012AC4EA', 'gasUsed': 15000, 'cumulativeGasUsed': 15000, 'contractAddress': None, 'logs': [], 'status': 1, 'logsBloom': HexBytes('0x})"
        } ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "checking sender's balance",
        "time" : {
          "start" : 1646747180288,
          "stop" : 1646747180456,
          "duration" : 168
        },
        "status" : "failed",
        "statusMessage" : "AssertionError: Sender: expected balance = 984.0, actual balance = 998.993894703\n",
        "statusTrace" : "  File \"/opt/hostedtoolcache/Python/3.9.10/x64/lib/python3.9/site-packages/allure_commons/_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"/home/runner/work/neon-tests/neon-tests/integration/tests/basic/helpers/basic_helpers.py\", line 151, in assert_sender_amount\n    self.compare_balance(expected_amount, balance, \"Sender: \")\n  File \"/opt/hostedtoolcache/Python/3.9.10/x64/lib/python3.9/site-packages/allure_commons/_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"/home/runner/work/neon-tests/neon-tests/integration/tests/basic/helpers/basic_helpers.py\", line 136, in compare_balance\n    assert actual == expected, message + f\"expected balance = {expected}, actual balance = {actual}\"\n",
        "steps" : [ {
          "name" : "getting balance of account",
          "time" : {
            "start" : 1646747180288,
            "stop" : 1646747180456,
            "duration" : 168
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ {
            "name" : "address",
            "value" : "'0x65f8061B13ad629A1079048e4d38f163f6465AaE'"
          } ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : true
        }, {
          "name" : "comparing the balance with expectation",
          "time" : {
            "start" : 1646747180456,
            "stop" : 1646747180456,
            "duration" : 0
          },
          "status" : "failed",
          "statusMessage" : "AssertionError: Sender: expected balance = 984.0, actual balance = 998.993894703\n",
          "statusTrace" : "  File \"/opt/hostedtoolcache/Python/3.9.10/x64/lib/python3.9/site-packages/allure_commons/_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"/home/runner/work/neon-tests/neon-tests/integration/tests/basic/helpers/basic_helpers.py\", line 136, in compare_balance\n    assert actual == expected, message + f\"expected balance = {expected}, actual balance = {actual}\"\n",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ {
            "name" : "expected",
            "value" : "984.0"
          }, {
            "name" : "actual",
            "value" : "Decimal('998.993894703')"
          }, {
            "name" : "message",
            "value" : "'Sender: '"
          } ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : true,
          "hasContent" : true
        } ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "address",
          "value" : "'0x65f8061B13ad629A1079048e4d38f163f6465AaE'"
        }, {
          "name" : "expected_amount",
          "value" : "984.0"
        } ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "amount",
        "value" : "1"
      } ],
      "stepsCount" : 12,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "45c2e08751d0f245",
      "name" : "stdout",
      "source" : "45c2e08751d0f245.txt",
      "type" : "text/plain",
      "size" : 1125
    } ],
    "parameters" : [ ],
    "stepsCount" : 13,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "prepare_account::0",
    "time" : {
      "start" : 1646747197612,
      "stop" : 1646747202987,
      "duration" : 5375
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Operator end balance: 0.0025988727048945031008 NEON 74070475.37546515 SOL",
      "time" : {
        "start" : 1646747202817,
        "stop" : 1646747202817,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Account end balance: 1000 NEON",
      "time" : {
        "start" : 1646747202987,
        "stop" : 1646747202987,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "allure_environment::0",
    "time" : {
      "start" : 1646747202992,
      "stop" : 1646747202993,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "Basic: transfer tests"
  }, {
    "name" : "parentSuite",
    "value" : "integration.tests.basic"
  }, {
    "name" : "suite",
    "value" : "test_transfers"
  }, {
    "name" : "subSuite",
    "value" : "TestTransfer"
  }, {
    "name" : "host",
    "value" : "fv-az445-188"
  }, {
    "name" : "thread",
    "value" : "1766-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "integration.tests.basic.test_transfers"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "amount",
    "value" : "1"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 2,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 0,
        "unknown" : 0,
        "total" : 2
      },
      "items" : [ {
        "uid" : "6a5ee6718871ff47",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/feature/254i/358//#testresult/6a5ee6718871ff47",
        "status" : "failed",
        "statusDetails" : "AssertionError: Sender: expected balance = 999, actual balance = 998.9939067909",
        "time" : {
          "start" : 1646742541809,
          "stop" : 1646742545398,
          "duration" : 3589
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "a8baa417f09d3ecb.json",
  "parameterValues" : [ "1" ]
}