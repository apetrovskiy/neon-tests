{
  "uid" : "fb9d914c0326c2c7",
  "name" : "test_send_neon_from_one_account_to_another[0.01]",
  "fullName" : "integration.tests.basic.test_transfers.TestTransfer#test_send_neon_from_one_account_to_another",
  "historyId" : "468859a02cbbf36eb35dac8ca17be612",
  "time" : {
    "start" : 1646751419907,
    "stop" : 1646751423684,
    "duration" : 3777
  },
  "description" : "Send neon from one account to another",
  "descriptionHtml" : "<p>Send neon from one account to another</p>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: Sender: expected balance = 999.984, actual balance = 999.984",
  "statusTrace" : "self = <integration.tests.basic.test_transfers.TestTransfer object at 0x7f15ad47a3a0>\namount = 0.01\n\n        @allure.step(\"test: send neon from one account to another\")\n        @pytest.mark.parametrize(\"amount\", TRANSFER_AMOUNT_DATA)\n        def test_send_neon_from_one_account_to_another(self, amount: Union[int,\n                                                                           float]):\n            \"\"\"Send neon from one account to another\"\"\"\n            sender_account = self.create_account_with_balance(GREAT_AMOUNT)\n            recipient_account = self.create_account_with_balance(\n                FIRST_FAUCET_REQUEST_AMOUNT)\n    \n            tx_receipt = self.transfer_neon(sender_account, recipient_account,\n                                            amount)\n    \n            #\n            print(\"----------------------------------------------------\")\n            print(tx_receipt)\n            '''\n    ----------------------------------------------------\n    AttributeDict({'transactionHash': HexBytes('0xdb17af3d719ba9c32ed98741eb4b3fb568aadc7f0ba4a981fd494aef9a723345'), 'transactionIndex': 0, 'blockHash': HexBytes('0x33f9147e12a0d264ccc31cf12e4c90010c3c6fd2b370211f337616ba3de87430'), 'blockNumber': 1010220, 'from': '0x98CeE1c921D16ed20B58C8f9d8A3A128492A5f7B', 'to': '0x3E14f865E7332913F1de50d7B5Bb0fA6Cc335359', 'gasUsed': 15000, 'cumulativeGasUsed': 15000, 'contractAddress': None, 'logs': [], 'status': 1, 'logsBloom': HexBytes('0x})\n    :::::::::::::::::::::::::::::::::::::::::::\n            '''\n            print(self.web3_client.gas_price())\n            print(self.web3_client.gas_price() * 15000)\n            print(\":::::::::::::::::::::::::::::::::::::::::::\")\n            #\n    \n>           self.assert_sender_amount(\n                sender_account.address,\n                round(\n                    GREAT_AMOUNT - amount -\n                    self.calculate_trx_gas(tx_receipt=tx_receipt), ROUND_DIGITS))\n\nintegration/tests/basic/test_transfers.py:45: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nintegration/tests/basic/helpers/basic_helpers.py:153: in assert_sender_amount\n    self.compare_balance(expected_amount, round(balance, ROUND_DIGITS),\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <integration.tests.basic.test_transfers.TestTransfer object at 0x7f15ad47a3a0>\nexpected = 999.984, actual = Decimal('999.984'), message = 'Sender: '\n\n    @allure.step(\"comparing the balance with expectation\")\n    def compare_balance(self, expected: int, actual: int, message: str):\n        '''Compares the balance with expectation'''\n>       assert actual == expected, message + f\"expected balance = {expected}, actual balance = {actual}\"\nE       AssertionError: Sender: expected balance = 999.984, actual balance = 999.984\n\nintegration/tests/basic/helpers/basic_helpers.py:137: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "pytestconfig",
    "time" : {
      "start" : 1646751320427,
      "stop" : 1646751320427,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "web3_client",
    "time" : {
      "start" : 1646751320427,
      "stop" : 1646751320428,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "allure_environment",
    "time" : {
      "start" : 1646751320429,
      "stop" : 1646751321433,
      "duration" : 1004
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "sol_client",
    "time" : {
      "start" : 1646751321434,
      "stop" : 1646751321434,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "faucet",
    "time" : {
      "start" : 1646751321434,
      "stop" : 1646751321434,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "jsonrpc_requester",
    "time" : {
      "start" : 1646751321434,
      "stop" : 1646751321434,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "operator",
    "time" : {
      "start" : 1646751321434,
      "stop" : 1646751321434,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_account",
    "time" : {
      "start" : 1646751413842,
      "stop" : 1646751419906,
      "duration" : 6064
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Create account for tests",
      "time" : {
        "start" : 1646751413842,
        "stop" : 1646751413846,
        "duration" : 4
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Request 1000 NEON from faucet for 0x08CF87C584fa2fFD53EEDaa41404607Fe8EbA6f1",
      "time" : {
        "start" : 1646751413846,
        "stop" : 1646751414706,
        "duration" : 860
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Operator initial balance: 0.0025988731678226314008 NEON 74070474.47606619 SOL",
      "time" : {
        "start" : 1646751419906,
        "stop" : 1646751419906,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 3,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "prepare",
    "time" : {
      "start" : 1646751413842,
      "stop" : 1646751413842,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_account",
    "time" : {
      "start" : 1646751419906,
      "stop" : 1646751419906,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_json_rpc_requester",
    "time" : {
      "start" : 1646751419906,
      "stop" : 1646751419906,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "Send neon from one account to another",
    "status" : "failed",
    "statusMessage" : "AssertionError: Sender: expected balance = 999.984, actual balance = 999.984",
    "statusTrace" : "self = <integration.tests.basic.test_transfers.TestTransfer object at 0x7f15ad47a3a0>\namount = 0.01\n\n        @allure.step(\"test: send neon from one account to another\")\n        @pytest.mark.parametrize(\"amount\", TRANSFER_AMOUNT_DATA)\n        def test_send_neon_from_one_account_to_another(self, amount: Union[int,\n                                                                           float]):\n            \"\"\"Send neon from one account to another\"\"\"\n            sender_account = self.create_account_with_balance(GREAT_AMOUNT)\n            recipient_account = self.create_account_with_balance(\n                FIRST_FAUCET_REQUEST_AMOUNT)\n    \n            tx_receipt = self.transfer_neon(sender_account, recipient_account,\n                                            amount)\n    \n            #\n            print(\"----------------------------------------------------\")\n            print(tx_receipt)\n            '''\n    ----------------------------------------------------\n    AttributeDict({'transactionHash': HexBytes('0xdb17af3d719ba9c32ed98741eb4b3fb568aadc7f0ba4a981fd494aef9a723345'), 'transactionIndex': 0, 'blockHash': HexBytes('0x33f9147e12a0d264ccc31cf12e4c90010c3c6fd2b370211f337616ba3de87430'), 'blockNumber': 1010220, 'from': '0x98CeE1c921D16ed20B58C8f9d8A3A128492A5f7B', 'to': '0x3E14f865E7332913F1de50d7B5Bb0fA6Cc335359', 'gasUsed': 15000, 'cumulativeGasUsed': 15000, 'contractAddress': None, 'logs': [], 'status': 1, 'logsBloom': HexBytes('0x})\n    :::::::::::::::::::::::::::::::::::::::::::\n            '''\n            print(self.web3_client.gas_price())\n            print(self.web3_client.gas_price() * 15000)\n            print(\":::::::::::::::::::::::::::::::::::::::::::\")\n            #\n    \n>           self.assert_sender_amount(\n                sender_account.address,\n                round(\n                    GREAT_AMOUNT - amount -\n                    self.calculate_trx_gas(tx_receipt=tx_receipt), ROUND_DIGITS))\n\nintegration/tests/basic/test_transfers.py:45: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nintegration/tests/basic/helpers/basic_helpers.py:153: in assert_sender_amount\n    self.compare_balance(expected_amount, round(balance, ROUND_DIGITS),\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <integration.tests.basic.test_transfers.TestTransfer object at 0x7f15ad47a3a0>\nexpected = 999.984, actual = Decimal('999.984'), message = 'Sender: '\n\n    @allure.step(\"comparing the balance with expectation\")\n    def compare_balance(self, expected: int, actual: int, message: str):\n        '''Compares the balance with expectation'''\n>       assert actual == expected, message + f\"expected balance = {expected}, actual balance = {actual}\"\nE       AssertionError: Sender: expected balance = 999.984, actual balance = 999.984\n\nintegration/tests/basic/helpers/basic_helpers.py:137: AssertionError",
    "steps" : [ {
      "name" : "test: send neon from one account to another",
      "time" : {
        "start" : 1646751419908,
        "stop" : 1646751423683,
        "duration" : 3775
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Sender: expected balance = 999.984, actual balance = 999.984\n",
      "statusTrace" : "  File \"/opt/hostedtoolcache/Python/3.9.10/x64/lib/python3.9/site-packages/allure_commons/_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"/home/runner/work/neon-tests/neon-tests/integration/tests/basic/test_transfers.py\", line 45, in test_send_neon_from_one_account_to_another\n    self.assert_sender_amount(\n  File \"/opt/hostedtoolcache/Python/3.9.10/x64/lib/python3.9/site-packages/allure_commons/_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"/home/runner/work/neon-tests/neon-tests/integration/tests/basic/helpers/basic_helpers.py\", line 153, in assert_sender_amount\n    self.compare_balance(expected_amount, round(balance, ROUND_DIGITS),\n  File \"/opt/hostedtoolcache/Python/3.9.10/x64/lib/python3.9/site-packages/allure_commons/_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"/home/runner/work/neon-tests/neon-tests/integration/tests/basic/helpers/basic_helpers.py\", line 137, in compare_balance\n    assert actual == expected, message + f\"expected balance = {expected}, actual balance = {actual}\"\n",
      "steps" : [ {
        "name" : "creating a new account with balance",
        "time" : {
          "start" : 1646751419908,
          "stop" : 1646751420586,
          "duration" : 678
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "creating a new account",
          "time" : {
            "start" : 1646751419908,
            "stop" : 1646751419913,
            "duration" : 5
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "requesting faucet for Neon",
          "time" : {
            "start" : 1646751419913,
            "stop" : 1646751420586,
            "duration" : 673
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ {
            "name" : "wallet",
            "value" : "'0x9e416F30A33124d93A890e8B92568687091E6b55'"
          }, {
            "name" : "amount",
            "value" : "1000"
          } ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : true
        } ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "amount",
          "value" : "1000"
        } ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "creating a new account with balance",
        "time" : {
          "start" : 1646751420586,
          "stop" : 1646751421267,
          "duration" : 681
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "creating a new account",
          "time" : {
            "start" : 1646751420586,
            "stop" : 1646751420591,
            "duration" : 5
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "requesting faucet for Neon",
          "time" : {
            "start" : 1646751420591,
            "stop" : 1646751421267,
            "duration" : 676
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ {
            "name" : "wallet",
            "value" : "'0x5B2C098EC9AE3B800b72C9Feb26fBA053feE062e'"
          }, {
            "name" : "amount",
            "value" : "5"
          } ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : true
        } ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "amount",
          "value" : "5"
        } ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "transferring tokens",
        "time" : {
          "start" : 1646751421267,
          "stop" : 1646751422918,
          "duration" : 1651
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "processing transaction",
          "time" : {
            "start" : 1646751421267,
            "stop" : 1646751422918,
            "duration" : 1651
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ {
            "name" : "sender_account",
            "value" : "<eth_account.signers.local.LocalAccount object at 0x7f15ad4c4e50>"
          }, {
            "name" : "recipient_account",
            "value" : "<eth_account.signers.local.LocalAccount object at 0x7f15ad4c4490>"
          }, {
            "name" : "amount",
            "value" : "0.01"
          }, {
            "name" : "message",
            "value" : "'InvalidInstructionData'"
          } ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : true
        } ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "sender_account",
          "value" : "<eth_account.signers.local.LocalAccount object at 0x7f15ad4c4e50>"
        }, {
          "name" : "recipient_account",
          "value" : "<eth_account.signers.local.LocalAccount object at 0x7f15ad4c4490>"
        }, {
          "name" : "amount",
          "value" : "0.01"
        } ],
        "stepsCount" : 1,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "calculating gas",
        "time" : {
          "start" : 1646751423294,
          "stop" : 1646751423509,
          "duration" : 215
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "tx_receipt",
          "value" : "AttributeDict({'transactionHash': HexBytes('0xc70f09047c7dda30343f16f958468774a529bde54bb5cdfe9c91abbe5c3d3a0e'), 'transactionIndex': 0, 'blockHash': HexBytes('0x1ac2c67bf06f589c102a8bca4197485fb9bc50d841fc64ea9ee2b10c7b811f44'), 'blockNumber': 1037649, 'from': '0x9e416F30A33124d93A890e8B92568687091E6b55', 'to': '0x5B2C098EC9AE3B800b72C9Feb26fBA053feE062e', 'gasUsed': 15000, 'cumulativeGasUsed': 15000, 'contractAddress': None, 'logs': [], 'status': 1, 'logsBloom': HexBytes('0x})"
        } ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "checking sender's balance",
        "time" : {
          "start" : 1646751423509,
          "stop" : 1646751423683,
          "duration" : 174
        },
        "status" : "failed",
        "statusMessage" : "AssertionError: Sender: expected balance = 999.984, actual balance = 999.984\n",
        "statusTrace" : "  File \"/opt/hostedtoolcache/Python/3.9.10/x64/lib/python3.9/site-packages/allure_commons/_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"/home/runner/work/neon-tests/neon-tests/integration/tests/basic/helpers/basic_helpers.py\", line 153, in assert_sender_amount\n    self.compare_balance(expected_amount, round(balance, ROUND_DIGITS),\n  File \"/opt/hostedtoolcache/Python/3.9.10/x64/lib/python3.9/site-packages/allure_commons/_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"/home/runner/work/neon-tests/neon-tests/integration/tests/basic/helpers/basic_helpers.py\", line 137, in compare_balance\n    assert actual == expected, message + f\"expected balance = {expected}, actual balance = {actual}\"\n",
        "steps" : [ {
          "name" : "getting balance of account",
          "time" : {
            "start" : 1646751423509,
            "stop" : 1646751423683,
            "duration" : 174
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ {
            "name" : "address",
            "value" : "'0x9e416F30A33124d93A890e8B92568687091E6b55'"
          } ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : true
        }, {
          "name" : "comparing the balance with expectation",
          "time" : {
            "start" : 1646751423683,
            "stop" : 1646751423683,
            "duration" : 0
          },
          "status" : "failed",
          "statusMessage" : "AssertionError: Sender: expected balance = 999.984, actual balance = 999.984\n",
          "statusTrace" : "  File \"/opt/hostedtoolcache/Python/3.9.10/x64/lib/python3.9/site-packages/allure_commons/_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"/home/runner/work/neon-tests/neon-tests/integration/tests/basic/helpers/basic_helpers.py\", line 137, in compare_balance\n    assert actual == expected, message + f\"expected balance = {expected}, actual balance = {actual}\"\n",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ {
            "name" : "expected",
            "value" : "999.984"
          }, {
            "name" : "actual",
            "value" : "Decimal('999.984')"
          }, {
            "name" : "message",
            "value" : "'Sender: '"
          } ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : true,
          "hasContent" : true
        } ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "address",
          "value" : "'0x9e416F30A33124d93A890e8B92568687091E6b55'"
        }, {
          "name" : "expected_amount",
          "value" : "999.984"
        } ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "amount",
        "value" : "0.01"
      } ],
      "stepsCount" : 12,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "d3d79f6866077fc",
      "name" : "stdout",
      "source" : "d3d79f6866077fc.txt",
      "type" : "text/plain",
      "size" : 1125
    } ],
    "parameters" : [ ],
    "stepsCount" : 13,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "prepare_account::0",
    "time" : {
      "start" : 1646751445217,
      "stop" : 1646751450594,
      "duration" : 5377
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Operator end balance: 0.0025988731920691075008 NEON 74070474.44628944 SOL",
      "time" : {
        "start" : 1646751450423,
        "stop" : 1646751450423,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Account end balance: 1000 NEON",
      "time" : {
        "start" : 1646751450594,
        "stop" : 1646751450594,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "allure_environment::0",
    "time" : {
      "start" : 1646751450600,
      "stop" : 1646751450600,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "Basic: transfer tests"
  }, {
    "name" : "parentSuite",
    "value" : "integration.tests.basic"
  }, {
    "name" : "suite",
    "value" : "test_transfers"
  }, {
    "name" : "subSuite",
    "value" : "TestTransfer"
  }, {
    "name" : "host",
    "value" : "fv-az447-893"
  }, {
    "name" : "thread",
    "value" : "1745-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "integration.tests.basic.test_transfers"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "amount",
    "value" : "0.01"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 7,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 0,
        "unknown" : 0,
        "total" : 7
      },
      "items" : [ {
        "uid" : "a399d870c1a517ad",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/feature/254i/368//#testresult/a399d870c1a517ad",
        "status" : "failed",
        "statusDetails" : "AssertionError: Sender: expected balance = 999.984, actual balance = 999.983883087",
        "time" : {
          "start" : 1646750826917,
          "stop" : 1646750830859,
          "duration" : 3942
        }
      }, {
        "uid" : "5d71f1d73862fd2a",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/feature/254i/366//#testresult/5d71f1d73862fd2a",
        "status" : "failed",
        "statusDetails" : "AssertionError: Sender: expected balance = 999.9839023986, actual balance = 999.9839122359",
        "time" : {
          "start" : 1646749384901,
          "stop" : 1646749387879,
          "duration" : 2978
        }
      }, {
        "uid" : "e375ca00e045e8c6",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/feature/254i/364//#testresult/e375ca00e045e8c6",
        "status" : "failed",
        "statusDetails" : "AssertionError: Sender: expected balance = -6075458399000.01, actual balance = 999.9839266833",
        "time" : {
          "start" : 1646748976563,
          "stop" : 1646748980326,
          "duration" : 3763
        }
      }, {
        "uid" : "79ecadcdbc5dc4b6",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/feature/254i/362//#testresult/79ecadcdbc5dc4b6",
        "status" : "failed",
        "statusDetails" : "AssertionError: Sender: expected balance = -6110378999000.01, actual balance = 999.983886354",
        "time" : {
          "start" : 1646747647347,
          "stop" : 1646747651069,
          "duration" : 3722
        }
      }, {
        "uid" : "6588d26dcdcd5bd3",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/feature/254i/360//#testresult/6588d26dcdcd5bd3",
        "status" : "failed",
        "statusDetails" : "AssertionError: Sender: expected balance = 984.99, actual balance = 999.98388345",
        "time" : {
          "start" : 1646747172742,
          "stop" : 1646747176576,
          "duration" : 3834
        }
      }, {
        "uid" : "6db85075ace5ae23",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/feature/254i/358//#testresult/6db85075ace5ae23",
        "status" : "failed",
        "statusDetails" : "AssertionError: Sender: expected balance = 999.99, actual balance = 999.9839076984",
        "time" : {
          "start" : 1646742538423,
          "stop" : 1646742541791,
          "duration" : 3368
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "fb9d914c0326c2c7.json",
  "parameterValues" : [ "0.01" ]
}