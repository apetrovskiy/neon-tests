{
  "uid" : "16d93ddd82761d14",
  "name" : "test_rpc_call_eth_estimateGas",
  "fullName" : "integration.tests.basic.test_rpc_calls.TestRpcCalls#test_rpc_call_eth_estimateGas",
  "historyId" : "af88a3a991324ea2b9c85b203e39309c",
  "time" : {
    "start" : 1646919736863,
    "stop" : 1646919738386,
    "duration" : 1523
  },
  "description" : "Verify implemented rpc calls work eth_estimateGas",
  "descriptionHtml" : "<p>Verify implemented rpc calls work eth_estimateGas</p>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: <AssertMessage.CONTAINS_ERROR: 'Contains the error data'>\nassert False\n +  where False = <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f60806c3550>>(JsonRpcErrorResponse(id=93, error={'code': -32000, 'message': \"'NoneType' object is not subscriptable\"}, jsonrpc='2.0'))\n +    where <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f60806c3550>> = <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f60806c3550>.assert_no_error_object",
  "statusTrace" : "self = <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f60806c3550>\n\n    @allure.step(\"test: verify implemented rpc calls work eth_estimateGas\")\n    def test_rpc_call_eth_estimateGas(self):\n        \"\"\"Verify implemented rpc calls work eth_estimateGas\"\"\"\n        sender_account = self.create_account_with_balance()\n        recipient_account = self.create_account_with_balance()\n    \n        # TOOD: variants\n        data = CallRequest(from_=sender_account.address,\n                           to=recipient_account.address,\n                           value=hex(1))\n        params = [data]\n        model = RpcRequestFactory.get_estimate_gas(params=params)\n        response = self.jsonrpc_requester.request_json_rpc(model)\n        actual_result = self.jsonrpc_requester.deserialize_response(response)\n    \n        assert actual_result.id == model.id, AssertMessage.WRONG_ID.value\n>       assert self.assert_no_error_object(\n            actual_result), AssertMessage.CONTAINS_ERROR\nE       AssertionError: <AssertMessage.CONTAINS_ERROR: 'Contains the error data'>\nE       assert False\nE        +  where False = <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f60806c3550>>(JsonRpcErrorResponse(id=93, error={'code': -32000, 'message': \"'NoneType' object is not subscriptable\"}, jsonrpc='2.0'))\nE        +    where <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f60806c3550>> = <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f60806c3550>.assert_no_error_object\n\nintegration/tests/basic/test_rpc_calls.py:74: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "pytestconfig",
    "time" : {
      "start" : 1646919705779,
      "stop" : 1646919705779,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "web3_client",
    "time" : {
      "start" : 1646919705779,
      "stop" : 1646919705780,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "allure_environment",
    "time" : {
      "start" : 1646919705780,
      "stop" : 1646919706992,
      "duration" : 1212
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "faucet",
    "time" : {
      "start" : 1646919706992,
      "stop" : 1646919706993,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "sol_client",
    "time" : {
      "start" : 1646919706993,
      "stop" : 1646919706993,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "jsonrpc_requester",
    "time" : {
      "start" : 1646919706993,
      "stop" : 1646919706993,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "operator",
    "time" : {
      "start" : 1646919706993,
      "stop" : 1646919706993,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_account",
    "time" : {
      "start" : 1646919727414,
      "stop" : 1646919733476,
      "duration" : 6062
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Create account for tests",
      "time" : {
        "start" : 1646919727414,
        "stop" : 1646919727419,
        "duration" : 5
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Request 1000 NEON from faucet for 0xb39905230773EfFE517F5e9c795aAE4150891a8f",
      "time" : {
        "start" : 1646919727419,
        "stop" : 1646919728262,
        "duration" : 843
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Operator initial balance: 0.0027710479081866074736 NEON 74067446.71553227 SOL",
      "time" : {
        "start" : 1646919733476,
        "stop" : 1646919733476,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 3,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "prepare_account",
    "time" : {
      "start" : 1646919736863,
      "stop" : 1646919736863,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare",
    "time" : {
      "start" : 1646919736863,
      "stop" : 1646919736863,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_json_rpc_requester",
    "time" : {
      "start" : 1646919736863,
      "stop" : 1646919736863,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "Verify implemented rpc calls work eth_estimateGas",
    "status" : "failed",
    "statusMessage" : "AssertionError: <AssertMessage.CONTAINS_ERROR: 'Contains the error data'>\nassert False\n +  where False = <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f60806c3550>>(JsonRpcErrorResponse(id=93, error={'code': -32000, 'message': \"'NoneType' object is not subscriptable\"}, jsonrpc='2.0'))\n +    where <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f60806c3550>> = <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f60806c3550>.assert_no_error_object",
    "statusTrace" : "self = <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f60806c3550>\n\n    @allure.step(\"test: verify implemented rpc calls work eth_estimateGas\")\n    def test_rpc_call_eth_estimateGas(self):\n        \"\"\"Verify implemented rpc calls work eth_estimateGas\"\"\"\n        sender_account = self.create_account_with_balance()\n        recipient_account = self.create_account_with_balance()\n    \n        # TOOD: variants\n        data = CallRequest(from_=sender_account.address,\n                           to=recipient_account.address,\n                           value=hex(1))\n        params = [data]\n        model = RpcRequestFactory.get_estimate_gas(params=params)\n        response = self.jsonrpc_requester.request_json_rpc(model)\n        actual_result = self.jsonrpc_requester.deserialize_response(response)\n    \n        assert actual_result.id == model.id, AssertMessage.WRONG_ID.value\n>       assert self.assert_no_error_object(\n            actual_result), AssertMessage.CONTAINS_ERROR\nE       AssertionError: <AssertMessage.CONTAINS_ERROR: 'Contains the error data'>\nE       assert False\nE        +  where False = <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f60806c3550>>(JsonRpcErrorResponse(id=93, error={'code': -32000, 'message': \"'NoneType' object is not subscriptable\"}, jsonrpc='2.0'))\nE        +    where <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f60806c3550>> = <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f60806c3550>.assert_no_error_object\n\nintegration/tests/basic/test_rpc_calls.py:74: AssertionError",
    "steps" : [ {
      "name" : "test: verify implemented rpc calls work eth_estimateGas",
      "time" : {
        "start" : 1646919736863,
        "stop" : 1646919738386,
        "duration" : 1523
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: <AssertMessage.CONTAINS_ERROR: 'Contains the error data'>\nassert False\n +  where False = <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f60806c3550>>(JsonRpcErrorResponse(id=93, error={'code': -32000, 'message': \"'NoneType' object is not subscriptable\"}, jsonrpc='2.0'))\n +    where <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f60806c3550>> = <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f60806c3550>.assert_no_error_object\n",
      "statusTrace" : "  File \"/opt/hostedtoolcache/Python/3.9.10/x64/lib/python3.9/site-packages/allure_commons/_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"/home/runner/work/neon-tests/neon-tests/integration/tests/basic/test_rpc_calls.py\", line 74, in test_rpc_call_eth_estimateGas\n    assert self.assert_no_error_object(\n",
      "steps" : [ {
        "name" : "creating a new account with balance",
        "time" : {
          "start" : 1646919736864,
          "stop" : 1646919737542,
          "duration" : 678
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "creating a new account",
          "time" : {
            "start" : 1646919736864,
            "stop" : 1646919736868,
            "duration" : 4
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "requesting faucet for Neon",
          "time" : {
            "start" : 1646919736868,
            "stop" : 1646919737542,
            "duration" : 674
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ {
            "name" : "wallet",
            "value" : "'0x34e6E880fCE60A34487B033993c66A09406c5706'"
          }, {
            "name" : "amount",
            "value" : "5"
          } ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : true
        } ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "amount",
          "value" : "5"
        } ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "creating a new account with balance",
        "time" : {
          "start" : 1646919737542,
          "stop" : 1646919738220,
          "duration" : 678
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "creating a new account",
          "time" : {
            "start" : 1646919737542,
            "stop" : 1646919737545,
            "duration" : 3
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "requesting faucet for Neon",
          "time" : {
            "start" : 1646919737546,
            "stop" : 1646919738220,
            "duration" : 674
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ {
            "name" : "wallet",
            "value" : "'0x47A8ca68fe6cE3b10A7ac05E5071f06682875b27'"
          }, {
            "name" : "amount",
            "value" : "5"
          } ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : true
        } ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "amount",
          "value" : "5"
        } ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "the model built",
        "time" : {
          "start" : 1646919738220,
          "stop" : 1646919738220,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "requesting Json-RPC",
        "time" : {
          "start" : 1646919738220,
          "stop" : 1646919738385,
          "duration" : 165
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "getting response",
          "time" : {
            "start" : 1646919738220,
            "stop" : 1646919738385,
            "duration" : 165
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "data",
          "value" : "JsonRpcRequest(id=93, method='eth_estimateGas', params=[CallRequest(from_='0x34e6E880fCE60A34487B033993c66A09406c5706', to='0x47A8ca68fe6cE3b10A7ac05E5071f06682875b27', gas=None, gas_price=None, value='0x1', data=None)], jsonrpc='2.0')"
        } ],
        "stepsCount" : 1,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "deserializing response from JSON",
        "time" : {
          "start" : 1646919738385,
          "stop" : 1646919738385,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "showing as JSON",
          "time" : {
            "start" : 1646919738385,
            "stop" : 1646919738385,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ {
            "name" : "data",
            "value" : "{'jsonrpc': '2.0', 'id': 93, 'error': {'code': -32000, 'message': \"'NoneType' object is not subscriptable\"}}"
          } ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : true
        }, {
          "name" : "deserialized",
          "time" : {
            "start" : 1646919738385,
            "stop" : 1646919738385,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "response",
          "value" : "<Response [200]>"
        } ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "checking that the error subobject is not present",
        "time" : {
          "start" : 1646919738386,
          "stop" : 1646919738386,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "data",
          "value" : "JsonRpcErrorResponse(id=93, error={'code': -32000, 'message': \"'NoneType' object is not subscriptable\"}, jsonrpc='2.0')"
        } ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 13,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 14,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "prepare_account::0",
    "time" : {
      "start" : 1646919741499,
      "stop" : 1646919746888,
      "duration" : 5389
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Operator end balance: 0.0027710479081866074736 NEON 74067446.67795031 SOL",
      "time" : {
        "start" : 1646919746718,
        "stop" : 1646919746718,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Account end balance: 1000 NEON",
      "time" : {
        "start" : 1646919746888,
        "stop" : 1646919746888,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "allure_environment::0",
    "time" : {
      "start" : 1646919844283,
      "stop" : 1646919844283,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "Basic: Json-RPC call tests"
  }, {
    "name" : "parentSuite",
    "value" : "integration.tests.basic"
  }, {
    "name" : "suite",
    "value" : "test_rpc_calls"
  }, {
    "name" : "subSuite",
    "value" : "TestRpcCalls"
  }, {
    "name" : "host",
    "value" : "fv-az453-225"
  }, {
    "name" : "thread",
    "value" : "1877-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "integration.tests.basic.test_rpc_calls"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 3,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 0,
        "unknown" : 0,
        "total" : 3
      },
      "items" : [ {
        "uid" : "e96e1b54ad85bf5d",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/feature/254n/436//#testresult/e96e1b54ad85bf5d",
        "status" : "failed",
        "statusDetails" : "AssertionError: <AssertMessage.CONTAINS_ERROR: 'Contains the error data'>\nassert False\n +  where False = <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f56af8db5e0>>(JsonRpcErrorResponse(id=44, error={'code': -32000, 'message': \"'NoneType' object is not subscriptable\"}, jsonrpc='2.0'))\n +    where <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f56af8db5e0>> = <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f56af8db5e0>.assert_no_error_object",
        "time" : {
          "start" : 1646919640549,
          "stop" : 1646919642070,
          "duration" : 1521
        }
      }, {
        "uid" : "b7716faaa61c149e",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/feature/254n/432//#testresult/b7716faaa61c149e",
        "status" : "failed",
        "statusDetails" : "AssertionError: <AssertMessage.CONTAINS_ERROR: 'Contains the error data'>\nassert False\n +  where False = <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f7a23b935e0>>(JsonRpcErrorResponse(id=79, error={'code': -32000, 'message': \"'NoneType' object is not subscriptable\"}, jsonrpc='2.0'))\n +    where <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f7a23b935e0>> = <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f7a23b935e0>.assert_no_error_object",
        "time" : {
          "start" : 1646919133849,
          "stop" : 1646919135369,
          "duration" : 1520
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "16d93ddd82761d14.json",
  "parameterValues" : [ ]
}