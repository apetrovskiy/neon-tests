{
  "uid" : "efefeb5b53ae4969",
  "name" : "test_rpc_call_eth_estimateGas",
  "fullName" : "integration.tests.basic.test_rpc_calls.TestRpcCalls#test_rpc_call_eth_estimateGas",
  "historyId" : "af88a3a991324ea2b9c85b203e39309c",
  "time" : {
    "start" : 1647001987526,
    "stop" : 1647001988841,
    "duration" : 1315
  },
  "description" : "Verify implemented rpc calls work eth_estimateGas",
  "descriptionHtml" : "<p>Verify implemented rpc calls work eth_estimateGas</p>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: <AssertMessage.CONTAINS_ERROR: 'Contains the error data'>\nassert False\n +  where False = <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7fa916b7ffa0>>(JsonRpcErrorResponse(id=17, error={'code': -32000, 'message': \"'NoneType' object is not subscriptable\"}, jsonrpc='2.0'))\n +    where <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7fa916b7ffa0>> = <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7fa916b7ffa0>.assert_no_error_object",
  "statusTrace" : "self = <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7fa916b7ffa0>\n\n    @allure.step(\"test: verify implemented rpc calls work eth_estimateGas\")\n    def test_rpc_call_eth_estimateGas(self):\n        \"\"\"Verify implemented rpc calls work eth_estimateGas\"\"\"\n        sender_account = self.create_account_with_balance()\n        recipient_account = self.create_account_with_balance()\n    \n        # TOOD: variants\n        data = CallRequest(from_=sender_account.address,\n                           to=recipient_account.address,\n                           value=hex(1))\n        params = [data]\n        model = RpcRequestFactory.get_estimate_gas(params=params)\n        response = self.jsonrpc_requester.request_json_rpc(model)\n        actual_result = self.jsonrpc_requester.deserialize_response(response)\n    \n        assert actual_result.id == model.id, AssertMessage.WRONG_ID.value\n>       assert self.assert_no_error_object(\n            actual_result), AssertMessage.CONTAINS_ERROR\nE       AssertionError: <AssertMessage.CONTAINS_ERROR: 'Contains the error data'>\nE       assert False\nE        +  where False = <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7fa916b7ffa0>>(JsonRpcErrorResponse(id=17, error={'code': -32000, 'message': \"'NoneType' object is not subscriptable\"}, jsonrpc='2.0'))\nE        +    where <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7fa916b7ffa0>> = <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7fa916b7ffa0>.assert_no_error_object\n\nintegration/tests/basic/test_rpc_calls.py:80: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "pytestconfig",
    "time" : {
      "start" : 1647001967608,
      "stop" : 1647001967608,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "web3_client",
    "time" : {
      "start" : 1647001967608,
      "stop" : 1647001967610,
      "duration" : 2
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "allure_environment",
    "time" : {
      "start" : 1647001967610,
      "stop" : 1647001968196,
      "duration" : 586
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "jsonrpc_requester",
    "time" : {
      "start" : 1647001968196,
      "stop" : 1647001968197,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "faucet",
    "time" : {
      "start" : 1647001968196,
      "stop" : 1647001968196,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "sol_client",
    "time" : {
      "start" : 1647001968197,
      "stop" : 1647001968197,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "operator",
    "time" : {
      "start" : 1647001968197,
      "stop" : 1647001968197,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "prepare_account",
    "time" : {
      "start" : 1647001981257,
      "stop" : 1647001984985,
      "duration" : 3728
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Create account for tests",
      "time" : {
        "start" : 1647001981257,
        "stop" : 1647001981262,
        "duration" : 5
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false,
      "stepsCount" : 0
    }, {
      "name" : "Request 1000 NEON from faucet for 0x301dDbc0b5c6188fB4C7D917a1d314304FafF4ac",
      "time" : {
        "start" : 1647001981262,
        "stop" : 1647001981968,
        "duration" : 706
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false,
      "stepsCount" : 0
    }, {
      "name" : "Operator initial balance: 0.0027710479081866074736 NEON 74066180.07842228 SOL",
      "time" : {
        "start" : 1647001984985,
        "stop" : 1647001984985,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false,
      "stepsCount" : 0
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true,
    "stepsCount" : 3
  }, {
    "name" : "prepare_account",
    "time" : {
      "start" : 1647001987526,
      "stop" : 1647001987526,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "prepare_json_rpc_requester",
    "time" : {
      "start" : 1647001987526,
      "stop" : 1647001987526,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "prepare",
    "time" : {
      "start" : 1647001987526,
      "stop" : 1647001987526,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "testStage" : {
    "description" : "Verify implemented rpc calls work eth_estimateGas",
    "status" : "failed",
    "statusMessage" : "AssertionError: <AssertMessage.CONTAINS_ERROR: 'Contains the error data'>\nassert False\n +  where False = <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7fa916b7ffa0>>(JsonRpcErrorResponse(id=17, error={'code': -32000, 'message': \"'NoneType' object is not subscriptable\"}, jsonrpc='2.0'))\n +    where <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7fa916b7ffa0>> = <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7fa916b7ffa0>.assert_no_error_object",
    "statusTrace" : "self = <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7fa916b7ffa0>\n\n    @allure.step(\"test: verify implemented rpc calls work eth_estimateGas\")\n    def test_rpc_call_eth_estimateGas(self):\n        \"\"\"Verify implemented rpc calls work eth_estimateGas\"\"\"\n        sender_account = self.create_account_with_balance()\n        recipient_account = self.create_account_with_balance()\n    \n        # TOOD: variants\n        data = CallRequest(from_=sender_account.address,\n                           to=recipient_account.address,\n                           value=hex(1))\n        params = [data]\n        model = RpcRequestFactory.get_estimate_gas(params=params)\n        response = self.jsonrpc_requester.request_json_rpc(model)\n        actual_result = self.jsonrpc_requester.deserialize_response(response)\n    \n        assert actual_result.id == model.id, AssertMessage.WRONG_ID.value\n>       assert self.assert_no_error_object(\n            actual_result), AssertMessage.CONTAINS_ERROR\nE       AssertionError: <AssertMessage.CONTAINS_ERROR: 'Contains the error data'>\nE       assert False\nE        +  where False = <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7fa916b7ffa0>>(JsonRpcErrorResponse(id=17, error={'code': -32000, 'message': \"'NoneType' object is not subscriptable\"}, jsonrpc='2.0'))\nE        +    where <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7fa916b7ffa0>> = <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7fa916b7ffa0>.assert_no_error_object\n\nintegration/tests/basic/test_rpc_calls.py:80: AssertionError",
    "steps" : [ {
      "name" : "test: verify implemented rpc calls work eth_estimateGas",
      "time" : {
        "start" : 1647001987527,
        "stop" : 1647001988840,
        "duration" : 1313
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: <AssertMessage.CONTAINS_ERROR: 'Contains the error data'>\nassert False\n +  where False = <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7fa916b7ffa0>>(JsonRpcErrorResponse(id=17, error={'code': -32000, 'message': \"'NoneType' object is not subscriptable\"}, jsonrpc='2.0'))\n +    where <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7fa916b7ffa0>> = <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7fa916b7ffa0>.assert_no_error_object\n",
      "statusTrace" : "  File \"/opt/hostedtoolcache/Python/3.9.10/x64/lib/python3.9/site-packages/allure_commons/_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"/home/runner/work/neon-tests/neon-tests/integration/tests/basic/test_rpc_calls.py\", line 80, in test_rpc_call_eth_estimateGas\n    assert self.assert_no_error_object(\n",
      "steps" : [ {
        "name" : "creating a new account with balance",
        "time" : {
          "start" : 1647001987527,
          "stop" : 1647001988136,
          "duration" : 609
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "creating a new account",
          "time" : {
            "start" : 1647001987527,
            "stop" : 1647001987531,
            "duration" : 4
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false,
          "stepsCount" : 0
        }, {
          "name" : "requesting faucet for Neon",
          "time" : {
            "start" : 1647001987531,
            "stop" : 1647001988136,
            "duration" : 605
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ {
            "name" : "wallet",
            "value" : "'0x83DF116966C4187DB38Cfe8F49196c647957089E'"
          }, {
            "name" : "amount",
            "value" : "5"
          } ],
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : true,
          "stepsCount" : 0
        } ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "amount",
          "value" : "5"
        } ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true,
        "stepsCount" : 2
      }, {
        "name" : "creating a new account with balance",
        "time" : {
          "start" : 1647001988136,
          "stop" : 1647001988743,
          "duration" : 607
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "creating a new account",
          "time" : {
            "start" : 1647001988136,
            "stop" : 1647001988141,
            "duration" : 5
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false,
          "stepsCount" : 0
        }, {
          "name" : "requesting faucet for Neon",
          "time" : {
            "start" : 1647001988142,
            "stop" : 1647001988743,
            "duration" : 601
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ {
            "name" : "wallet",
            "value" : "'0x9748acf259e7664e106B225047968dEC4Ed1e17a'"
          }, {
            "name" : "amount",
            "value" : "5"
          } ],
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : true,
          "stepsCount" : 0
        } ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "amount",
          "value" : "5"
        } ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true,
        "stepsCount" : 2
      }, {
        "name" : "the model built",
        "time" : {
          "start" : 1647001988743,
          "stop" : 1647001988744,
          "duration" : 1
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false,
        "stepsCount" : 0
      }, {
        "name" : "requesting Json-RPC",
        "time" : {
          "start" : 1647001988744,
          "stop" : 1647001988839,
          "duration" : 95
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "getting response",
          "time" : {
            "start" : 1647001988744,
            "stop" : 1647001988839,
            "duration" : 95
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false,
          "stepsCount" : 0
        } ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "data",
          "value" : "JsonRpcRequest(id=17, method='eth_estimateGas', params=[CallRequest(from_='0x83DF116966C4187DB38Cfe8F49196c647957089E', to='0x9748acf259e7664e106B225047968dEC4Ed1e17a', gas=None, gas_price=None, value='0x1', data=None)], jsonrpc='2.0')"
        } ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true,
        "stepsCount" : 1
      }, {
        "name" : "deserializing response from JSON",
        "time" : {
          "start" : 1647001988840,
          "stop" : 1647001988840,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "showing as JSON",
          "time" : {
            "start" : 1647001988840,
            "stop" : 1647001988840,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ {
            "name" : "data",
            "value" : "{'jsonrpc': '2.0', 'id': 17, 'error': {'code': -32000, 'message': \"'NoneType' object is not subscriptable\"}}"
          } ],
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : true,
          "stepsCount" : 0
        }, {
          "name" : "deserialized",
          "time" : {
            "start" : 1647001988840,
            "stop" : 1647001988840,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false,
          "stepsCount" : 0
        } ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "response",
          "value" : "<Response [200]>"
        } ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true,
        "stepsCount" : 2
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true,
      "stepsCount" : 12
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true,
    "stepsCount" : 13
  },
  "afterStages" : [ {
    "name" : "prepare_account::0",
    "time" : {
      "start" : 1647001994921,
      "stop" : 1647001998059,
      "duration" : 3138
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Operator end balance: 0.0027710479081866074736 NEON 74066180.05493167 SOL",
      "time" : {
        "start" : 1647001997957,
        "stop" : 1647001997957,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false,
      "stepsCount" : 0
    }, {
      "name" : "Account end balance: 1000 NEON",
      "time" : {
        "start" : 1647001998059,
        "stop" : 1647001998059,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false,
      "stepsCount" : 0
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true,
    "stepsCount" : 2
  }, {
    "name" : "allure_environment::0",
    "time" : {
      "start" : 1647002153615,
      "stop" : 1647002153616,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "Basic: Json-RPC call tests"
  }, {
    "name" : "parentSuite",
    "value" : "integration.tests.basic"
  }, {
    "name" : "suite",
    "value" : "test_rpc_calls"
  }, {
    "name" : "subSuite",
    "value" : "TestRpcCalls"
  }, {
    "name" : "host",
    "value" : "fv-az193-923"
  }, {
    "name" : "thread",
    "value" : "1711-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "integration.tests.basic.test_rpc_calls"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 11,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 0,
        "unknown" : 0,
        "total" : 11
      },
      "items" : [ {
        "uid" : "8e50e2b8c4885f58",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/feature/254o/464//#testresult/8e50e2b8c4885f58",
        "status" : "failed",
        "statusDetails" : "AssertionError: <AssertMessage.CONTAINS_ERROR: 'Contains the error data'>\nassert False\n +  where False = <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7fa239e58790>>(JsonRpcErrorResponse(id=61, error={'code': -32000, 'message': \"'NoneType' object is not subscriptable\"}, jsonrpc='2.0'))\n +    where <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7fa239e58790>> = <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7fa239e58790>.assert_no_error_object",
        "time" : {
          "start" : 1646984281958,
          "stop" : 1646984283271,
          "duration" : 1313
        }
      }, {
        "uid" : "6fc80b692ca64768",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/feature/254o/462//#testresult/6fc80b692ca64768",
        "status" : "failed",
        "statusDetails" : "AssertionError: <AssertMessage.CONTAINS_ERROR: 'Contains the error data'>\nassert False\n +  where False = <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7fa65b0a8f10>>(JsonRpcErrorResponse(id=1, error={'code': -32000, 'message': \"'NoneType' object is not subscriptable\"}, jsonrpc='2.0'))\n +    where <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7fa65b0a8f10>> = <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7fa65b0a8f10>.assert_no_error_object",
        "time" : {
          "start" : 1646983978333,
          "stop" : 1646983979858,
          "duration" : 1525
        }
      }, {
        "uid" : "fe3a370bc0008480",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/feature/254o/460//#testresult/fe3a370bc0008480",
        "status" : "failed",
        "statusDetails" : "AssertionError: <AssertMessage.CONTAINS_ERROR: 'Contains the error data'>\nassert False\n +  where False = <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f2a110bcbb0>>(JsonRpcErrorResponse(id=57, error={'code': -32000, 'message': \"'NoneType' object is not subscriptable\"}, jsonrpc='2.0'))\n +    where <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f2a110bcbb0>> = <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f2a110bcbb0>.assert_no_error_object",
        "time" : {
          "start" : 1646981464953,
          "stop" : 1646981466974,
          "duration" : 2021
        }
      }, {
        "uid" : "c08324183d0b7be9",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/feature/254o/458//#testresult/c08324183d0b7be9",
        "status" : "failed",
        "statusDetails" : "AssertionError: <AssertMessage.CONTAINS_ERROR: 'Contains the error data'>\nassert False\n +  where False = <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f04a6353970>>(JsonRpcErrorResponse(id=3, error={'code': -32000, 'message': \"'NoneType' object is not subscriptable\"}, jsonrpc='2.0'))\n +    where <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f04a6353970>> = <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f04a6353970>.assert_no_error_object",
        "time" : {
          "start" : 1646981313892,
          "stop" : 1646981315410,
          "duration" : 1518
        }
      }, {
        "uid" : "208eee7ebbebd766",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/feature/254o/456//#testresult/208eee7ebbebd766",
        "status" : "failed",
        "statusDetails" : "AssertionError: <AssertMessage.CONTAINS_ERROR: 'Contains the error data'>\nassert False\n +  where False = <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f9201b5dd00>>(JsonRpcErrorResponse(id=81, error={'code': -32000, 'message': \"'NoneType' object is not subscriptable\"}, jsonrpc='2.0'))\n +    where <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f9201b5dd00>> = <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f9201b5dd00>.assert_no_error_object",
        "time" : {
          "start" : 1646980187883,
          "stop" : 1646980189192,
          "duration" : 1309
        }
      }, {
        "uid" : "4f0a853c0b885baa",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/feature/254o/452//#testresult/4f0a853c0b885baa",
        "status" : "failed",
        "statusDetails" : "AssertionError: <AssertMessage.CONTAINS_ERROR: 'Contains the error data'>\nassert False\n +  where False = <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f8e61b97250>>(JsonRpcErrorResponse(id=55, error={'code': -32000, 'message': \"'NoneType' object is not subscriptable\"}, jsonrpc='2.0'))\n +    where <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f8e61b97250>> = <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f8e61b97250>.assert_no_error_object",
        "time" : {
          "start" : 1646930577270,
          "stop" : 1646930578580,
          "duration" : 1310
        }
      }, {
        "uid" : "fc247608c244b2ab",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/feature/254o/450//#testresult/fc247608c244b2ab",
        "status" : "failed",
        "statusDetails" : "AssertionError: <AssertMessage.CONTAINS_ERROR: 'Contains the error data'>\nassert False\n +  where False = <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f6c18e25fd0>>(JsonRpcErrorResponse(id=25, error={'code': -32000, 'message': \"'NoneType' object is not subscriptable\"}, jsonrpc='2.0'))\n +    where <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f6c18e25fd0>> = <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f6c18e25fd0>.assert_no_error_object",
        "time" : {
          "start" : 1646927396605,
          "stop" : 1646927398119,
          "duration" : 1514
        }
      }, {
        "uid" : "9ee2eb2307038838",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/feature/254o/448//#testresult/9ee2eb2307038838",
        "status" : "failed",
        "statusDetails" : "AssertionError: <AssertMessage.CONTAINS_ERROR: 'Contains the error data'>\nassert False\n +  where False = <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7fed8d9f0e80>>(JsonRpcErrorResponse(id=72, error={'code': -32000, 'message': \"'NoneType' object is not subscriptable\"}, jsonrpc='2.0'))\n +    where <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7fed8d9f0e80>> = <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7fed8d9f0e80>.assert_no_error_object",
        "time" : {
          "start" : 1646924749360,
          "stop" : 1646924750766,
          "duration" : 1406
        }
      }, {
        "uid" : "a467a9e55922f647",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/feature/254o/446//#testresult/a467a9e55922f647",
        "status" : "failed",
        "statusDetails" : "AssertionError: <AssertMessage.CONTAINS_ERROR: 'Contains the error data'>\nassert False\n +  where False = <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7fe6ac3a75b0>>(JsonRpcErrorResponse(id=53, error={'code': -32000, 'message': \"'NoneType' object is not subscriptable\"}, jsonrpc='2.0'))\n +    where <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7fe6ac3a75b0>> = <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7fe6ac3a75b0>.assert_no_error_object",
        "time" : {
          "start" : 1646924151196,
          "stop" : 1646924152730,
          "duration" : 1534
        }
      }, {
        "uid" : "d1ae1b35e3741f64",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/feature/254o/444//#testresult/d1ae1b35e3741f64",
        "status" : "failed",
        "statusDetails" : "AssertionError: <AssertMessage.CONTAINS_ERROR: 'Contains the error data'>\nassert False\n +  where False = <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f8776ab1550>>(JsonRpcErrorResponse(id=91, error={'code': -32000, 'message': \"'NoneType' object is not subscriptable\"}, jsonrpc='2.0'))\n +    where <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f8776ab1550>> = <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f8776ab1550>.assert_no_error_object",
        "time" : {
          "start" : 1646923708688,
          "stop" : 1646923710097,
          "duration" : 1409
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "efefeb5b53ae4969.json",
  "parameterValues" : [ ]
}