{
  "uid" : "3006a5d11e26395a",
  "name" : "test_rpc_call_eth_gasPrice",
  "fullName" : "integration.tests.basic.test_rpc_calls.TestRpcCalls#test_rpc_call_eth_gasPrice",
  "historyId" : "246c3ce56fc1eb1466b1de3bf794aa08",
  "time" : {
    "start" : 1646324364160,
    "stop" : 1646324364160,
    "duration" : 0
  },
  "description" : "Verify implemented rpc calls work eth_gasPrice",
  "descriptionHtml" : "<p>Verify implemented rpc calls work eth_gasPrice</p>\n",
  "status" : "broken",
  "statusMessage" : "IndexError: list index out of range",
  "statusTrace" : "operator = <utils.operator.Operator object at 0x7fe75ec1ccd0>\nfaucet = <utils.faucet.Faucet object at 0x7fe764b1b2e0>\nweb3_client = <utils.web3client.NeonWeb3Client object at 0x7fe75eca0dc0>\n\n    @pytest.fixture(scope=\"class\")\n    def prepare_account(operator, faucet, web3_client):\n        \"\"\"Create new account for tests and save operator pre/post balances\"\"\"\n        with allure.step(\"Create account for tests\"):\n            acc = web3_client.eth.account.create()\n        with allure.step(f\"Request 1000 NEON from faucet for {acc.address}\"):\n            faucet.request_neon(acc.address, 1000)\n            assert web3_client.get_balance(acc) == 1000\n>       start_neon_balance = operator.get_neon_balance()\n\nintegration/tests/conftest.py:125: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <utils.operator.Operator object at 0x7fe75ec1ccd0>\n\n    def get_neon_balance(self):\n        balances = []\n        if len(self._operator_neon_rewards_address) > 0:\n            for addr in self._operator_neon_rewards_address:\n                balances.append(self.web3.get_balance(addr))\n        else:\n            for key in self._operator_keys:\n                if self._operator_keys[key] is None:\n                    accounts = self.sol.get_token_accounts_by_owner(\n                        key, TokenAccountOpts(mint=self._neon_token_mint)\n                    )\n>                   self._operator_keys[key] = accounts[\"result\"][\"value\"][0][\"pubkey\"]\nE                   IndexError: list index out of range\n\nutils/operator.py:49: IndexError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "pytestconfig",
    "time" : {
      "start" : 1646324360226,
      "stop" : 1646324360226,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "web3_client",
    "time" : {
      "start" : 1646324360227,
      "stop" : 1646324360228,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "allure_environment",
    "time" : {
      "start" : 1646324360228,
      "stop" : 1646324361356,
      "duration" : 1128
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "faucet",
    "time" : {
      "start" : 1646324361357,
      "stop" : 1646324361357,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "operator",
    "time" : {
      "start" : 1646324361357,
      "stop" : 1646324361357,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "sol_client",
    "time" : {
      "start" : 1646324361357,
      "stop" : 1646324361357,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "jsonrpc_requester",
    "time" : {
      "start" : 1646324361357,
      "stop" : 1646324361357,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "prepare_account",
    "time" : {
      "start" : 1646324364161,
      "stop" : 1646324365730,
      "duration" : 1569
    },
    "status" : "broken",
    "statusMessage" : "IndexError: list index out of range\n",
    "statusTrace" : "  File \"/opt/hostedtoolcache/Python/3.9.10/x64/lib/python3.9/site-packages/pluggy/_callers.py\", line 39, in _multicall\n    res = hook_impl.function(*args)\n  File \"/opt/hostedtoolcache/Python/3.9.10/x64/lib/python3.9/site-packages/_pytest/fixtures.py\", line 1126, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/opt/hostedtoolcache/Python/3.9.10/x64/lib/python3.9/site-packages/_pytest/fixtures.py\", line 925, in call_fixture_func\n    fixture_result = next(generator)\n  File \"/home/runner/work/neon-tests/neon-tests/integration/tests/conftest.py\", line 125, in prepare_account\n    start_neon_balance = operator.get_neon_balance()\n  File \"/home/runner/work/neon-tests/neon-tests/utils/operator.py\", line 49, in get_neon_balance\n    self._operator_keys[key] = accounts[\"result\"][\"value\"][0][\"pubkey\"]\n",
    "steps" : [ {
      "name" : "Create account for tests",
      "time" : {
        "start" : 1646324364161,
        "stop" : 1646324364166,
        "duration" : 5
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "hasContent" : false,
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false
    }, {
      "name" : "Request 1000 NEON from faucet for 0xd1D9C143c966793E027DA3e519729f25A4dF73Ee",
      "time" : {
        "start" : 1646324364166,
        "stop" : 1646324365003,
        "duration" : 837
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "hasContent" : false,
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : true,
    "stepsCount" : 2,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true
  }, {
    "name" : "prepare",
    "time" : {
      "start" : 1646324364161,
      "stop" : 1646324364161,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "afterStages" : [ {
    "name" : "allure_environment::0",
    "time" : {
      "start" : 1646324393659,
      "stop" : 1646324393660,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "Basic: Json-RPC call tests"
  }, {
    "name" : "parentSuite",
    "value" : "integration.tests.basic"
  }, {
    "name" : "suite",
    "value" : "test_rpc_calls"
  }, {
    "name" : "subSuite",
    "value" : "TestRpcCalls"
  }, {
    "name" : "host",
    "value" : "fv-az275-252"
  }, {
    "name" : "thread",
    "value" : "1751-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "integration.tests.basic.test_rpc_calls"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 1,
        "broken" : 2,
        "skipped" : 0,
        "passed" : 22,
        "unknown" : 0,
        "total" : 25
      },
      "items" : [ {
        "uid" : "b9595af59135178a",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/feature/254d/281//#testresult/b9595af59135178a",
        "status" : "broken",
        "statusDetails" : "IndexError: list index out of range",
        "time" : {
          "start" : 1646313866018,
          "stop" : 1646313866018,
          "duration" : 0
        }
      }, {
        "uid" : "dc164579d33bd45f",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/feature/254d/279//#testresult/dc164579d33bd45f",
        "status" : "passed",
        "time" : {
          "start" : 1646292177905,
          "stop" : 1646292178487,
          "duration" : 582
        }
      }, {
        "uid" : "268e952bd5729b73",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/feature/254d/277//#testresult/268e952bd5729b73",
        "status" : "passed",
        "time" : {
          "start" : 1646290867554,
          "stop" : 1646290867801,
          "duration" : 247
        }
      }, {
        "uid" : "48f2acdb82c1b309",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/feature/254d/273//#testresult/48f2acdb82c1b309",
        "status" : "passed",
        "time" : {
          "start" : 1646267562906,
          "stop" : 1646267563121,
          "duration" : 215
        }
      }, {
        "uid" : "4750a024b4743a60",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/feature/254d/275//#testresult/4750a024b4743a60",
        "status" : "passed",
        "time" : {
          "start" : 1646268156809,
          "stop" : 1646268156972,
          "duration" : 163
        }
      }, {
        "uid" : "3e0f0b2aef829f05",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/feature/254d/271//#testresult/3e0f0b2aef829f05",
        "status" : "passed",
        "time" : {
          "start" : 1646266507403,
          "stop" : 1646266508011,
          "duration" : 608
        }
      }, {
        "uid" : "cf7b1e281b92d764",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/feature/254d/269//#testresult/cf7b1e281b92d764",
        "status" : "passed",
        "time" : {
          "start" : 1646265108506,
          "stop" : 1646265109158,
          "duration" : 652
        }
      }, {
        "uid" : "803bb3ccd5cf192c",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/feature/254d/267//#testresult/803bb3ccd5cf192c",
        "status" : "passed",
        "time" : {
          "start" : 1646261507874,
          "stop" : 1646261508455,
          "duration" : 581
        }
      }, {
        "uid" : "ec62171199d94153",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/feature/254d/265//#testresult/ec62171199d94153",
        "status" : "failed",
        "statusDetails" : "AssertionError: The response type is error response\nassert False\n +  where False = isinstance(JsonRpcErrorResponse(id=56, error={'code': -32000, 'message': 'Failed to estimate gas price. Try again later'}, jsonrpc='2.0'), JsonRpcResponse)",
        "time" : {
          "start" : 1646260636649,
          "stop" : 1646260638961,
          "duration" : 2312
        }
      }, {
        "uid" : "4dc44006d19e1805",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/feature/254d/263//#testresult/4dc44006d19e1805",
        "status" : "passed",
        "time" : {
          "start" : 1646259682393,
          "stop" : 1646259682571,
          "duration" : 178
        }
      }, {
        "uid" : "b373e80283a64997",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/feature/254d/259//#testresult/b373e80283a64997",
        "status" : "passed",
        "time" : {
          "start" : 1646257597277,
          "stop" : 1646257597920,
          "duration" : 643
        }
      }, {
        "uid" : "e300634f7452d561",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/feature/254d/257//#testresult/e300634f7452d561",
        "status" : "passed",
        "time" : {
          "start" : 1646257083727,
          "stop" : 1646257083912,
          "duration" : 185
        }
      }, {
        "uid" : "9b176669c1d3d9b8",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/feature/254d/255//#testresult/9b176669c1d3d9b8",
        "status" : "passed",
        "time" : {
          "start" : 1646255970058,
          "stop" : 1646255970304,
          "duration" : 246
        }
      }, {
        "uid" : "7f9252c579ed579",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/feature/254d/253//#testresult/7f9252c579ed579",
        "status" : "passed",
        "time" : {
          "start" : 1646255163213,
          "stop" : 1646255163464,
          "duration" : 251
        }
      }, {
        "uid" : "151de0ae452d6061",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/feature/254d/251//#testresult/151de0ae452d6061",
        "status" : "passed",
        "time" : {
          "start" : 1646254415736,
          "stop" : 1646254415957,
          "duration" : 221
        }
      }, {
        "uid" : "14c504f048b65781",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/feature/254d/249//#testresult/14c504f048b65781",
        "status" : "passed",
        "time" : {
          "start" : 1646253825058,
          "stop" : 1646253825268,
          "duration" : 210
        }
      }, {
        "uid" : "5539bc3c4bcc8138",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/feature/254d/247//#testresult/5539bc3c4bcc8138",
        "status" : "passed",
        "time" : {
          "start" : 1646246370304,
          "stop" : 1646246370937,
          "duration" : 633
        }
      }, {
        "uid" : "fc34806617961ba7",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/feature/254d/245//#testresult/fc34806617961ba7",
        "status" : "passed",
        "time" : {
          "start" : 1646244930769,
          "stop" : 1646244930952,
          "duration" : 183
        }
      }, {
        "uid" : "744d99ccbe031a12",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/feature/254d/243//#testresult/744d99ccbe031a12",
        "status" : "passed",
        "time" : {
          "start" : 1646243768261,
          "stop" : 1646243768521,
          "duration" : 260
        }
      }, {
        "uid" : "659e46050d835a37",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/feature/254d/241//#testresult/659e46050d835a37",
        "status" : "passed",
        "time" : {
          "start" : 1646243139727,
          "stop" : 1646243139906,
          "duration" : 179
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "3006a5d11e26395a.json",
  "parameterValues" : [ ]
}