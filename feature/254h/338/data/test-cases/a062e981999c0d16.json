{
  "uid" : "a062e981999c0d16",
  "name" : "test_rpc_call_eth_estimateGas",
  "fullName" : "integration.tests.basic.test_rpc_calls.TestRpcCalls#test_rpc_call_eth_estimateGas",
  "historyId" : "af88a3a991324ea2b9c85b203e39309c",
  "time" : {
    "start" : 1646678206305,
    "stop" : 1646678207616,
    "duration" : 1311
  },
  "description" : "Verify implemented rpc calls work eth_estimateGas",
  "descriptionHtml" : "<p>Verify implemented rpc calls work eth_estimateGas</p>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: <AssertMessage.CONTAINS_ERROR: 'Contains the error data'>\nassert False\n +  where False = <bound method BasicHelpers.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f75af193970>>(JsonRpcErrorResponse(id=59, error={'code': -32000, 'message': 'eth_estimateGas() takes 2 positional arguments but 3 were given'}, jsonrpc='2.0'))\n +    where <bound method BasicHelpers.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f75af193970>> = <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f75af193970>.assert_no_error_object",
  "statusTrace" : "self = <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f75af193970>\n\n    @allure.step(\"test: verify implemented rpc calls work eth_estimateGas\")\n    def test_rpc_call_eth_estimateGas(self):\n        \"\"\"Verify implemented rpc calls work eth_estimateGas\"\"\"\n        sender_account = self.create_account_with_balance(GREAT_AMOUNT)\n        recipient_account = self.create_account_with_balance(\n            FIRST_FAUCET_REQUEST_AMOUNT)\n    \n        # TOOD: variants\n        data = CallRequest(from1=sender_account.address,\n                           to=recipient_account.address,\n                           value=hex(1))\n        params = [\n            # json.dumps(data.__dict__, cls=JsonRpcEncoder)\n            data,\n            Tag.LATEST.value\n        ]\n        model = RpcRequestFactory.get_estimate_gas(params=params)\n        response = self.jsonrpc_requester.request_json_rpc(model)\n        actual_result = self.jsonrpc_requester.deserialize_response(response)\n    \n        assert actual_result.id == model.id, AssertMessage.WRONG_ID.value\n>       assert self.assert_no_error_object(\n            actual_result), AssertMessage.CONTAINS_ERROR\nE       AssertionError: <AssertMessage.CONTAINS_ERROR: 'Contains the error data'>\nE       assert False\nE        +  where False = <bound method BasicHelpers.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f75af193970>>(JsonRpcErrorResponse(id=59, error={'code': -32000, 'message': 'eth_estimateGas() takes 2 positional arguments but 3 were given'}, jsonrpc='2.0'))\nE        +    where <bound method BasicHelpers.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f75af193970>> = <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f75af193970>.assert_no_error_object\n\nintegration/tests/basic/test_rpc_calls.py:90: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "web3_client",
    "time" : {
      "start" : 1646678191754,
      "stop" : 1646678191755,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "pytestconfig",
    "time" : {
      "start" : 1646678191754,
      "stop" : 1646678191754,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "allure_environment",
    "time" : {
      "start" : 1646678191756,
      "stop" : 1646678192335,
      "duration" : 579
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "operator",
    "time" : {
      "start" : 1646678192335,
      "stop" : 1646678192335,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "sol_client",
    "time" : {
      "start" : 1646678192335,
      "stop" : 1646678192336,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "jsonrpc_requester",
    "time" : {
      "start" : 1646678192335,
      "stop" : 1646678192335,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "faucet",
    "time" : {
      "start" : 1646678192335,
      "stop" : 1646678192335,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "prepare_account",
    "time" : {
      "start" : 1646678200245,
      "stop" : 1646678203932,
      "duration" : 3687
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Create account for tests",
      "time" : {
        "start" : 1646678200245,
        "stop" : 1646678200250,
        "duration" : 5
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "hasContent" : false,
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false
    }, {
      "name" : "Request 1000 NEON from faucet for 0x5A0c30986A6B42c5812Be3EB7075C91bA8Db6285",
      "time" : {
        "start" : 1646678200250,
        "stop" : 1646678200953,
        "duration" : 703
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "hasContent" : false,
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false
    }, {
      "name" : "Operator initial balance: 0.002279995983949956327 NEON 74071247.15705195 SOL",
      "time" : {
        "start" : 1646678203932,
        "stop" : 1646678203932,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "hasContent" : false,
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : true,
    "stepsCount" : 3,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "prepare",
    "time" : {
      "start" : 1646678206304,
      "stop" : 1646678206304,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "prepare_json_rpc_requester",
    "time" : {
      "start" : 1646678206304,
      "stop" : 1646678206304,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "prepare_account",
    "time" : {
      "start" : 1646678206304,
      "stop" : 1646678206304,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "testStage" : {
    "description" : "Verify implemented rpc calls work eth_estimateGas",
    "status" : "failed",
    "statusMessage" : "AssertionError: <AssertMessage.CONTAINS_ERROR: 'Contains the error data'>\nassert False\n +  where False = <bound method BasicHelpers.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f75af193970>>(JsonRpcErrorResponse(id=59, error={'code': -32000, 'message': 'eth_estimateGas() takes 2 positional arguments but 3 were given'}, jsonrpc='2.0'))\n +    where <bound method BasicHelpers.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f75af193970>> = <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f75af193970>.assert_no_error_object",
    "statusTrace" : "self = <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f75af193970>\n\n    @allure.step(\"test: verify implemented rpc calls work eth_estimateGas\")\n    def test_rpc_call_eth_estimateGas(self):\n        \"\"\"Verify implemented rpc calls work eth_estimateGas\"\"\"\n        sender_account = self.create_account_with_balance(GREAT_AMOUNT)\n        recipient_account = self.create_account_with_balance(\n            FIRST_FAUCET_REQUEST_AMOUNT)\n    \n        # TOOD: variants\n        data = CallRequest(from1=sender_account.address,\n                           to=recipient_account.address,\n                           value=hex(1))\n        params = [\n            # json.dumps(data.__dict__, cls=JsonRpcEncoder)\n            data,\n            Tag.LATEST.value\n        ]\n        model = RpcRequestFactory.get_estimate_gas(params=params)\n        response = self.jsonrpc_requester.request_json_rpc(model)\n        actual_result = self.jsonrpc_requester.deserialize_response(response)\n    \n        assert actual_result.id == model.id, AssertMessage.WRONG_ID.value\n>       assert self.assert_no_error_object(\n            actual_result), AssertMessage.CONTAINS_ERROR\nE       AssertionError: <AssertMessage.CONTAINS_ERROR: 'Contains the error data'>\nE       assert False\nE        +  where False = <bound method BasicHelpers.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f75af193970>>(JsonRpcErrorResponse(id=59, error={'code': -32000, 'message': 'eth_estimateGas() takes 2 positional arguments but 3 were given'}, jsonrpc='2.0'))\nE        +    where <bound method BasicHelpers.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f75af193970>> = <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f75af193970>.assert_no_error_object\n\nintegration/tests/basic/test_rpc_calls.py:90: AssertionError",
    "steps" : [ {
      "name" : "test: verify implemented rpc calls work eth_estimateGas",
      "time" : {
        "start" : 1646678206305,
        "stop" : 1646678207615,
        "duration" : 1310
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: <AssertMessage.CONTAINS_ERROR: 'Contains the error data'>\nassert False\n +  where False = <bound method BasicHelpers.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f75af193970>>(JsonRpcErrorResponse(id=59, error={'code': -32000, 'message': 'eth_estimateGas() takes 2 positional arguments but 3 were given'}, jsonrpc='2.0'))\n +    where <bound method BasicHelpers.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f75af193970>> = <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f75af193970>.assert_no_error_object\n",
      "statusTrace" : "  File \"/opt/hostedtoolcache/Python/3.9.10/x64/lib/python3.9/site-packages/allure_commons/_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"/home/runner/work/neon-tests/neon-tests/integration/tests/basic/test_rpc_calls.py\", line 90, in test_rpc_call_eth_estimateGas\n    assert self.assert_no_error_object(\n",
      "steps" : [ {
        "name" : "creating a new account with balance",
        "time" : {
          "start" : 1646678206305,
          "stop" : 1646678206912,
          "duration" : 607
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "creating a new account",
          "time" : {
            "start" : 1646678206305,
            "stop" : 1646678206309,
            "duration" : 4
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "hasContent" : false,
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false
        }, {
          "name" : "requesting faucet for Neon",
          "time" : {
            "start" : 1646678206309,
            "stop" : 1646678206912,
            "duration" : 603
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ {
            "name" : "wallet",
            "value" : "'0x83e480394b95b3096133eEE48cFaD5Ec3FF67Ca2'"
          }, {
            "name" : "amount",
            "value" : "1000"
          } ],
          "hasContent" : true,
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "amount",
          "value" : "1000"
        } ],
        "hasContent" : true,
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false
      }, {
        "name" : "creating a new account with balance",
        "time" : {
          "start" : 1646678206912,
          "stop" : 1646678207521,
          "duration" : 609
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "creating a new account",
          "time" : {
            "start" : 1646678206912,
            "stop" : 1646678206917,
            "duration" : 5
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "hasContent" : false,
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false
        }, {
          "name" : "requesting faucet for Neon",
          "time" : {
            "start" : 1646678206917,
            "stop" : 1646678207521,
            "duration" : 604
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ {
            "name" : "wallet",
            "value" : "'0xFA00C81B3d9578191AA74A93A6cbCB7Ac9800359'"
          }, {
            "name" : "amount",
            "value" : "5"
          } ],
          "hasContent" : true,
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "amount",
          "value" : "5"
        } ],
        "hasContent" : true,
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false
      }, {
        "name" : "the model built",
        "time" : {
          "start" : 1646678207521,
          "stop" : 1646678207521,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "hasContent" : false,
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false
      }, {
        "name" : "requesting Json-RPC",
        "time" : {
          "start" : 1646678207521,
          "stop" : 1646678207615,
          "duration" : 94
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "getting response",
          "time" : {
            "start" : 1646678207521,
            "stop" : 1646678207615,
            "duration" : 94
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "hasContent" : false,
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "data",
          "value" : "JsonRpcRequest(id=59, method='eth_estimateGas', params=[CallRequest(from1='0x83e480394b95b3096133eEE48cFaD5Ec3FF67Ca2', to='0xFA00C81B3d9578191AA74A93A6cbCB7Ac9800359', gas=None, gasPrice=None, value='0x1', data=None), 'latest'], jsonrpc='2.0')"
        } ],
        "hasContent" : true,
        "stepsCount" : 1,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false
      }, {
        "name" : "deserializing response from JSON",
        "time" : {
          "start" : 1646678207615,
          "stop" : 1646678207615,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "showing as JSON",
          "time" : {
            "start" : 1646678207615,
            "stop" : 1646678207615,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ {
            "name" : "data",
            "value" : "{'jsonrpc': '2.0', 'id': 59, 'error': {'code': -32000, 'message': 'eth_estimateGas() takes 2 positional arguments but 3 were given'}}"
          } ],
          "hasContent" : true,
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false
        }, {
          "name" : "deserialized",
          "time" : {
            "start" : 1646678207615,
            "stop" : 1646678207615,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "hasContent" : false,
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "response",
          "value" : "<Response [200]>"
        } ],
        "hasContent" : true,
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false
      }, {
        "name" : "checking that the error subobject is not present",
        "time" : {
          "start" : 1646678207615,
          "stop" : 1646678207615,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "data",
          "value" : "JsonRpcErrorResponse(id=59, error={'code': -32000, 'message': 'eth_estimateGas() takes 2 positional arguments but 3 were given'}, jsonrpc='2.0')"
        } ],
        "hasContent" : true,
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "hasContent" : true,
      "stepsCount" : 13,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : true,
    "stepsCount" : 14,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ {
    "name" : "prepare_account::0",
    "time" : {
      "start" : 1646678210148,
      "stop" : 1646678213222,
      "duration" : 3074
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Operator end balance: 0.002279995992157551327 NEON 74071247.14608867 SOL",
      "time" : {
        "start" : 1646678213122,
        "stop" : 1646678213122,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "hasContent" : false,
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false
    }, {
      "name" : "Account end balance: 1000 NEON",
      "time" : {
        "start" : 1646678213222,
        "stop" : 1646678213222,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "hasContent" : false,
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : true,
    "stepsCount" : 2,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "allure_environment::0",
    "time" : {
      "start" : 1646678277759,
      "stop" : 1646678277760,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "Basic: Json-RPC call tests"
  }, {
    "name" : "parentSuite",
    "value" : "integration.tests.basic"
  }, {
    "name" : "suite",
    "value" : "test_rpc_calls"
  }, {
    "name" : "subSuite",
    "value" : "TestRpcCalls"
  }, {
    "name" : "host",
    "value" : "fv-az193-388"
  }, {
    "name" : "thread",
    "value" : "1771-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "integration.tests.basic.test_rpc_calls"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 4,
        "broken" : 3,
        "skipped" : 0,
        "passed" : 0,
        "unknown" : 0,
        "total" : 7
      },
      "items" : [ {
        "uid" : "8497bbccfb24c97",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/feature/254h/334//#testresult/8497bbccfb24c97",
        "status" : "failed",
        "statusDetails" : "AssertionError: <AssertMessage.CONTAINS_ERROR: 'Contains the error data'>\nassert False\n +  where False = <bound method BasicHelpers.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f8df18096d0>>(JsonRpcErrorResponse(id=83, error={'code': -32000, 'message': 'eth_estimateGas() takes 2 positional arguments but 3 were given'}, jsonrpc='2.0'))\n +    where <bound method BasicHelpers.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f8df18096d0>> = <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f8df18096d0>.assert_no_error_object",
        "time" : {
          "start" : 1646677051262,
          "stop" : 1646677052770,
          "duration" : 1508
        }
      }, {
        "uid" : "7e249e9dba4e08b3",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/feature/254h/332//#testresult/7e249e9dba4e08b3",
        "status" : "failed",
        "statusDetails" : "AssertionError: <AssertMessage.CONTAINS_ERROR: 'Contains the error data'>\nassert False\n +  where False = <bound method BasicHelpers.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7ff0e569f7c0>>(JsonRpcErrorResponse(id=59, error={'code': -32000, 'message': 'eth_estimateGas() takes 2 positional arguments but 3 were given'}, jsonrpc='2.0'))\n +    where <bound method BasicHelpers.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7ff0e569f7c0>> = <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7ff0e569f7c0>.assert_no_error_object",
        "time" : {
          "start" : 1646676587816,
          "stop" : 1646676589338,
          "duration" : 1522
        }
      }, {
        "uid" : "942b937c713e60f5",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/feature/254h/330//#testresult/942b937c713e60f5",
        "status" : "failed",
        "statusDetails" : "AssertionError: <AssertMessage.CONTAINS_ERROR: 'Contains the error data'>\nassert False\n +  where False = <bound method BasicHelpers.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f5f14e50190>>(JsonRpcErrorResponse(id=96, error={'code': -32000, 'message': 'eth_estimateGas() takes 2 positional arguments but 3 were given'}, jsonrpc='2.0'))\n +    where <bound method BasicHelpers.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f5f14e50190>> = <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f5f14e50190>.assert_no_error_object",
        "time" : {
          "start" : 1646675891208,
          "stop" : 1646675892721,
          "duration" : 1513
        }
      }, {
        "uid" : "2e36f5cd72be141",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/feature/254h/328//#testresult/2e36f5cd72be141",
        "status" : "broken",
        "statusDetails" : "TypeError: Object of type JsonRpcRequest is not JSON serializable",
        "time" : {
          "start" : 1646674316973,
          "stop" : 1646674318333,
          "duration" : 1360
        }
      }, {
        "uid" : "7f88da5ba1b7777e",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/feature/254h/326//#testresult/7f88da5ba1b7777e",
        "status" : "broken",
        "statusDetails" : "TypeError: dump() missing 1 required positional argument: 'fp'",
        "time" : {
          "start" : 1646673672944,
          "stop" : 1646673674285,
          "duration" : 1341
        }
      }, {
        "uid" : "3a62329190374dfc",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/feature/254h/324//#testresult/3a62329190374dfc",
        "status" : "broken",
        "statusDetails" : "TypeError: dump() missing 1 required positional argument: 'fp'",
        "time" : {
          "start" : 1646672577289,
          "stop" : 1646672578636,
          "duration" : 1347
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "a062e981999c0d16.json",
  "parameterValues" : [ ]
}