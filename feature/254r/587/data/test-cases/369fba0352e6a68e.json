{
  "uid" : "369fba0352e6a68e",
  "name" : "test_rpc_call_eth_getCode",
  "fullName" : "integration.tests.basic.test_rpc_calls.TestRpcCalls#test_rpc_call_eth_getCode",
  "historyId" : "00ad0f56bb63b714c1715d515aa35f29",
  "time" : {
    "start" : 1647274562560,
    "stop" : 1647274563437,
    "duration" : 877
  },
  "description" : "Verify implemented rpc calls work eth_getCode",
  "descriptionHtml" : "<p>Verify implemented rpc calls work eth_getCode</p>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: <AssertMessage.CONTAINS_ERROR: 'Contains the error data'>\nassert False\n +  where False = <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f8b3c9fa7c0>>(JsonRpcResponse(id=16, result='0x', jsonrpc='2.0'))\n +    where <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f8b3c9fa7c0>> = <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f8b3c9fa7c0>.assert_no_error_object",
  "statusTrace" : "self = <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f8b3c9fa7c0>\n\n    def test_rpc_call_eth_getCode(self):\n        \"\"\"Verify implemented rpc calls work eth_getCode\"\"\"\n        # TODO: use contract instead of account?\n        sender_account = self.create_account_with_balance()\n    \n        params = [sender_account.address, Tag.LATEST.value]\n        model = RpcRequestFactory.get_code(params=params)\n        response = self.jsonrpc_requester.request_json_rpc(model)\n        actual_result = self.jsonrpc_requester.deserialize_response(response)\n    \n        assert actual_result.id == model.id, AssertMessage.WRONG_ID.value\n>       assert self.assert_no_error_object(\n            actual_result), AssertMessage.CONTAINS_ERROR\nE       AssertionError: <AssertMessage.CONTAINS_ERROR: 'Contains the error data'>\nE       assert False\nE        +  where False = <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f8b3c9fa7c0>>(JsonRpcResponse(id=16, result='0x', jsonrpc='2.0'))\nE        +    where <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f8b3c9fa7c0>> = <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f8b3c9fa7c0>.assert_no_error_object\n\nintegration/tests/basic/test_rpc_calls.py:161: AssertionError",
  "flaky" : false,
  "newFailed" : true,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "pytestconfig",
    "time" : {
      "start" : 1647274517803,
      "stop" : 1647274517803,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "web3_client",
    "time" : {
      "start" : 1647274517803,
      "stop" : 1647274517804,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "allure_environment",
    "time" : {
      "start" : 1647274517805,
      "stop" : 1647274518811,
      "duration" : 1006
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "faucet",
    "time" : {
      "start" : 1647274518811,
      "stop" : 1647274518812,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "operator",
    "time" : {
      "start" : 1647274518812,
      "stop" : 1647274518812,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "jsonrpc_requester",
    "time" : {
      "start" : 1647274518812,
      "stop" : 1647274518812,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "sol_client",
    "time" : {
      "start" : 1647274518812,
      "stop" : 1647274518812,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_account",
    "time" : {
      "start" : 1647274543420,
      "stop" : 1647274551663,
      "duration" : 8243
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Create account for tests",
      "time" : {
        "start" : 1647274543420,
        "stop" : 1647274543424,
        "duration" : 4
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Request 1000 NEON from faucet for 0x52F55Ef001dDcc64DCfE9a236ef701ca674FBCf2",
      "time" : {
        "start" : 1647274543424,
        "stop" : 1647274544266,
        "duration" : 842
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Operator initial balance: 0.0022076905026899334958272 NEON 74064643.87275615 SOL",
      "time" : {
        "start" : 1647274551663,
        "stop" : 1647274551663,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 3,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "prepare",
    "time" : {
      "start" : 1647274562559,
      "stop" : 1647274562559,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_account",
    "time" : {
      "start" : 1647274562559,
      "stop" : 1647274562559,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_json_rpc_requester",
    "time" : {
      "start" : 1647274562559,
      "stop" : 1647274562559,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "Verify implemented rpc calls work eth_getCode",
    "status" : "failed",
    "statusMessage" : "AssertionError: <AssertMessage.CONTAINS_ERROR: 'Contains the error data'>\nassert False\n +  where False = <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f8b3c9fa7c0>>(JsonRpcResponse(id=16, result='0x', jsonrpc='2.0'))\n +    where <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f8b3c9fa7c0>> = <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f8b3c9fa7c0>.assert_no_error_object",
    "statusTrace" : "self = <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f8b3c9fa7c0>\n\n    def test_rpc_call_eth_getCode(self):\n        \"\"\"Verify implemented rpc calls work eth_getCode\"\"\"\n        # TODO: use contract instead of account?\n        sender_account = self.create_account_with_balance()\n    \n        params = [sender_account.address, Tag.LATEST.value]\n        model = RpcRequestFactory.get_code(params=params)\n        response = self.jsonrpc_requester.request_json_rpc(model)\n        actual_result = self.jsonrpc_requester.deserialize_response(response)\n    \n        assert actual_result.id == model.id, AssertMessage.WRONG_ID.value\n>       assert self.assert_no_error_object(\n            actual_result), AssertMessage.CONTAINS_ERROR\nE       AssertionError: <AssertMessage.CONTAINS_ERROR: 'Contains the error data'>\nE       assert False\nE        +  where False = <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f8b3c9fa7c0>>(JsonRpcResponse(id=16, result='0x', jsonrpc='2.0'))\nE        +    where <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f8b3c9fa7c0>> = <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7f8b3c9fa7c0>.assert_no_error_object\n\nintegration/tests/basic/test_rpc_calls.py:161: AssertionError",
    "steps" : [ {
      "name" : "Request: JsonRpcRequest(id=16, method='eth_getCode', params=['0xB832158aeC8F227a51987F1941438a340b44CD9f', 'latest'], jsonrpc='2.0')",
      "time" : {
        "start" : 1647274563237,
        "stop" : 1647274563436,
        "duration" : 199
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Response: {'jsonrpc': '2.0', 'id': 16, 'result': '0x'}",
      "time" : {
        "start" : 1647274563437,
        "stop" : 1647274563437,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "prepare_account::0",
    "time" : {
      "start" : 1647274563784,
      "stop" : 1647274571349,
      "duration" : 7565
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Operator end balance: 0.0022076905084897854958272 NEON 74064643.83207612 SOL",
      "time" : {
        "start" : 1647274571181,
        "stop" : 1647274571181,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Account end balance: 1000 NEON",
      "time" : {
        "start" : 1647274571349,
        "stop" : 1647274571349,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "allure_environment::0",
    "time" : {
      "start" : 1647274780984,
      "stop" : 1647274780985,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "Basic: Json-RPC call tests"
  }, {
    "name" : "parentSuite",
    "value" : "integration.tests.basic"
  }, {
    "name" : "suite",
    "value" : "test_rpc_calls"
  }, {
    "name" : "subSuite",
    "value" : "TestRpcCalls"
  }, {
    "name" : "host",
    "value" : "fv-az445-573"
  }, {
    "name" : "thread",
    "value" : "1730-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "integration.tests.basic.test_rpc_calls"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 1,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 2,
        "unknown" : 0,
        "total" : 3
      },
      "items" : [ {
        "uid" : "fa4b0f751699ca32",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/feature/254r/583//#testresult/fa4b0f751699ca32",
        "status" : "passed",
        "time" : {
          "start" : 1647266554298,
          "stop" : 1647266555099,
          "duration" : 801
        }
      }, {
        "uid" : "94dbc3769f8a5067",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/feature/254r/581//#testresult/94dbc3769f8a5067",
        "status" : "passed",
        "time" : {
          "start" : 1647265428012,
          "stop" : 1647265428818,
          "duration" : 806
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "369fba0352e6a68e.json",
  "parameterValues" : [ ]
}