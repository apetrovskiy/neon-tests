{
  "uid" : "733bbb9a4da0c17d",
  "name" : "test_rpc_call_eth_getBlockByHash",
  "fullName" : "integration.tests.basic.test_blocks.TestRpcCallsBlocks#test_rpc_call_eth_getBlockByHash",
  "historyId" : "67dd2f24ec2162eee765b2dd1d070a59",
  "time" : {
    "start" : 1647274528917,
    "stop" : 1647274530890,
    "duration" : 1973
  },
  "description" : "Verify implemented rpc calls work eth_getBlockByHash",
  "descriptionHtml" : "<p>Verify implemented rpc calls work eth_getBlockByHash</p>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: <AssertMessage.CONTAINS_ERROR: 'Contains the error data'>\nassert False\n +  where False = <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_blocks.TestRpcCallsBlocks object at 0x7f8b3ce39250>>(JsonRpcResponse(id=85, result=BlockResponse(number='0x225178', hash='0x15b413be0e30b592c408a955cc5e52932e2352c90996ad0...0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000'}), jsonrpc='2.0'))\n +    where <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_blocks.TestRpcCallsBlocks object at 0x7f8b3ce39250>> = <integration.tests.basic.test_blocks.TestRpcCallsBlocks object at 0x7f8b3ce39250>.assert_no_error_object",
  "statusTrace" : "self = <integration.tests.basic.test_blocks.TestRpcCallsBlocks object at 0x7f8b3ce39250>\nprepare_accounts = None\n\n    def test_rpc_call_eth_getBlockByHash(self, prepare_accounts):\n        \"\"\"Verify implemented rpc calls work eth_getBlockByHash\"\"\"\n    \n        tx_receipt = self.transfer_neon(self.sender_account,\n                                        self.recipient_account,\n                                        InputData.SAMPLE_AMOUNT.value)\n    \n        params = [tx_receipt.blockHash.hex(), True]\n        model = RpcRequestFactory.get_block_by_hash(params=params)\n    \n        response = self.jsonrpc_requester.request_json_rpc(model)\n        actual_result = self.jsonrpc_requester.deserialize_response(\n            response, BlockResponse)\n    \n        assert actual_result.id == model.id, AssertMessage.WRONG_ID.value\n>       assert self.assert_no_error_object(\n            actual_result), AssertMessage.CONTAINS_ERROR\nE       AssertionError: <AssertMessage.CONTAINS_ERROR: 'Contains the error data'>\nE       assert False\nE        +  where False = <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_blocks.TestRpcCallsBlocks object at 0x7f8b3ce39250>>(JsonRpcResponse(id=85, result=BlockResponse(number='0x225178', hash='0x15b413be0e30b592c408a955cc5e52932e2352c90996ad0...0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000'}), jsonrpc='2.0'))\nE        +    where <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_blocks.TestRpcCallsBlocks object at 0x7f8b3ce39250>> = <integration.tests.basic.test_blocks.TestRpcCallsBlocks object at 0x7f8b3ce39250>.assert_no_error_object\n\nintegration/tests/basic/test_blocks.py:57: AssertionError",
  "flaky" : false,
  "newFailed" : true,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "pytestconfig",
    "time" : {
      "start" : 1647274517803,
      "stop" : 1647274517803,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "web3_client",
    "time" : {
      "start" : 1647274517803,
      "stop" : 1647274517804,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "allure_environment",
    "time" : {
      "start" : 1647274517805,
      "stop" : 1647274518811,
      "duration" : 1006
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "faucet",
    "time" : {
      "start" : 1647274518811,
      "stop" : 1647274518812,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "operator",
    "time" : {
      "start" : 1647274518812,
      "stop" : 1647274518812,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_account",
    "time" : {
      "start" : 1647274518812,
      "stop" : 1647274527560,
      "duration" : 8748
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Create account for tests",
      "time" : {
        "start" : 1647274518813,
        "stop" : 1647274518825,
        "duration" : 12
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Request 1000 NEON from faucet for 0xe6ef341eC48dFbe1B14061ca70b2Ee6BBc6c5298",
      "time" : {
        "start" : 1647274518825,
        "stop" : 1647274519997,
        "duration" : 1172
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Operator initial balance: 0.0022076904736906734958272 NEON 74064643.89940484 SOL",
      "time" : {
        "start" : 1647274527560,
        "stop" : 1647274527560,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 3,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "jsonrpc_requester",
    "time" : {
      "start" : 1647274518812,
      "stop" : 1647274518812,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "sol_client",
    "time" : {
      "start" : 1647274518812,
      "stop" : 1647274518812,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare",
    "time" : {
      "start" : 1647274518812,
      "stop" : 1647274518812,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_json_rpc_requester",
    "time" : {
      "start" : 1647274527560,
      "stop" : 1647274527560,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_accounts",
    "time" : {
      "start" : 1647274527560,
      "stop" : 1647274528916,
      "duration" : 1356
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_account",
    "time" : {
      "start" : 1647274527560,
      "stop" : 1647274527560,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "Verify implemented rpc calls work eth_getBlockByHash",
    "status" : "failed",
    "statusMessage" : "AssertionError: <AssertMessage.CONTAINS_ERROR: 'Contains the error data'>\nassert False\n +  where False = <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_blocks.TestRpcCallsBlocks object at 0x7f8b3ce39250>>(JsonRpcResponse(id=85, result=BlockResponse(number='0x225178', hash='0x15b413be0e30b592c408a955cc5e52932e2352c90996ad0...0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000'}), jsonrpc='2.0'))\n +    where <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_blocks.TestRpcCallsBlocks object at 0x7f8b3ce39250>> = <integration.tests.basic.test_blocks.TestRpcCallsBlocks object at 0x7f8b3ce39250>.assert_no_error_object",
    "statusTrace" : "self = <integration.tests.basic.test_blocks.TestRpcCallsBlocks object at 0x7f8b3ce39250>\nprepare_accounts = None\n\n    def test_rpc_call_eth_getBlockByHash(self, prepare_accounts):\n        \"\"\"Verify implemented rpc calls work eth_getBlockByHash\"\"\"\n    \n        tx_receipt = self.transfer_neon(self.sender_account,\n                                        self.recipient_account,\n                                        InputData.SAMPLE_AMOUNT.value)\n    \n        params = [tx_receipt.blockHash.hex(), True]\n        model = RpcRequestFactory.get_block_by_hash(params=params)\n    \n        response = self.jsonrpc_requester.request_json_rpc(model)\n        actual_result = self.jsonrpc_requester.deserialize_response(\n            response, BlockResponse)\n    \n        assert actual_result.id == model.id, AssertMessage.WRONG_ID.value\n>       assert self.assert_no_error_object(\n            actual_result), AssertMessage.CONTAINS_ERROR\nE       AssertionError: <AssertMessage.CONTAINS_ERROR: 'Contains the error data'>\nE       assert False\nE        +  where False = <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_blocks.TestRpcCallsBlocks object at 0x7f8b3ce39250>>(JsonRpcResponse(id=85, result=BlockResponse(number='0x225178', hash='0x15b413be0e30b592c408a955cc5e52932e2352c90996ad0...0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000'}), jsonrpc='2.0'))\nE        +    where <bound method BasicTests.assert_no_error_object of <integration.tests.basic.test_blocks.TestRpcCallsBlocks object at 0x7f8b3ce39250>> = <integration.tests.basic.test_blocks.TestRpcCallsBlocks object at 0x7f8b3ce39250>.assert_no_error_object\n\nintegration/tests/basic/test_blocks.py:57: AssertionError",
    "steps" : [ {
      "name" : "Sending 4 from 0xF2447b28840F397b3F923AcF3852a7D35ef14ff3 to 0x458deAE03db5D813Fc8b11318c05a71F3Edd5fD3",
      "time" : {
        "start" : 1647274528917,
        "stop" : 1647274530557,
        "duration" : 1640
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Request: JsonRpcRequest(id=85, method='eth_getBlockByHash', params=['0x15b413be0e30b592c408a955cc5e52932e2352c90996ad0a5abbc9c81bbc482d', True], jsonrpc='2.0')",
      "time" : {
        "start" : 1647274530558,
        "stop" : 1647274530888,
        "duration" : 330
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Response: {'jsonrpc': '2.0', 'id': 85, 'result': {'gasUsed': '0x3a98', 'hash': '0x15b413be0e30b592c408a955cc5e52932e2352c90996ad0a5abbc9c81bbc482d', 'number': '0x225178', 'parentHash': '0xfc282187e51ea986c2b50be380bc8567ed84dd633656706259a9b761166c0a2f', 'timestamp': '0x622f6a21', 'transactions': [{'blockHash': '0x15b413be0e30b592c408a955cc5e52932e2352c90996ad0a5abbc9c81bbc482d', 'blockNumber': '0x225178', 'hash': '0x5bc41d354c04fe774ba211fc5560487a3e3a877b9383b4f6179f01eccd383dc2', 'transactionIndex': '0x0', 'from': '0xf2447b28840f397b3f923acf3852a7d35ef14ff3', 'nonce': '0x0', 'gasPrice': '0x5a068a8d00', 'gas': '0x5208', 'to': '0x458deae03db5d813fc8b11318c05a71f3edd5fd3', 'value': '0x3782dace9d900000', 'input': '0x', 'v': '0x101', 'r': '0x897eaef72297fecbe0865237c3ce56f78d4fbcdd5952a48fab4596de2e5dab4d', 's': '0x18774a599bb21fe659a9466009da7e28e4c270ded4c248cc1b9df2602441e78d'}], 'logsBloom': '0xgasLimit': '0x6691b7'}}",
      "time" : {
        "start" : 1647274530888,
        "stop" : 1647274530889,
        "duration" : 1
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 3,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "prepare_accounts::0",
    "time" : {
      "start" : 1647274530976,
      "stop" : 1647274530976,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_account::0",
    "time" : {
      "start" : 1647274535855,
      "stop" : 1647274543416,
      "duration" : 7561
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Operator end balance: 0.0022076904968900814958272 NEON 74064643.88528347 SOL",
      "time" : {
        "start" : 1647274543247,
        "stop" : 1647274543247,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Account end balance: 1000 NEON",
      "time" : {
        "start" : 1647274543416,
        "stop" : 1647274543416,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "allure_environment::0",
    "time" : {
      "start" : 1647274780984,
      "stop" : 1647274780985,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "Basic: Json-RPC call tests - blocks"
  }, {
    "name" : "parentSuite",
    "value" : "integration.tests.basic"
  }, {
    "name" : "suite",
    "value" : "test_blocks"
  }, {
    "name" : "subSuite",
    "value" : "TestRpcCallsBlocks"
  }, {
    "name" : "host",
    "value" : "fv-az445-573"
  }, {
    "name" : "thread",
    "value" : "1730-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "integration.tests.basic.test_blocks"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 1,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 2,
        "unknown" : 0,
        "total" : 3
      },
      "items" : [ {
        "uid" : "14987d0f46285197",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/feature/254r/583//#testresult/14987d0f46285197",
        "status" : "passed",
        "time" : {
          "start" : 1647266526637,
          "stop" : 1647266528278,
          "duration" : 1641
        }
      }, {
        "uid" : "db6849849db20a21",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/feature/254r/581//#testresult/db6849849db20a21",
        "status" : "passed",
        "time" : {
          "start" : 1647265399661,
          "stop" : 1647265401392,
          "duration" : 1731
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "733bbb9a4da0c17d.json",
  "parameterValues" : [ ]
}