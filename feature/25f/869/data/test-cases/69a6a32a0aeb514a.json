{
  "uid" : "69a6a32a0aeb514a",
  "name" : "test_generate_bad_sign[S_ACTION-340282366920938463426481119284349108225]",
  "fullName" : "integration.tests.basic.test_transfers.TestRpcCallsTransactionsValidation#test_generate_bad_sign",
  "historyId" : "1894dc38f84de9c20e5234e13662017e",
  "time" : {
    "start" : 1650040493202,
    "stop" : 1650040494069,
    "duration" : 867
  },
  "description" : "Generate bad sign (when v, r, s over allowed size)",
  "descriptionHtml" : "<p>Generate bad sign (when v, r, s over allowed size)</p>\n",
  "status" : "broken",
  "statusMessage" : "AttributeError: can't set attribute",
  "statusTrace" : "self = <integration.tests.basic.test_transfers.TestRpcCallsTransactionsValidation object at 0x7f75e244b880>\naction = <function S_ACTION at 0x7f75e27f8700>\nvalue = 340282366920938463426481119284349108225, prepare_accounts = None\n\n    @pytest.mark.parametrize(\"action,value\", TEST_DATA_R_S_V)\n    def test_generate_bad_sign(self, action, value, prepare_accounts):\n        \"\"\"Generate bad sign (when v, r, s over allowed size)\"\"\"\n    \n        transaction = {\n            \"from\":\n            self.sender_account.address,\n            \"to\":\n            self.recipient_account.address,\n            \"value\":\n            self.web3_client.toWei(InputData.SAMPLE_AMOUNT.value, \"ether\"),\n            \"chainId\":\n            self.web3_client._chain_id,\n            \"gasPrice\":\n            self.web3_client.gas_price(),\n            \"gas\":\n            0,\n            \"nonce\":\n            self.web3_client.eth.get_transaction_count(\n                self.sender_account.address),\n        }\n        transaction[\"gas\"] = self.web3_client.eth.estimate_gas(transaction)\n    \n        signed_tx: TrxResponse = self.web3_client.eth.account.sign_transaction(\n            transaction, self.sender_account.key)\n    \n        #\n        print(\"=============================\")\n        print(signed_tx)\n        #\n    \n>       (action)(signed_tx, value)\n\nintegration/tests/basic/test_transfers.py:426: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmodel = SignedTransaction(rawTransaction=HexBytes('0xf86d808571fcc4db0082520894bcad2e2e5d8675e6ed51fb45c8ec96b674f4f9b487470de...626887386527462917712614865827, s=43906119837923572157396430156975595299274268984478235795581977800172245313326, v=257)\nvalue = 340282366920938463426481119284349108225\n\n>   def S_ACTION(model: TrxResponse, value): model.s = value; return model\nE   AttributeError: can't set attribute\n\nintegration/tests/basic/test_transfers.py:30: AttributeError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "pytestconfig",
    "time" : {
      "start" : 1650040170633,
      "stop" : 1650040170633,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "web3_client",
    "time" : {
      "start" : 1650040170633,
      "stop" : 1650040170635,
      "duration" : 2
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "allure_environment",
    "time" : {
      "start" : 1650040170635,
      "stop" : 1650040171780,
      "duration" : 1145
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "jsonrpc_requester",
    "time" : {
      "start" : 1650040171780,
      "stop" : 1650040171780,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "faucet",
    "time" : {
      "start" : 1650040171780,
      "stop" : 1650040171780,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "operator",
    "time" : {
      "start" : 1650040171781,
      "stop" : 1650040171781,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "sol_client",
    "time" : {
      "start" : 1650040171781,
      "stop" : 1650040171781,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_account",
    "time" : {
      "start" : 1650040438870,
      "stop" : 1650040447540,
      "duration" : 8670
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Create account for tests",
      "time" : {
        "start" : 1650040438870,
        "stop" : 1650040438874,
        "duration" : 4
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Request 1000 NEON from faucet for 0xC080d3EA9C1E6F52828Ebd57b4a0BfB4Fd8b673A",
      "time" : {
        "start" : 1650040438875,
        "stop" : 1650040439891,
        "duration" : 1016
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Operator initial balance: 0.004515108085247980372608 NEON 67236.45067764 SOL",
      "time" : {
        "start" : 1650040447540,
        "stop" : 1650040447540,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 3,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "prepare",
    "time" : {
      "start" : 1650040491833,
      "stop" : 1650040491833,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_account",
    "time" : {
      "start" : 1650040491833,
      "stop" : 1650040491833,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_accounts",
    "time" : {
      "start" : 1650040491834,
      "stop" : 1650040493201,
      "duration" : 1367
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_json_rpc_requester",
    "time" : {
      "start" : 1650040491834,
      "stop" : 1650040491834,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "Generate bad sign (when v, r, s over allowed size)",
    "status" : "broken",
    "statusMessage" : "AttributeError: can't set attribute",
    "statusTrace" : "self = <integration.tests.basic.test_transfers.TestRpcCallsTransactionsValidation object at 0x7f75e244b880>\naction = <function S_ACTION at 0x7f75e27f8700>\nvalue = 340282366920938463426481119284349108225, prepare_accounts = None\n\n    @pytest.mark.parametrize(\"action,value\", TEST_DATA_R_S_V)\n    def test_generate_bad_sign(self, action, value, prepare_accounts):\n        \"\"\"Generate bad sign (when v, r, s over allowed size)\"\"\"\n    \n        transaction = {\n            \"from\":\n            self.sender_account.address,\n            \"to\":\n            self.recipient_account.address,\n            \"value\":\n            self.web3_client.toWei(InputData.SAMPLE_AMOUNT.value, \"ether\"),\n            \"chainId\":\n            self.web3_client._chain_id,\n            \"gasPrice\":\n            self.web3_client.gas_price(),\n            \"gas\":\n            0,\n            \"nonce\":\n            self.web3_client.eth.get_transaction_count(\n                self.sender_account.address),\n        }\n        transaction[\"gas\"] = self.web3_client.eth.estimate_gas(transaction)\n    \n        signed_tx: TrxResponse = self.web3_client.eth.account.sign_transaction(\n            transaction, self.sender_account.key)\n    \n        #\n        print(\"=============================\")\n        print(signed_tx)\n        #\n    \n>       (action)(signed_tx, value)\n\nintegration/tests/basic/test_transfers.py:426: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmodel = SignedTransaction(rawTransaction=HexBytes('0xf86d808571fcc4db0082520894bcad2e2e5d8675e6ed51fb45c8ec96b674f4f9b487470de...626887386527462917712614865827, s=43906119837923572157396430156975595299274268984478235795581977800172245313326, v=257)\nvalue = 340282366920938463426481119284349108225\n\n>   def S_ACTION(model: TrxResponse, value): model.s = value; return model\nE   AttributeError: can't set attribute\n\nintegration/tests/basic/test_transfers.py:30: AttributeError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "b810f0753eb5e61",
      "name" : "stdout",
      "source" : "b810f0753eb5e61.txt",
      "type" : "text/plain",
      "size" : 555
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "prepare_accounts::0",
    "time" : {
      "start" : 1650040494080,
      "stop" : 1650040494080,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_account::0",
    "time" : {
      "start" : 1650040505567,
      "stop" : 1650040513239,
      "duration" : 7672
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Operator end balance: 0.004515108085247980372608 NEON 67236.38498796 SOL",
      "time" : {
        "start" : 1650040513069,
        "stop" : 1650040513069,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Account end balance: 1000 NEON",
      "time" : {
        "start" : 1650040513239,
        "stop" : 1650040513239,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "allure_environment::0",
    "time" : {
      "start" : 1650040513246,
      "stop" : 1650040513247,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "Basic: Json-RPC call tests - transactions validation"
  }, {
    "name" : "parentSuite",
    "value" : "integration.tests.basic"
  }, {
    "name" : "suite",
    "value" : "test_transfers"
  }, {
    "name" : "subSuite",
    "value" : "TestRpcCallsTransactionsValidation"
  }, {
    "name" : "host",
    "value" : "fv-az445-589"
  }, {
    "name" : "thread",
    "value" : "1935-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "integration.tests.basic.test_transfers"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "action",
    "value" : "<function S_ACTION at 0x7f75e27f8700>"
  }, {
    "name" : "value",
    "value" : "340282366920938463426481119284349108225"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 8,
        "skipped" : 0,
        "passed" : 0,
        "unknown" : 0,
        "total" : 8
      },
      "items" : [ {
        "uid" : "a0129c2364cb398c",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/feature/25f/867//#testresult/a0129c2364cb398c",
        "status" : "broken",
        "statusDetails" : "AttributeError: can't set attribute",
        "time" : {
          "start" : 1650039101757,
          "stop" : 1650039102275,
          "duration" : 518
        }
      }, {
        "uid" : "bce2ee291429007f",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/feature/25f/865//#testresult/bce2ee291429007f",
        "status" : "broken",
        "statusDetails" : "AttributeError: can't set attribute",
        "time" : {
          "start" : 1650038374414,
          "stop" : 1650038375283,
          "duration" : 869
        }
      }, {
        "uid" : "482e54074b5f8f0d",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/feature/25f/863//#testresult/482e54074b5f8f0d",
        "status" : "broken",
        "statusDetails" : "AttributeError: can't set attribute",
        "time" : {
          "start" : 1650036440222,
          "stop" : 1650036440906,
          "duration" : 684
        }
      }, {
        "uid" : "f459a789a7b39b7e",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/feature/25f/861//#testresult/f459a789a7b39b7e",
        "status" : "broken",
        "statusDetails" : "AttributeError: can't set attribute",
        "time" : {
          "start" : 1650035618727,
          "stop" : 1650035619586,
          "duration" : 859
        }
      }, {
        "uid" : "ea8f7a724d5e0fbc",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/feature/25f/859//#testresult/ea8f7a724d5e0fbc",
        "status" : "broken",
        "statusDetails" : "AttributeError: can't set attribute",
        "time" : {
          "start" : 1650034751870,
          "stop" : 1650034752734,
          "duration" : 864
        }
      }, {
        "uid" : "4f34c0f2d7665c49",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/feature/25f/857//#testresult/4f34c0f2d7665c49",
        "status" : "broken",
        "statusDetails" : "AttributeError: can't set attribute",
        "time" : {
          "start" : 1650032623095,
          "stop" : 1650032623638,
          "duration" : 543
        }
      }, {
        "uid" : "183774e898d6677d",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/feature/25f/855//#testresult/183774e898d6677d",
        "status" : "broken",
        "statusDetails" : "TypeError: S_ACTION() missing 1 required positional argument: 'value'",
        "time" : {
          "start" : 1650031798612,
          "stop" : 1650031799300,
          "duration" : 688
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "69a6a32a0aeb514a.json",
  "parameterValues" : [ "<function S_ACTION at 0x7f75e27f8700>", "340282366920938463426481119284349108225" ]
}