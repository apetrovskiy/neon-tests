{
  "uid" : "9f36c3af1f4654a0",
  "name" : "test_generate_bad_sign[0.01-None-Transaction had invalid fields: {'gas']",
  "fullName" : "integration.tests.basic.test_transfers.TestRpcCallsTransactionsValidation#test_generate_bad_sign",
  "historyId" : "0014a5c839b4d869856aec7c53a74865",
  "time" : {
    "start" : 1650124999173,
    "stop" : 1650124999381,
    "duration" : 208
  },
  "description" : "Generate bad sign (when v, r, s over allowed size)",
  "descriptionHtml" : "<p>Generate bad sign (when v, r, s over allowed size)</p>\n",
  "status" : "broken",
  "statusMessage" : "TypeError: Transaction had invalid fields: {'gas': 0.01}",
  "statusTrace" : "self = <integration.tests.basic.test_transfers.TestRpcCallsTransactionsValidation object at 0x7f136a8b6fa0>\ngas_limit = 0.01, gas_price = None\nexpected_message = \"Transaction had invalid fields: {'gas'\"\nprepare_accounts = None\n\n    @pytest.mark.parametrize(\"gas_limit,gas_price,expected_message\", GAS_LIMIT_AND_PRICE_DATA)\n    # def test_gas_limit_and_gas_price(self, gas_limit, gas_price, expected_message, prepare_accounts):\n    #     \"\"\"Too low gas_limit\n    #     Too high gas_limit > u64::max\n    #     Too high gas_limit > u64::max\n    #     Too high gas_price > u64::max\n    #     Too high gas_limit * gas_price > u64::max\n    #     \"\"\"\n    #     amount = InputData.DEFAULT_TRANSFER_AMOUNT.value\n    #     self.process_transaction_with_failure(\n    #         self.sender_account,\n    #         self.recipient_account,\n    #         amount,\n    #         gas=gas_limit,\n    #         gas_price=gas_price,\n    #         error_message=expected_message)\n    #     self.assert_balance(self.sender_account.address,\n    #                         InputData.FAUCET_1ST_REQUEST_AMOUNT.value)\n    #     self.assert_balance(self.recipient_account.address,\n    #                         InputData.FAUCET_1ST_REQUEST_AMOUNT.value)\n    # @pytest.mark.parametrize(\"gas_limit,gas_price,expected_message\", GAS_LIMIT_AND_PRICE_DATA)\n    def test_generate_bad_sign(self, gas_limit, gas_price, expected_message, prepare_accounts):\n        \"\"\"Generate bad sign (when v, r, s over allowed size)\"\"\"\n    \n        transaction = self.get_transaction_data(\n            gas_limit=gas_limit, gas_price=gas_price)\n    \n>       signed_tx = self.web3_client.eth.account.sign_transaction(\n            transaction, self.sender_account.key)\n\nintegration/tests/basic/test_transfers.py:384: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.9.12/x64/lib/python3.9/site-packages/eth_utils/decorators.py:18: in _wrapper\n    return self.method(obj, *args, **kwargs)\n/opt/hostedtoolcache/Python/3.9.12/x64/lib/python3.9/site-packages/eth_account/account.py:748: in sign_transaction\n    ) = sign_transaction_dict(account._key_obj, sanitized_transaction)\n/opt/hostedtoolcache/Python/3.9.12/x64/lib/python3.9/site-packages/eth_account/_utils/signing.py:32: in sign_transaction_dict\n    unsigned_transaction = serializable_unsigned_transaction_from_dict(transaction_dict)\n/opt/hostedtoolcache/Python/3.9.12/x64/lib/python3.9/site-packages/eth_account/_utils/legacy_transactions.py:44: in serializable_unsigned_transaction_from_dict\n    assert_valid_fields(transaction_dict)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ntransaction_dict = {'chainId': 111, 'gas': 0.01, 'gasPrice': 487412400000, 'nonce': 0, ...}\n\n    def assert_valid_fields(transaction_dict):\n        # check if any keys are missing\n        missing_keys = REQUIRED_TRANSACTION_KEYS.difference(transaction_dict.keys())\n        if missing_keys:\n            raise TypeError(\"Transaction must include these fields: %r\" % missing_keys)\n    \n        # check if any extra keys were specified\n        superfluous_keys = set(transaction_dict.keys()).difference(ALLOWED_TRANSACTION_KEYS)\n        if superfluous_keys:\n            raise TypeError(\"Transaction must not include unrecognized fields: %r\" % superfluous_keys)\n    \n        # check for valid types in each field\n        valid_fields: Dict[str, bool]\n        valid_fields = apply_formatters_to_dict(LEGACY_TRANSACTION_VALID_VALUES, transaction_dict)\n        if not all(valid_fields.values()):\n            invalid = {key: transaction_dict[key] for key, valid in valid_fields.items() if not valid}\n>           raise TypeError(\"Transaction had invalid fields: %r\" % invalid)\nE           TypeError: Transaction had invalid fields: {'gas': 0.01}\n\n/opt/hostedtoolcache/Python/3.9.12/x64/lib/python3.9/site-packages/eth_account/_utils/legacy_transactions.py:109: TypeError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "web3_client",
    "time" : {
      "start" : 1650124789060,
      "stop" : 1650124789061,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "pytestconfig",
    "time" : {
      "start" : 1650124789060,
      "stop" : 1650124789060,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "allure_environment",
    "time" : {
      "start" : 1650124789062,
      "stop" : 1650124789881,
      "duration" : 819
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "operator",
    "time" : {
      "start" : 1650124789882,
      "stop" : 1650124789883,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "faucet",
    "time" : {
      "start" : 1650124789882,
      "stop" : 1650124789882,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "jsonrpc_requester",
    "time" : {
      "start" : 1650124789882,
      "stop" : 1650124789882,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "sol_client",
    "time" : {
      "start" : 1650124789883,
      "stop" : 1650124789883,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_account",
    "time" : {
      "start" : 1650124990973,
      "stop" : 1650124996249,
      "duration" : 5276
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Create account for tests",
      "time" : {
        "start" : 1650124990973,
        "stop" : 1650124990978,
        "duration" : 5
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Request 1000 NEON from faucet for 0xE1C7D80076C1Eeaf26dF0a5f8166b68aB35D941c",
      "time" : {
        "start" : 1650124990978,
        "stop" : 1650124991794,
        "duration" : 816
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Operator initial balance: 0.004627043440088789796768 NEON 67012.78841896 SOL",
      "time" : {
        "start" : 1650124996249,
        "stop" : 1650124996249,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 3,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "prepare",
    "time" : {
      "start" : 1650124997935,
      "stop" : 1650124997936,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_accounts",
    "time" : {
      "start" : 1650124997936,
      "stop" : 1650124999172,
      "duration" : 1236
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_account",
    "time" : {
      "start" : 1650124997936,
      "stop" : 1650124997936,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_json_rpc_requester",
    "time" : {
      "start" : 1650124997936,
      "stop" : 1650124997936,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ {
    "name" : "prepare_accounts::0",
    "time" : {
      "start" : 1650124999488,
      "stop" : 1650124999488,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_account::0",
    "time" : {
      "start" : 1650125005896,
      "stop" : 1650125010331,
      "duration" : 4435
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Operator end balance: 0.004627043440088789796768 NEON 67012.76965048 SOL",
      "time" : {
        "start" : 1650125010228,
        "stop" : 1650125010228,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Account end balance: 1000 NEON",
      "time" : {
        "start" : 1650125010330,
        "stop" : 1650125010331,
        "duration" : 1
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "allure_environment::0",
    "time" : {
      "start" : 1650125010339,
      "stop" : 1650125010339,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "Basic: Json-RPC call tests - transactions validation"
  }, {
    "name" : "parentSuite",
    "value" : "integration.tests.basic"
  }, {
    "name" : "suite",
    "value" : "test_transfers"
  }, {
    "name" : "subSuite",
    "value" : "TestRpcCallsTransactionsValidation"
  }, {
    "name" : "host",
    "value" : "fv-az193-127"
  }, {
    "name" : "thread",
    "value" : "1849-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "integration.tests.basic.test_transfers"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "expected_message",
    "value" : "'Transaction had invalid fields: {'gas''"
  }, {
    "name" : "gas_limit",
    "value" : "0.01"
  }, {
    "name" : "gas_price",
    "value" : "None"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 7,
        "skipped" : 0,
        "passed" : 0,
        "unknown" : 0,
        "total" : 7
      },
      "items" : [ {
        "uid" : "20b3589e9db57af6",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/feature/25f/893//#testresult/20b3589e9db57af6",
        "status" : "broken",
        "statusDetails" : "TypeError: Transaction had invalid fields: {'gas': 0.01}",
        "time" : {
          "start" : 1650123844816,
          "stop" : 1650123845163,
          "duration" : 347
        }
      }, {
        "uid" : "22c0fcc2d435019e",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/feature/25f/891//#testresult/22c0fcc2d435019e",
        "status" : "broken",
        "statusDetails" : "TypeError: Transaction had invalid fields: {'gas': 0.01}",
        "time" : {
          "start" : 1650122925838,
          "stop" : 1650122926177,
          "duration" : 339
        }
      }, {
        "uid" : "8906f652788d5bb1",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/feature/25f/889//#testresult/8906f652788d5bb1",
        "status" : "broken",
        "statusDetails" : "TypeError: Transaction must include these fields: {'gasPrice'}",
        "time" : {
          "start" : 1650121887134,
          "stop" : 1650121887307,
          "duration" : 173
        }
      }, {
        "uid" : "7ef9d02057d0a425",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/feature/25f/887//#testresult/7ef9d02057d0a425",
        "status" : "broken",
        "statusDetails" : "TypeError: Transaction must include these fields: {'gasPrice'}",
        "time" : {
          "start" : 1650116965011,
          "stop" : 1650116965117,
          "duration" : 106
        }
      }, {
        "uid" : "a13a47b20974334",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/feature/25f/885//#testresult/a13a47b20974334",
        "status" : "broken",
        "statusDetails" : "TypeError: Transaction must include these fields: {'gasPrice'}",
        "time" : {
          "start" : 1650114580612,
          "stop" : 1650114580785,
          "duration" : 173
        }
      }, {
        "uid" : "9323b4be2f4c403e",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/feature/25f/883//#testresult/9323b4be2f4c403e",
        "status" : "broken",
        "statusDetails" : "TypeError: Unsupported type: '<class 'float'>'.  Must be one of: bool, str, bytes, bytearrayor int.",
        "time" : {
          "start" : 1650048216720,
          "stop" : 1650048216892,
          "duration" : 172
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "9f36c3af1f4654a0.json",
  "parameterValues" : [ "'Transaction had invalid fields: {'gas''", "0.01", "None" ]
}