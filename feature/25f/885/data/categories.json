{
  "uid" : "4b4757e66a1912dae1a509f688f20b0f",
  "children" : [ {
    "name" : "Test defects",
    "children" : [ {
      "name" : "TypeError: Transaction must include these fields: {'gasPrice'}",
      "children" : [ {
        "name" : "test_generate_bad_sign[1-None-gas limit reached]",
        "uid" : "91370232578f1441",
        "parentUid" : "d97ad279c0d5b61a80528dcb71ce98f5",
        "status" : "broken",
        "time" : {
          "start" : 1650114578941,
          "stop" : 1650114579118,
          "duration" : 177
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ "'gas limit reached'", "1", "None" ]
      }, {
        "name" : "test_generate_bad_sign[0.01-None-Transaction had invalid fields: {'gas']",
        "uid" : "a13a47b20974334",
        "parentUid" : "d97ad279c0d5b61a80528dcb71ce98f5",
        "status" : "broken",
        "time" : {
          "start" : 1650114580612,
          "stop" : 1650114580785,
          "duration" : 173
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ "'Transaction had invalid fields: {'gas''", "0.01", "None" ]
      }, {
        "name" : "test_generate_bad_sign[18446744073709551616-None-insufficient funds for transfer]",
        "uid" : "efb10624711499ec",
        "parentUid" : "d97ad279c0d5b61a80528dcb71ce98f5",
        "status" : "broken",
        "time" : {
          "start" : 1650114582227,
          "stop" : 1650114582401,
          "duration" : 174
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ "'insufficient funds for transfer'", "18446744073709551616", "None" ]
      } ],
      "uid" : "d97ad279c0d5b61a80528dcb71ce98f5"
    } ],
    "uid" : "bdbf199525818fae7a8651db9eafe741"
  }, {
    "name" : "Product defects",
    "children" : [ {
      "name" : "AssertionError: The response type is error response\nassert False\n +  where False = <bound method BasicTests.assert_is_successful_response of <integration.tests.basic.test_transfers.TestRpcCallsTransactionsValidation object at 0x7f5053598ac0>>(JsonRpcErrorResponse(id=2, error={'code': -32000, 'message': 'gas limit reached: have 0 want 21000'}, jsonrpc='2.0'))\n +    where <bound method BasicTests.assert_is_successful_response of <integration.tests.basic.test_transfers.TestRpcCallsTransactionsValidation object at 0x7f5053598ac0>> = <integration.tests.basic.test_transfers.TestRpcCallsTransactionsValidation object at 0x7f5053598ac0>.assert_is_successful_response",
      "children" : [ {
        "name" : "test_generate_bad_sign[0-18446744073709551616-insufficient funds for transfer]",
        "uid" : "2ff7180f4c33f9eb",
        "parentUid" : "db763c09bd2b07b1debc9b3631c060eb",
        "status" : "failed",
        "time" : {
          "start" : 1650114583804,
          "stop" : 1650114584188,
          "duration" : 384
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ "'insufficient funds for transfer'", "0", "18446744073709551616" ]
      } ],
      "uid" : "db763c09bd2b07b1debc9b3631c060eb"
    }, {
      "name" : "AssertionError: The response type is error response\nassert False\n +  where False = <bound method BasicTests.assert_is_successful_response of <integration.tests.basic.test_transfers.TestRpcCallsTransactionsValidation object at 0x7f5053548190>>(JsonRpcErrorResponse(id=62, error={'code': -32000, 'message': 'insufficient funds for transfer: address 0xe7b3ab1b9532162cb80e17476611e6b7925792d0 have 5000000000000000000 want 18466744073709551616'}, jsonrpc='2.0'))\n +    where <bound method BasicTests.assert_is_successful_response of <integration.tests.basic.test_transfers.TestRpcCallsTransactionsValidation object at 0x7f5053548190>> = <integration.tests.basic.test_transfers.TestRpcCallsTransactionsValidation object at 0x7f5053548190>.assert_is_successful_response",
      "children" : [ {
        "name" : "test_generate_bad_sign[1-18446744073709551616-insufficient funds for transfer]",
        "uid" : "6ebee3ba884fd8df",
        "parentUid" : "457305883bfd1f287f31835bbbfa9d9f",
        "status" : "failed",
        "time" : {
          "start" : 1650114585577,
          "stop" : 1650114585938,
          "duration" : 361
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ "'insufficient funds for transfer'", "1", "18446744073709551616" ]
      } ],
      "uid" : "457305883bfd1f287f31835bbbfa9d9f"
    }, {
      "name" : "AssertionError: The response type is error response\nassert False\n +  where False = <bound method BasicTests.assert_is_successful_response of <integration.tests.basic.test_transfers.TestRpcCallsTransactionsValidation object at 0x7f5053731250>>(JsonRpcErrorResponse(id=42, error={'code': -32000, 'message': 'insufficient funds for transfer: address 0x6c7ac271ac48ea6632b48d5f88cc349bea36f283 have 5000000000000000000 want 18466744073709552000'}, jsonrpc='2.0'))\n +    where <bound method BasicTests.assert_is_successful_response of <integration.tests.basic.test_transfers.TestRpcCallsTransactionsValidation object at 0x7f5053731250>> = <integration.tests.basic.test_transfers.TestRpcCallsTransactionsValidation object at 0x7f5053731250>.assert_is_successful_response",
      "children" : [ {
        "name" : "test_generate_bad_sign[1000-18446744073709552-insufficient funds for transfer]",
        "uid" : "692f47575f37431",
        "parentUid" : "3ea20b08874b738af1722bb9e336deeb",
        "status" : "failed",
        "time" : {
          "start" : 1650114587325,
          "stop" : 1650114587693,
          "duration" : 368
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 0,
        "retriesStatusChange" : false,
        "parameters" : [ "'insufficient funds for transfer'", "1000", "18446744073709552" ]
      } ],
      "uid" : "3ea20b08874b738af1722bb9e336deeb"
    } ],
    "uid" : "8fb3a91ba5aaf9de24cc8a92edc82b5d"
  } ],
  "name" : "categories"
}