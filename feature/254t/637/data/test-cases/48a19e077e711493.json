{
  "uid" : "48a19e077e711493",
  "name" : "test_send_token_to_an_invalid_address",
  "fullName" : "integration.tests.basic.test_transfers.TestTransfer#test_send_token_to_an_invalid_address",
  "historyId" : "7414a102f68be6a72f24569f8e6cae78",
  "time" : {
    "start" : 1647623804710,
    "stop" : 1647623805003,
    "duration" : 293
  },
  "description" : "Send token to an invalid address",
  "descriptionHtml" : "<p>Send token to an invalid address</p>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: expected balance = 5, actual balance = 990.994",
  "statusTrace" : "self = <integration.tests.basic.test_transfers.TestTransfer object at 0x7f75367fba00>\n\n    def test_send_token_to_an_invalid_address(self):\n        \"\"\"Send token to an invalid address\"\"\"\n        sender_account = self.create_account_with_balance()\n    \n        self.process_transaction_with_failure(\n            sender_account, INVALID_ADDRESS,\n            InputData.DEFAULT_TRANSFER_AMOUNT.value, ENS_NAME_ERROR)\n    \n>       self.assert_balance(sender_account.address,\n                            InputData.FAUCET_1ST_REQUEST_AMOUNT.value)\n\nintegration/tests/basic/test_transfers.py:119: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nintegration/tests/basic/helpers/basic.py:144: in assert_balance\n    self.check_balance(expected_amount, balance)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <integration.tests.basic.test_transfers.TestTransfer object at 0x7f75367fba00>\nexpected = 5, actual = Decimal('990.993683080272')\n\n    def check_balance(self, expected: float, actual: Decimal):\n        '''Compares the balance with expectation'''\n        expected_dec = round(expected, InputData.ROUND_DIGITS.value)\n        actual_dec = float(round(actual, InputData.ROUND_DIGITS.value))\n    \n>       assert actual_dec == expected_dec, f\"expected balance = {expected_dec}, actual balance = {actual_dec}\"\nE       AssertionError: expected balance = 5, actual balance = 990.994\n\nintegration/tests/basic/helpers/basic.py:139: AssertionError",
  "flaky" : false,
  "newFailed" : true,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "pytestconfig",
    "time" : {
      "start" : 1647623796884,
      "stop" : 1647623796884,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "web3_client",
    "time" : {
      "start" : 1647623796885,
      "stop" : 1647623796887,
      "duration" : 2
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "allure_environment",
    "time" : {
      "start" : 1647623796887,
      "stop" : 1647623797817,
      "duration" : 930
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "operator",
    "time" : {
      "start" : 1647623797818,
      "stop" : 1647623797818,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "sol_client",
    "time" : {
      "start" : 1647623797818,
      "stop" : 1647623797819,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "faucet",
    "time" : {
      "start" : 1647623797818,
      "stop" : 1647623797818,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "jsonrpc_requester",
    "time" : {
      "start" : 1647623797818,
      "stop" : 1647623797818,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare",
    "time" : {
      "start" : 1647623804709,
      "stop" : 1647623804710,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_json_rpc_requester",
    "time" : {
      "start" : 1647623804710,
      "stop" : 1647623804710,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "Send token to an invalid address",
    "status" : "failed",
    "statusMessage" : "AssertionError: expected balance = 5, actual balance = 990.994",
    "statusTrace" : "self = <integration.tests.basic.test_transfers.TestTransfer object at 0x7f75367fba00>\n\n    def test_send_token_to_an_invalid_address(self):\n        \"\"\"Send token to an invalid address\"\"\"\n        sender_account = self.create_account_with_balance()\n    \n        self.process_transaction_with_failure(\n            sender_account, INVALID_ADDRESS,\n            InputData.DEFAULT_TRANSFER_AMOUNT.value, ENS_NAME_ERROR)\n    \n>       self.assert_balance(sender_account.address,\n                            InputData.FAUCET_1ST_REQUEST_AMOUNT.value)\n\nintegration/tests/basic/test_transfers.py:119: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nintegration/tests/basic/helpers/basic.py:144: in assert_balance\n    self.check_balance(expected_amount, balance)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <integration.tests.basic.test_transfers.TestTransfer object at 0x7f75367fba00>\nexpected = 5, actual = Decimal('990.993683080272')\n\n    def check_balance(self, expected: float, actual: Decimal):\n        '''Compares the balance with expectation'''\n        expected_dec = round(expected, InputData.ROUND_DIGITS.value)\n        actual_dec = float(round(actual, InputData.ROUND_DIGITS.value))\n    \n>       assert actual_dec == expected_dec, f\"expected balance = {expected_dec}, actual balance = {actual_dec}\"\nE       AssertionError: expected balance = 5, actual balance = 990.994\n\nintegration/tests/basic/helpers/basic.py:139: AssertionError",
    "steps" : [ {
      "name" : "Sending 3 from 0x10bA76E88cd03842eb45875e66a0CfD995Ab4D4A to 0x12345",
      "time" : {
        "start" : 1647623804714,
        "stop" : 1647623804898,
        "duration" : 184
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ {
      "uid" : "221c1d018e60226",
      "name" : "stdout",
      "source" : "221c1d018e60226.txt",
      "type" : "text/plain",
      "size" : 61
    } ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "allure_environment::0",
    "time" : {
      "start" : 1647623805311,
      "stop" : 1647623805311,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "Basic: transfer tests"
  }, {
    "name" : "parentSuite",
    "value" : "integration.tests.basic"
  }, {
    "name" : "suite",
    "value" : "test_transfers"
  }, {
    "name" : "subSuite",
    "value" : "TestTransfer"
  }, {
    "name" : "host",
    "value" : "fv-az445-625"
  }, {
    "name" : "thread",
    "value" : "1760-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "integration.tests.basic.test_transfers"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 1,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 1,
        "unknown" : 0,
        "total" : 2
      },
      "items" : [ {
        "uid" : "121618d655ef6023",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/feature/254t/628//#testresult/121618d655ef6023",
        "status" : "passed",
        "time" : {
          "start" : 1647622852996,
          "stop" : 1647622853930,
          "duration" : 934
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "48a19e077e711493.json",
  "parameterValues" : [ ]
}