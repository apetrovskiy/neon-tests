{
  "uid" : "466e77022f5d9699",
  "name" : "test_rpc_call_eth_getBalance",
  "fullName" : "integration.tests.basic.test_rpc_calls.TestRpcCalls#test_rpc_call_eth_getBalance",
  "historyId" : "2dad28e867bd73217d6347280269cf2e",
  "time" : {
    "start" : 1647660671370,
    "stop" : 1647660671468,
    "duration" : 98
  },
  "description" : "Verify implemented rpc calls work eth_getBalance",
  "descriptionHtml" : "<p>Verify implemented rpc calls work eth_getBalance</p>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: Wrong amount returned\nassert '0x6506f45d147f2c00' == '0x4563918244f40000'\n  - 0x4563918244f40000\n  + 0x6506f45d147f2c00",
  "statusTrace" : "self = <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7efe9d1d00a0>\n\n    @pytest.mark.only_stands\n    def test_rpc_call_eth_getBalance(self):\n        \"\"\"Verify implemented rpc calls work eth_getBalance\"\"\"\n        sender_account = self.create_account_with_balance()\n    \n        params = [sender_account.address, Tag.LATEST.value]\n        model = RpcRequestFactory.get_balance(params=params)\n        response = self.jsonrpc_requester.request_json_rpc(model)\n        actual_result = self.jsonrpc_requester.deserialize_response(response)\n    \n        assert actual_result.id == model.id, AssertMessage.WRONG_ID.value\n>       assert actual_result.result == InputData.FIRST_AMOUNT_IN_RESPONSE.value, AssertMessage.WRONG_AMOUNT.value\nE       AssertionError: Wrong amount returned\nE       assert '0x6506f45d147f2c00' == '0x4563918244f40000'\nE         - 0x4563918244f40000\nE         + 0x6506f45d147f2c00\n\nintegration/tests/basic/test_rpc_calls.py:145: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "pytestconfig",
    "time" : {
      "start" : 1647660662411,
      "stop" : 1647660662411,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "web3_client",
    "time" : {
      "start" : 1647660662411,
      "stop" : 1647660662413,
      "duration" : 2
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "allure_environment",
    "time" : {
      "start" : 1647660662414,
      "stop" : 1647660662605,
      "duration" : 191
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "faucet",
    "time" : {
      "start" : 1647660662605,
      "stop" : 1647660662605,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "operator",
    "time" : {
      "start" : 1647660662606,
      "stop" : 1647660662606,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "sol_client",
    "time" : {
      "start" : 1647660662606,
      "stop" : 1647660662606,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "jsonrpc_requester",
    "time" : {
      "start" : 1647660662606,
      "stop" : 1647660662606,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_json_rpc_requester",
    "time" : {
      "start" : 1647660671369,
      "stop" : 1647660671369,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare",
    "time" : {
      "start" : 1647660671369,
      "stop" : 1647660671369,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "Verify implemented rpc calls work eth_getBalance",
    "status" : "failed",
    "statusMessage" : "AssertionError: Wrong amount returned\nassert '0x6506f45d147f2c00' == '0x4563918244f40000'\n  - 0x4563918244f40000\n  + 0x6506f45d147f2c00",
    "statusTrace" : "self = <integration.tests.basic.test_rpc_calls.TestRpcCalls object at 0x7efe9d1d00a0>\n\n    @pytest.mark.only_stands\n    def test_rpc_call_eth_getBalance(self):\n        \"\"\"Verify implemented rpc calls work eth_getBalance\"\"\"\n        sender_account = self.create_account_with_balance()\n    \n        params = [sender_account.address, Tag.LATEST.value]\n        model = RpcRequestFactory.get_balance(params=params)\n        response = self.jsonrpc_requester.request_json_rpc(model)\n        actual_result = self.jsonrpc_requester.deserialize_response(response)\n    \n        assert actual_result.id == model.id, AssertMessage.WRONG_ID.value\n>       assert actual_result.result == InputData.FIRST_AMOUNT_IN_RESPONSE.value, AssertMessage.WRONG_AMOUNT.value\nE       AssertionError: Wrong amount returned\nE       assert '0x6506f45d147f2c00' == '0x4563918244f40000'\nE         - 0x4563918244f40000\nE         + 0x6506f45d147f2c00\n\nintegration/tests/basic/test_rpc_calls.py:145: AssertionError",
    "steps" : [ {
      "name" : "Request: JsonRpcRequest(id=1, method='eth_getBalance', params=['0x10bA76E88cd03842eb45875e66a0CfD995Ab4D4A', 'latest'], jsonrpc='2.0')",
      "time" : {
        "start" : 1647660671370,
        "stop" : 1647660671414,
        "duration" : 44
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Response: {'jsonrpc': '2.0', 'id': 1, 'result': '0x6506f45d147f2c00'}",
      "time" : {
        "start" : 1647660671414,
        "stop" : 1647660671414,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "allure_environment::0",
    "time" : {
      "start" : 1647660694939,
      "stop" : 1647660694939,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "Basic: Json-RPC call tests"
  }, {
    "name" : "tag",
    "value" : "only_stands"
  }, {
    "name" : "parentSuite",
    "value" : "integration.tests.basic"
  }, {
    "name" : "suite",
    "value" : "test_rpc_calls"
  }, {
    "name" : "subSuite",
    "value" : "TestRpcCalls"
  }, {
    "name" : "host",
    "value" : "fv-az193-883"
  }, {
    "name" : "thread",
    "value" : "1772-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "integration.tests.basic.test_rpc_calls"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 2,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 0,
        "unknown" : 0,
        "total" : 2
      },
      "items" : [ {
        "uid" : "ab525226769bb00e",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/feature/254t/664//#testresult/ab525226769bb00e",
        "status" : "failed",
        "statusDetails" : "AssertionError: Wrong amount returned\nassert '0x1caa1f25644099c00' == '0x4563918244f40000'\n  - 0x4563918244f40000\n  + 0x1caa1f25644099c00",
        "time" : {
          "start" : 1647660133838,
          "stop" : 1647660133909,
          "duration" : 71
        }
      } ]
    },
    "tags" : [ "only_stands" ]
  },
  "source" : "466e77022f5d9699.json",
  "parameterValues" : [ ]
}