{
  "uid" : "de58c33de29291c0",
  "name" : "test_check_erc_1820_transaction",
  "fullName" : "integration.tests.basic.test_transfers.TestTransfer#test_check_erc_1820_transaction",
  "historyId" : "a697185e63a792ee3e6aecd2c4303cab",
  "time" : {
    "start" : 1652702910125,
    "stop" : 1652702914351,
    "duration" : 4226
  },
  "description" : "Check ERC-1820 transaction (without chain_id in sign)",
  "descriptionHtml" : "<p>Check ERC-1820 transaction (without chain_id in sign)</p>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: expected balance = 12, actual balance = 10",
  "statusTrace" : "self = <integration.tests.basic.test_transfers.TestTransfer object at 0x7fbeb7b1e340>\n\n    def test_check_erc_1820_transaction(self):\n        \"\"\"Check ERC-1820 transaction (without chain_id in sign)\"\"\"\n    \n        amount = 100\n        sender_account = self.create_account_with_balance(amount)\n        recipient_account = self.create_account_with_balance()\n        transfer_amount = 2\n    \n        transaction = {\n            \"from\": sender_account.address,\n            \"to\": recipient_account.address,\n            \"value\": self.web3_client.toWei(transfer_amount, Unit.ETHER),\n            \"gasPrice\": self.web3_client.gas_price(),\n            \"gas\": 0,\n            \"nonce\": self.web3_client.eth.get_transaction_count(sender_account.address),\n        }\n        transaction[\"gas\"] = self.web3_client.eth.estimate_gas(transaction)\n        signed_tx = self.web3_client.eth.account.sign_transaction(transaction, sender_account.key)\n    \n        params = [signed_tx.rawTransaction.hex()]\n        model = RpcRequestFactory.build_send_raw_trx(params=params)\n        actual_result = self.json_rpc_client.do_call(model)\n    \n        assert actual_result.id == model.id, AssertMessage.WRONG_ID.value\n        assert self.assert_is_successful_response(actual_result), AssertMessage.WRONG_TYPE.value\n        assert \"0x\" in actual_result.result, AssertMessage.DOES_NOT_START_WITH_0X.value\n    \n        self.assert_balance(sender_account.address, amount - transfer_amount)\n>       self.assert_balance(recipient_account.address, InputData.FAUCET_1ST_REQUEST_AMOUNT.value + transfer_amount)\n\nintegration/tests/basic/test_transfers.py:344: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nintegration/tests/basic/helpers/basic.py:110: in assert_balance\n    self.check_balance(expected_amount, balance, rnd_dig=rnd_dig)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nexpected = 12, actual = 10.0, rnd_dig = None\n\n    @staticmethod\n    def check_balance(expected: float, actual: float, rnd_dig: int = InputData.ROUND_DIGITS.value):\n        \"\"\"Compares the balance with expectation\"\"\"\n        expected_dec = round(expected, rnd_dig)\n        actual_dec = round(actual, rnd_dig)\n    \n>       assert actual_dec == expected_dec, f\"expected balance = {expected_dec}, actual balance = {actual_dec}\"\nE       AssertionError: expected balance = 12, actual balance = 10\n\nintegration/tests/basic/helpers/basic.py:146: AssertionError",
  "flaky" : false,
  "newFailed" : true,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "pytestconfig",
    "time" : {
      "start" : 1652702701122,
      "stop" : 1652702701122,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "web3_client",
    "time" : {
      "start" : 1652702701122,
      "stop" : 1652702701123,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "allure_environment",
    "time" : {
      "start" : 1652702701123,
      "stop" : 1652702701753,
      "duration" : 630
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "faucet",
    "time" : {
      "start" : 1652702701753,
      "stop" : 1652702701753,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "json_rpc_client",
    "time" : {
      "start" : 1652702701753,
      "stop" : 1652702701754,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "sol_client",
    "time" : {
      "start" : 1652702701754,
      "stop" : 1652702701754,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "operator",
    "time" : {
      "start" : 1652702701754,
      "stop" : 1652702701754,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_account",
    "time" : {
      "start" : 1652702795999,
      "stop" : 1652702802043,
      "duration" : 6044
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Create account for tests",
      "time" : {
        "start" : 1652702795999,
        "stop" : 1652702796003,
        "duration" : 4
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Request 10000 NEON from faucet for 0xd15E7786A0C1E522524c95cdDB081aEA33a96bb9",
      "time" : {
        "start" : 1652702796003,
        "stop" : 1652702797446,
        "duration" : 1443
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Operator initial balance: 0.0 NEON 10065.153079436 SOL",
      "time" : {
        "start" : 1652702802043,
        "stop" : 1652702802043,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 3,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "prepare",
    "time" : {
      "start" : 1652702910125,
      "stop" : 1652702910125,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_account",
    "time" : {
      "start" : 1652702910125,
      "stop" : 1652702910125,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_env",
    "time" : {
      "start" : 1652702910125,
      "stop" : 1652702910125,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "Check ERC-1820 transaction (without chain_id in sign)",
    "status" : "failed",
    "statusMessage" : "AssertionError: expected balance = 12, actual balance = 10",
    "statusTrace" : "self = <integration.tests.basic.test_transfers.TestTransfer object at 0x7fbeb7b1e340>\n\n    def test_check_erc_1820_transaction(self):\n        \"\"\"Check ERC-1820 transaction (without chain_id in sign)\"\"\"\n    \n        amount = 100\n        sender_account = self.create_account_with_balance(amount)\n        recipient_account = self.create_account_with_balance()\n        transfer_amount = 2\n    \n        transaction = {\n            \"from\": sender_account.address,\n            \"to\": recipient_account.address,\n            \"value\": self.web3_client.toWei(transfer_amount, Unit.ETHER),\n            \"gasPrice\": self.web3_client.gas_price(),\n            \"gas\": 0,\n            \"nonce\": self.web3_client.eth.get_transaction_count(sender_account.address),\n        }\n        transaction[\"gas\"] = self.web3_client.eth.estimate_gas(transaction)\n        signed_tx = self.web3_client.eth.account.sign_transaction(transaction, sender_account.key)\n    \n        params = [signed_tx.rawTransaction.hex()]\n        model = RpcRequestFactory.build_send_raw_trx(params=params)\n        actual_result = self.json_rpc_client.do_call(model)\n    \n        assert actual_result.id == model.id, AssertMessage.WRONG_ID.value\n        assert self.assert_is_successful_response(actual_result), AssertMessage.WRONG_TYPE.value\n        assert \"0x\" in actual_result.result, AssertMessage.DOES_NOT_START_WITH_0X.value\n    \n        self.assert_balance(sender_account.address, amount - transfer_amount)\n>       self.assert_balance(recipient_account.address, InputData.FAUCET_1ST_REQUEST_AMOUNT.value + transfer_amount)\n\nintegration/tests/basic/test_transfers.py:344: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nintegration/tests/basic/helpers/basic.py:110: in assert_balance\n    self.check_balance(expected_amount, balance, rnd_dig=rnd_dig)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nexpected = 12, actual = 10.0, rnd_dig = None\n\n    @staticmethod\n    def check_balance(expected: float, actual: float, rnd_dig: int = InputData.ROUND_DIGITS.value):\n        \"\"\"Compares the balance with expectation\"\"\"\n        expected_dec = round(expected, rnd_dig)\n        actual_dec = round(actual, rnd_dig)\n    \n>       assert actual_dec == expected_dec, f\"expected balance = {expected_dec}, actual balance = {actual_dec}\"\nE       AssertionError: expected balance = 12, actual balance = 10\n\nintegration/tests/basic/helpers/basic.py:146: AssertionError",
    "steps" : [ {
      "name" : "Request params: {'id': 86, 'method': 'eth_sendRawTransaction', 'params': ['0xf86c80853b580885c0825208940d1383aeba14de7d4e60109bcaa96c162cca1d16881bc16d674ec80000801ca0ed15eadb3efed29ee7527c2af81f7ebd1fb875e30fa598f189af18774453126ba032b023d08ea29e7c835fca58656715f67c3cec2e3d240013cab4c004a012afdd'], 'jsonrpc': '2.0'}",
      "time" : {
        "start" : 1652702912719,
        "stop" : 1652702914221,
        "duration" : 1502
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Response data: {'jsonrpc': '2.0', 'id': 86, 'result': '0xf3647ed65d47c759df4dca1f68882debf3f15d195d59972242b10d2cc2c1ae90'}",
        "time" : {
          "start" : 1652702914221,
          "stop" : 1652702914221,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 1,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "f6f3547fb151575c",
      "name" : "stdout",
      "source" : "f6f3547fb151575c.txt",
      "type" : "text/plain",
      "size" : 96
    } ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "prepare_account::0",
    "time" : {
      "start" : 1652702914367,
      "stop" : 1652702919112,
      "duration" : 4745
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Operator end balance: 0.0 NEON 10065.153079436 SOL",
      "time" : {
        "start" : 1652702919046,
        "stop" : 1652702919046,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Account end balance: 10000 NEON",
      "time" : {
        "start" : 1652702919112,
        "stop" : 1652702919112,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "allure_environment::0",
    "time" : {
      "start" : 1652702956708,
      "stop" : 1652702956708,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "Basic: transfer tests"
  }, {
    "name" : "parentSuite",
    "value" : "integration.tests.basic"
  }, {
    "name" : "suite",
    "value" : "test_transfers"
  }, {
    "name" : "subSuite",
    "value" : "TestTransfer"
  }, {
    "name" : "host",
    "value" : "fv-az129-437"
  }, {
    "name" : "thread",
    "value" : "1819-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "integration.tests.basic.test_transfers"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 1,
        "broken" : 3,
        "skipped" : 0,
        "passed" : 5,
        "unknown" : 0,
        "total" : 9
      },
      "items" : [ {
        "uid" : "bb470219594cfec7",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/devnet/feature/25p/1156//#testresult/bb470219594cfec7",
        "status" : "passed",
        "time" : {
          "start" : 1652699994087,
          "stop" : 1652699999857,
          "duration" : 5770
        }
      }, {
        "uid" : "fa1f1a90b82fd6c9",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/devnet/feature/25p/1154//#testresult/fa1f1a90b82fd6c9",
        "status" : "passed",
        "time" : {
          "start" : 1652698247879,
          "stop" : 1652698253119,
          "duration" : 5240
        }
      }, {
        "uid" : "23c571530574eac3",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/devnet/feature/25p/1152//#testresult/23c571530574eac3",
        "status" : "passed",
        "time" : {
          "start" : 1652697233233,
          "stop" : 1652697238487,
          "duration" : 5254
        }
      }, {
        "uid" : "5c1e74cc26d85372",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/devnet/feature/25p/1150//#testresult/5c1e74cc26d85372",
        "status" : "passed",
        "time" : {
          "start" : 1652696194952,
          "stop" : 1652696200092,
          "duration" : 5140
        }
      }, {
        "uid" : "121548128b7f4e8e",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/devnet/feature/25p/1148//#testresult/121548128b7f4e8e",
        "status" : "passed",
        "time" : {
          "start" : 1652695119130,
          "stop" : 1652695124437,
          "duration" : 5307
        }
      }, {
        "uid" : "1391ac699e8a30f5",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/devnet/feature/25p/1146//#testresult/1391ac699e8a30f5",
        "status" : "broken",
        "statusDetails" : "TypeError: 'bool' object is not callable",
        "time" : {
          "start" : 1652694048924,
          "stop" : 1652694048924,
          "duration" : 0
        }
      }, {
        "uid" : "2047ea9a2b280ec1",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/devnet/feature/25p/1144//#testresult/2047ea9a2b280ec1",
        "status" : "broken",
        "statusDetails" : "AttributeError: 'bool' object has no attribute 'status_code'",
        "time" : {
          "start" : 1652693649931,
          "stop" : 1652693649931,
          "duration" : 0
        }
      }, {
        "uid" : "f3a748f5bbd82a8c",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/devnet/feature/25p/1142//#testresult/f3a748f5bbd82a8c",
        "status" : "broken",
        "statusDetails" : "NameError: name 'HttpStatus' is not defined",
        "time" : {
          "start" : 1652693147633,
          "stop" : 1652693147633,
          "duration" : 0
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "de58c33de29291c0.json",
  "parameterValues" : [ ]
}