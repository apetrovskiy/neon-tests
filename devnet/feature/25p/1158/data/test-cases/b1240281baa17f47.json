{
  "uid" : "b1240281baa17f47",
  "name" : "test_generate_bad_sign[0-18446744073709551616-insufficient funds for transfer]",
  "fullName" : "integration.tests.basic.test_transfers.TestTransactionsValidation#test_generate_bad_sign",
  "historyId" : "c997e97addd3955860db880961b20111",
  "time" : {
    "start" : 1652701925580,
    "stop" : 1652701925580,
    "duration" : 0
  },
  "description" : "Generate bad sign (when v, r, s over allowed size)\n        Too low gas_limit\n        Too high gas_limit > u64::max\n        Too high gas_limit > u64::max\n        Too high gas_price > u64::max\n        Too high gas_limit * gas_price > u64::max\n        ",
  "descriptionHtml" : "<p>Generate bad sign (when v, r, s over allowed size)<br />\nToo low gas_limit<br />\nToo high gas_limit &gt; u64::max<br />\nToo high gas_limit &gt; u64::max<br />\nToo high gas_price &gt; u64::max<br />\nToo high gas_limit * gas_price &gt; u64::max</p>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: assert 0 == 10000\n +  where 0 = <bound method NeonWeb3Client.get_balance of <utils.web3client.NeonWeb3Client object at 0x7f47c1838f10>>(<eth_account.signers.local.LocalAccount object at 0x7f47c027f880>)\n +    where <bound method NeonWeb3Client.get_balance of <utils.web3client.NeonWeb3Client object at 0x7f47c1838f10>> = <utils.web3client.NeonWeb3Client object at 0x7f47c1838f10>.get_balance",
  "statusTrace" : "operator = <utils.operator.Operator object at 0x7f47c190c7c0>\nfaucet = <utils.faucet.Faucet object at 0x7f47c190caf0>\nweb3_client = <utils.web3client.NeonWeb3Client object at 0x7f47c1838f10>\n\n    @pytest.fixture(scope=\"class\")\n    def prepare_account(operator, faucet, web3_client: NeonWeb3Client):\n        \"\"\"Create new account for tests and save operator pre/post balances\"\"\"\n        with allure.step(\"Create account for tests\"):\n            acc = web3_client.eth.account.create()\n        with allure.step(f\"Request {NEON_AIRDROP_AMOUNT} NEON from faucet for {acc.address}\"):\n            faucet.request_neon(acc.address, NEON_AIRDROP_AMOUNT)\n>           assert web3_client.get_balance(acc) == NEON_AIRDROP_AMOUNT\nE           assert 0 == 10000\nE            +  where 0 = <bound method NeonWeb3Client.get_balance of <utils.web3client.NeonWeb3Client object at 0x7f47c1838f10>>(<eth_account.signers.local.LocalAccount object at 0x7f47c027f880>)\nE            +    where <bound method NeonWeb3Client.get_balance of <utils.web3client.NeonWeb3Client object at 0x7f47c1838f10>> = <utils.web3client.NeonWeb3Client object at 0x7f47c1838f10>.get_balance\n\nintegration/tests/conftest.py:115: AssertionError",
  "flaky" : false,
  "newFailed" : true,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "pytestconfig",
    "time" : {
      "start" : 1652701481670,
      "stop" : 1652701481670,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "web3_client",
    "time" : {
      "start" : 1652701481670,
      "stop" : 1652701481671,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "allure_environment",
    "time" : {
      "start" : 1652701481671,
      "stop" : 1652701482240,
      "duration" : 569
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "operator",
    "time" : {
      "start" : 1652701482241,
      "stop" : 1652701482241,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "faucet",
    "time" : {
      "start" : 1652701482241,
      "stop" : 1652701482241,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "json_rpc_client",
    "time" : {
      "start" : 1652701482241,
      "stop" : 1652701482241,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "sol_client",
    "time" : {
      "start" : 1652701482241,
      "stop" : 1652701482241,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "prepare_account",
    "time" : {
      "start" : 1652701924133,
      "stop" : 1652701925565,
      "duration" : 1432
    },
    "status" : "failed",
    "statusMessage" : "AssertionError: assert 0 == 10000\n +  where 0 = <bound method NeonWeb3Client.get_balance of <utils.web3client.NeonWeb3Client object at 0x7f47c1838f10>>(<eth_account.signers.local.LocalAccount object at 0x7f47c027f880>)\n +    where <bound method NeonWeb3Client.get_balance of <utils.web3client.NeonWeb3Client object at 0x7f47c1838f10>> = <utils.web3client.NeonWeb3Client object at 0x7f47c1838f10>.get_balance\n",
    "statusTrace" : "  File \"/opt/hostedtoolcache/Python/3.9.12/x64/lib/python3.9/site-packages/pluggy/_callers.py\", line 39, in _multicall\n    res = hook_impl.function(*args)\n  File \"/opt/hostedtoolcache/Python/3.9.12/x64/lib/python3.9/site-packages/_pytest/fixtures.py\", line 1126, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/opt/hostedtoolcache/Python/3.9.12/x64/lib/python3.9/site-packages/_pytest/fixtures.py\", line 925, in call_fixture_func\n    fixture_result = next(generator)\n  File \"/home/runner/work/neon-tests/neon-tests/integration/tests/conftest.py\", line 115, in prepare_account\n    assert web3_client.get_balance(acc) == NEON_AIRDROP_AMOUNT\n",
    "steps" : [ {
      "name" : "Create account for tests",
      "time" : {
        "start" : 1652701924133,
        "stop" : 1652701924137,
        "duration" : 4
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Request 10000 NEON from faucet for 0x4F3fbe64a76F85CE6302AF6B17043E1D20FDad28",
      "time" : {
        "start" : 1652701924137,
        "stop" : 1652701925565,
        "duration" : 1428
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: assert 0 == 10000\n +  where 0 = <bound method NeonWeb3Client.get_balance of <utils.web3client.NeonWeb3Client object at 0x7f47c1838f10>>(<eth_account.signers.local.LocalAccount object at 0x7f47c027f880>)\n +    where <bound method NeonWeb3Client.get_balance of <utils.web3client.NeonWeb3Client object at 0x7f47c1838f10>> = <utils.web3client.NeonWeb3Client object at 0x7f47c1838f10>.get_balance\n",
      "statusTrace" : "  File \"/home/runner/work/neon-tests/neon-tests/integration/tests/conftest.py\", line 115, in prepare_account\n    assert web3_client.get_balance(acc) == NEON_AIRDROP_AMOUNT\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "prepare",
    "time" : {
      "start" : 1652701925581,
      "stop" : 1652701925581,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ {
    "name" : "allure_environment::0",
    "time" : {
      "start" : 1652701925638,
      "stop" : 1652701925639,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "Basic: transactions validation"
  }, {
    "name" : "parentSuite",
    "value" : "integration.tests.basic"
  }, {
    "name" : "suite",
    "value" : "test_transfers"
  }, {
    "name" : "subSuite",
    "value" : "TestTransactionsValidation"
  }, {
    "name" : "host",
    "value" : "fv-az173-358"
  }, {
    "name" : "thread",
    "value" : "1790-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "integration.tests.basic.test_transfers"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "expected_message",
    "value" : "'insufficient funds for transfer'"
  }, {
    "name" : "gas_limit",
    "value" : "0"
  }, {
    "name" : "gas_price",
    "value" : "18446744073709551616"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 1,
        "broken" : 3,
        "skipped" : 0,
        "passed" : 5,
        "unknown" : 0,
        "total" : 9
      },
      "items" : [ {
        "uid" : "4d26f162abd40979",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/devnet/feature/25p/1156//#testresult/4d26f162abd40979",
        "status" : "passed",
        "time" : {
          "start" : 1652700020016,
          "stop" : 1652700023424,
          "duration" : 3408
        }
      }, {
        "uid" : "36686f5e58202ab",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/devnet/feature/25p/1154//#testresult/36686f5e58202ab",
        "status" : "passed",
        "time" : {
          "start" : 1652698272636,
          "stop" : 1652698276533,
          "duration" : 3897
        }
      }, {
        "uid" : "644c3e2202cd87",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/devnet/feature/25p/1152//#testresult/644c3e2202cd87",
        "status" : "passed",
        "time" : {
          "start" : 1652697253309,
          "stop" : 1652697256989,
          "duration" : 3680
        }
      }, {
        "uid" : "203b60b1b8adf0bb",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/devnet/feature/25p/1150//#testresult/203b60b1b8adf0bb",
        "status" : "passed",
        "time" : {
          "start" : 1652696216101,
          "stop" : 1652696219797,
          "duration" : 3696
        }
      }, {
        "uid" : "eee26bdff8e6c87d",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/devnet/feature/25p/1148//#testresult/eee26bdff8e6c87d",
        "status" : "passed",
        "time" : {
          "start" : 1652695141912,
          "stop" : 1652695146910,
          "duration" : 4998
        }
      }, {
        "uid" : "15bf9571dd52c18f",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/devnet/feature/25p/1146//#testresult/15bf9571dd52c18f",
        "status" : "broken",
        "statusDetails" : "TypeError: 'bool' object is not callable",
        "time" : {
          "start" : 1652694050991,
          "stop" : 1652694050991,
          "duration" : 0
        }
      }, {
        "uid" : "b6ae4ac5e15208bf",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/devnet/feature/25p/1144//#testresult/b6ae4ac5e15208bf",
        "status" : "broken",
        "statusDetails" : "AttributeError: 'bool' object has no attribute 'status_code'",
        "time" : {
          "start" : 1652693651315,
          "stop" : 1652693651315,
          "duration" : 0
        }
      }, {
        "uid" : "8bdee84e19c602e7",
        "reportUrl" : "https://apetrovskiy.github.io/neon-tests/devnet/feature/25p/1142//#testresult/8bdee84e19c602e7",
        "status" : "broken",
        "statusDetails" : "NameError: name 'HttpStatus' is not defined",
        "time" : {
          "start" : 1652693149544,
          "stop" : 1652693149544,
          "duration" : 0
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "b1240281baa17f47.json",
  "parameterValues" : [ "'insufficient funds for transfer'", "0", "18446744073709551616" ]
}